backslash_newline_space:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: backslash-newline-escape
  Regex: backslash and newline separated by space
  SFINAE: SFINAE_Suppress
  Text: backslash and newline separated by space
err_32_bit_builtin_64_bit_tgt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin is only available on 32-bit targets
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin is only available on 32-bit targets
err_64_bit_builtin_32_bit_tgt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin is only available on 64-bit targets
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin is only available on 64-bit targets
err__Pragma_malformed:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: _Pragma takes a parenthesized string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: _Pragma takes a parenthesized string literal
err_abi_tag_on_redeclaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot add 'abi_tag' attribute in a redeclaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot add 'abi_tag' attribute in a redeclaration
err_abstract_type_in_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:return|parameter|variable|field|instance variable|synthesized instance variable) type (.*) is an abstract class
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class'
err_access:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is a (?:private|protected) member of (.*)
  SFINAE: SFINAE_AccessControl
  Text: '%1 is a %select{private|protected}0 member of %3'
err_access_base_ctor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:base class|inherited virtual base class) (.*) has (?:private|protected) (?:default |copy |move |\*ERROR\* |\*ERROR\* |\*ERROR\*|)constructor
  SFINAE: SFINAE_AccessControl
  Text: '%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor'
err_access_ctor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: calling a (?:private|protected) constructor of class (.*)
  SFINAE: SFINAE_AccessControl
  Text: calling a %select{private|protected}0 constructor of class %2
err_access_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ISO C\+\+11 does not allow access declarations; use using declarations instead
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++11 does not allow access declarations; use using declarations instead
err_access_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: calling a (?:private|protected) destructor of class (.*)
  SFINAE: SFINAE_AccessControl
  Text: calling a %select{private|protected}1 destructor of class %0
err_access_dtor_base:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base class (.*) has (?:private|protected) destructor
  SFINAE: SFINAE_AccessControl
  Text: base class %0 has %select{private|protected}1 destructor
err_access_dtor_exception:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception object of type (.*) has (?:private|protected) destructor
  SFINAE: SFINAE_AccessControl
  Text: exception object of type %0 has %select{private|protected}1 destructor
err_access_dtor_field:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field of type (.*) has (?:private|protected) destructor
  SFINAE: SFINAE_AccessControl
  Text: field of type %1 has %select{private|protected}2 destructor
err_access_dtor_ivar:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variable of type (.*) has (?:private|protected) destructor
  SFINAE: SFINAE_AccessControl
  Text: instance variable of type %0 has %select{private|protected}1 destructor
err_access_dtor_temp:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: temporary of type (.*) has (?:private|protected) destructor
  SFINAE: SFINAE_AccessControl
  Text: temporary of type %0 has %select{private|protected}1 destructor
err_access_dtor_var:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable of type (.*) has (?:private|protected) destructor
  SFINAE: SFINAE_AccessControl
  Text: variable of type %1 has %select{private|protected}2 destructor
err_access_dtor_vbase:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inherited virtual base class (.*) has (?:private|protected) destructor
  SFINAE: SFINAE_AccessControl
  Text: inherited virtual base class %1 has %select{private|protected}2 destructor
err_access_field_ctor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field of type (.*) has (?:private|protected) (?:default |copy |move |\*ERROR\* |\*ERROR\* |\*ERROR\* |)constructor
  SFINAE: SFINAE_AccessControl
  Text: field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
err_access_friend_function:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend function (.*) is a (?:private|protected) member of (.*)
  SFINAE: SFINAE_AccessControl
  Text: friend function %1 is a %select{private|protected}0 member of %3
err_access_lambda_capture:
  ArgsCount: 2
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: capture of variable '(.*)' as type (.*) calls (?:private|protected) (?:default |copy |move |\*ERROR\* |\*ERROR\* |\*ERROR\* |)constructor
  SFINAE: SFINAE_AccessControl
  Text: capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
err_access_specifier_interface:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: interface types cannot specify '(?:private|protected)' access
  SFINAE: SFINAE_SubstitutionFailure
  Text: interface types cannot specify '%select{private|protected}0' access
err_addr_ovl_ambiguous:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address of overloaded function (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: address of overloaded function %0 is ambiguous
err_addr_ovl_no_qualifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot form member pointer of type (.*) without '&' and class name
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot form member pointer of type %0 without '&' and class name
err_addr_ovl_no_viable:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address of overloaded function (.*) does not match required type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address of overloaded function %0 does not match required type %1
err_addr_ovl_not_func_ptrref:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address of overloaded function (.*) cannot be converted to type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address of overloaded function %0 cannot be converted to type %1
err_address_of_function_with_pass_object_size_params:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot take address of function (.*) because parameter (.*) has pass_object_size attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot take address of function %0 because parameter %1 has pass_object_size attribute
err_address_of_label_outside_fn:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of address-of-label extension outside of a function body
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of address-of-label extension outside of a function body
err_address_space_mismatch_templ_inst:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting address space qualifiers are provided between types (.*) and (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting address space qualifiers are provided between types %0 and %1
err_address_space_qualified_delete:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''delete'' cannot delete objects of type (.*) in address space ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''delete'' cannot delete objects of type %0 in address space ''%1'''
err_address_space_qualified_new:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''new'' cannot allocate objects of type (.*) in address space ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''new'' cannot allocate objects of type %0 in address space ''%1'''
err_addrof_function_constraints_not_satisfied:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot take address of function (.*) because its constraints are not satisfied
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot take address of function %0 because its constraints are not satisfied
err_addrof_function_disabled_by_enable_if_attr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot take address of function (.*) because it has one or more non-tautological enable_if conditions
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot take address of function %0 because it has one or more non-tautological enable_if conditions
err_aix_attr_unsupported_tls_model:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: TLS model '(.*)' is not yet supported on AIX
  SFINAE: SFINAE_SubstitutionFailure
  Text: TLS model '%0' is not yet supported on AIX
err_aix_unsupported_tls_model:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: TLS model '(.*)' is not yet supported on AIX
  SFINAE: SFINAE_SubstitutionFailure
  Text: TLS model '%0' is not yet supported on AIX
err_alias_after_tentative:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: alias definition of (.*) after tentative definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: alias definition of %0 after tentative definition
err_alias_declaration_not_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: name defined in alias declaration must be an identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: name defined in alias declaration must be an identifier
err_alias_declaration_pack_expansion:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: alias declaration cannot be a pack expansion
  SFINAE: SFINAE_SubstitutionFailure
  Text: alias declaration cannot be a pack expansion
err_alias_declaration_specialization:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:partial specialization|explicit specialization|explicit instantiation) of alias templates is not permitted
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted'
err_alias_is_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition (.*) cannot also be an (?:alias|ifunc)
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition %0 cannot also be an %select{alias|ifunc}1
err_alias_not_supported_on_darwin:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: aliases are not supported on darwin
  SFINAE: SFINAE_SubstitutionFailure
  Text: aliases are not supported on darwin
err_alias_not_supported_on_nvptx:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CUDA does not support aliases
  SFINAE: SFINAE_SubstitutionFailure
  Text: CUDA does not support aliases
err_alias_template_extra_headers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous template parameter list in alias template declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous template parameter list in alias template declaration
err_alias_to_undefined:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:alias|ifunc) must point to a defined (?:variable or |)function
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{alias|ifunc}0 must point to a defined %select{variable or |}1function'
err_align_value_attribute_argument_not_int:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''align_value'' attribute requires integer constant'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''align_value'' attribute requires integer constant'
err_alignas_attribute_wrong_decl_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to a (?:function parameter|variable with 'register' storage class|'catch' variable|bit-field)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to a %select{function parameter|variable with ''register'' storage class|''catch'' variable|bit-field}1'
err_alignas_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration has different alignment requirement \((.*) vs (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration has different alignment requirement (%1 vs %0)
err_alignas_missing_on_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must be specified on definition if it is specified on any declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 must be specified on definition if it is specified on any declaration'
err_alignas_underaligned:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requested alignment is less than minimum alignment of (.*) for type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: requested alignment is less than minimum alignment of %1 for type %0
err_aligned_allocation_unavailable:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'aligned (?:allocation|deallocation) function of type ''(.*)'' is (?:only|not) available on (.*)(?: (.*) or newer|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: aligned %select{allocation|deallocation}0 function of type '%1' is %select{only|not}4 available on %2%select{ %3 or newer|}4
err_aligned_attribute_argument_not_int:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''aligned'' attribute requires integer constant'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''aligned'' attribute requires integer constant'
err_alignment_dependent_typedef_name:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requested alignment is dependent but declaration is not dependent
  SFINAE: SFINAE_SubstitutionFailure
  Text: requested alignment is dependent but declaration is not dependent
err_alignment_not_power_of_two:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requested alignment is not a power of 2
  SFINAE: SFINAE_SubstitutionFailure
  Text: requested alignment is not a power of 2
err_alignment_too_big:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requested alignment must be (.*) or smaller
  SFINAE: SFINAE_SubstitutionFailure
  Text: requested alignment must be %0 or smaller
err_alignment_too_small:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requested alignment must be (.*) or greater
  SFINAE: SFINAE_SubstitutionFailure
  Text: requested alignment must be %0 or greater
err_alignof_member_of_incomplete_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid application of 'alignof' to a field of a class still being defined
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid application of 'alignof' to a field of a class still being defined
err_allocation_of_abstract_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: allocating an object of abstract class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: allocating an object of abstract class type %0
err_altivec_empty_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected initializer
err_ambiguous_base_to_derived_cast:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous cast from base (.*) to derived (.*):(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous cast from base %0 to derived %1:%2
err_ambiguous_delete_operand:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous conversion of delete expression of type (.*) to a pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous conversion of delete expression of type %0 to a pointer
err_ambiguous_derived_to_base_conv:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous conversion from derived class (.*) to base class (.*):(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous conversion from derived class %0 to base class %1:%2
err_ambiguous_inherited_constructor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constructor of (.*) inherited from multiple base class subobjects
  SFINAE: SFINAE_SubstitutionFailure
  Text: constructor of %0 inherited from multiple base class subobjects
err_ambiguous_member_multiple_subobject_types:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member (.*) found in multiple base classes of different types
  SFINAE: SFINAE_SubstitutionFailure
  Text: member %0 found in multiple base classes of different types
err_ambiguous_member_multiple_subobjects:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-static member (.*) found in multiple base-class subobjects of type (.*):(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-static member %0 found in multiple base-class subobjects of type %1:%2
err_ambiguous_memptr_conv:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous conversion from pointer to member of (?:base|derived) class (.*) to pointer to member of (?:derived|base) class (.*):(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
err_ambiguous_reference:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to %0 is ambiguous
err_ambiguous_suitable_delete_member_function_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple suitable (.*) functions in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple suitable %0 functions in %1
err_ambiguous_tag_hiding:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a type named (.*) is hidden by a declaration in a different namespace
  SFINAE: SFINAE_SubstitutionFailure
  Text: a type named %0 is hidden by a declaration in a different namespace
err_analyzer_checker_incompatible_analyzer_option:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: checker cannot be enabled with analyzer option '(.*)' == (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: checker cannot be enabled with analyzer option '%0' == %1
err_analyzer_checker_option_invalid_input:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid input for checker option '(.*)', that expects (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid input for checker option '%0', that expects %1
err_analyzer_checker_option_unknown:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: checker '(.*)' has no option called '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: checker '%0' has no option called '%1'
err_analyzer_config_invalid_input:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid input for analyzer-config option '(.*)', that expects (.*) value
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid input for analyzer-config option '%0', that expects %1 value
err_analyzer_config_multiple_values:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: analyzer-config option '(.*)' should contain only one '='
  SFINAE: SFINAE_SubstitutionFailure
  Text: analyzer-config option '%0' should contain only one '='
err_analyzer_config_no_value:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: analyzer-config option '(.*)' has a key but no value
  SFINAE: SFINAE_SubstitutionFailure
  Text: analyzer-config option '%0' has a key but no value
err_analyzer_config_unknown:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown analyzer-config '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown analyzer-config '%0'
err_anon_bitfield_has_negative_width:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous bit-field has negative width \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous bit-field has negative width (%0)
err_anon_bitfield_member_init:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous bit-field cannot have a default member initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous bit-field cannot have a default member initializer
err_anon_bitfield_qualifiers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous bit-field cannot have qualifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous bit-field cannot have qualifiers
err_anon_type_definition:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of anonymous (.*) must be a definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of anonymous %0 must be a definition
err_anonymous_enum_bitfield:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ISO C\+\+ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field
err_anonymous_property:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous property is not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous property is not supported
err_anonymous_record_bad_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous (?:struct|union) can only contain non-static data members
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous %select{struct|union}0 can only contain non-static data members
err_anonymous_record_member_redecl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member of anonymous (?:struct|union) redeclares (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: member of anonymous %select{struct|union}0 redeclares %1
err_anonymous_record_nonpublic_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous (?:struct|union) cannot contain a (?:private|protected) data member
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
err_anonymous_record_with_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: functions cannot be declared in an anonymous (?:struct|union)
  SFINAE: SFINAE_SubstitutionFailure
  Text: functions cannot be declared in an anonymous %select{struct|union}0
err_anonymous_record_with_static:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static members cannot be declared in an anonymous (?:struct|union)
  SFINAE: SFINAE_SubstitutionFailure
  Text: static members cannot be declared in an anonymous %select{struct|union}0
err_anonymous_record_with_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: types cannot be declared in an anonymous (?:struct|union)
  SFINAE: SFINAE_SubstitutionFailure
  Text: types cannot be declared in an anonymous %select{struct|union}0
err_anonymous_struct_not_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous (?:structs|structs and classes) must be (?:struct or union|class) members
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
err_anonymous_union_not_static:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous unions at namespace or global scope must be declared 'static'
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous unions at namespace or global scope must be declared 'static'
err_anonymous_union_with_storage_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous union at class scope must not have a storage specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous union at class scope must not have a storage specifier
err_anyx86_interrupt_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:x86|x86-64) 'interrupt' attribute only applies to functions that have (?:a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a (.*) type as the second parameter)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{x86|x86-64}0 ''interrupt'' attribute only applies to functions that have %select{a ''void'' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1'
err_anyx86_interrupt_called:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: interrupt service routine cannot be called directly
  SFINAE: SFINAE_SubstitutionFailure
  Text: interrupt service routine cannot be called directly
err_arc_array_param_no_ownership:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: must explicitly describe intended ownership of an object array parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: must explicitly describe intended ownership of an object array parameter
err_arc_assign_property_ownership:
  ArgsCount: 2
  CategoryName: ARC and @properties
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: existing instance variable (.*) for property (.*) with (?:unsafe_unretained|assign) attribute must be __unsafe_unretained
  SFINAE: SFINAE_SubstitutionFailure
  Text: existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
err_arc_atomic_ownership:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'cannot perform atomic operation on a pointer to type (.*): type has non-trivial ownership'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership'
err_arc_autoreleasing_capture:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot capture __autoreleasing variable in a (?:block|lambda by copy)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
err_arc_autoreleasing_var:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:__block variables|global variables|fields|instance variables) cannot have __autoreleasing ownership
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership'
err_arc_bridge_cast_incompatible:
  ArgsCount: 2
  CategoryName: ARC Casting Rules
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible types casting (.*) to (.*) with a (?:__bridge|__bridge_transfer|__bridge_retained) cast
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
err_arc_bridge_cast_wrong_kind:
  ArgsCount: 2
  CategoryName: ARC Casting Rules
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cast of (?:Objective-C|block|C) pointer type (.*) to (?:Objective-C|block|C) pointer type (.*) cannot use (?:__bridge|__bridge_transfer|__bridge_retained)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
err_arc_bridge_retain:
  ArgsCount: 0
  CategoryName: ARC Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown cast annotation __bridge_retain; did you mean __bridge_retained\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown cast annotation __bridge_retain; did you mean __bridge_retained?
err_arc_cast_requires_bridge:
  ArgsCount: 2
  CategoryName: ARC Casting Rules
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:cast|implicit conversion) of (?:Objective-C|block|C) pointer type (.*) to (?:Objective-C|block|C) pointer type (.*) requires a bridged cast
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast'
err_arc_collection_forward:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: collection expression type (.*) is a forward declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: collection expression type %0 is a forward declaration
err_arc_convesion_of_weak_unavailable:
  ArgsCount: 2
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:implicit conversion|cast) of weak-unavailable object of type (.*) to a __weak object of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2'
err_arc_gained_method_convention:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method implementation does not match its declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: method implementation does not match its declaration
err_arc_illegal_explicit_message:
  ArgsCount: 1
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ARC forbids explicit message send of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ARC forbids explicit message send of %0
err_arc_illegal_method_def:
  ArgsCount: 1
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ARC forbids (?:implementation|synthesis) of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ARC forbids %select{implementation|synthesis}0 of %1
err_arc_illegal_selector:
  ArgsCount: 1
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ARC forbids use of (.*) in a @selector
  SFINAE: SFINAE_SubstitutionFailure
  Text: ARC forbids use of %0 in a @selector
err_arc_inconsistent_property_ownership:
  ArgsCount: 1
  CategoryName: ARC and @properties
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|unsafe_unretained|strong|weak) property (.*) may not also be declared (?:|__unsafe_unretained|__strong|__weak|__autoreleasing)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2'
err_arc_indirect_no_ownership:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:pointer|reference) to non-const type (.*) with no explicit ownership
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{pointer|reference}1 to non-const type %0 with no explicit ownership'
err_arc_init_method_unrelated_result_type:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: init methods must return a type related to the receiver type
  SFINAE: SFINAE_SubstitutionFailure
  Text: init methods must return a type related to the receiver type
err_arc_lost_method_convention:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method was declared as (?:an 'alloc'|a 'copy'|an 'init'|a 'new') method, but its implementation doesn't match because (?:its result type is not an object pointer|its result type is unrelated to its receiver type)
  SFINAE: SFINAE_SubstitutionFailure
  Text: method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
err_arc_may_not_respond:
  ArgsCount: 2
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no visible @interface for (.*) declares the selector (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no visible @interface for %0 declares the selector %1
err_arc_method_not_found:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no known (?:instance|class) method for selector (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no known %select{instance|class}1 method for selector %0
err_arc_mismatched_cast:
  ArgsCount: 3
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:implicit conversion|cast) of (?:(.*)|a non-Objective-C pointer type (.*)|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer) to (.*) is disallowed with ARC
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC'
err_arc_multiple_method_decl:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple methods named (.*) found with mismatched result, parameter type or attributes
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple methods named %0 found with mismatched result, parameter type or attributes
err_arc_new_array_without_ownership:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''new'' cannot allocate an array of (.*) with no explicit ownership'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''new'' cannot allocate an array of %0 with no explicit ownership'
err_arc_nolifetime_behavior:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit ownership qualifier on cast result has no effect
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit ownership qualifier on cast result has no effect
err_arc_nonlocal_writeback:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: passing address of (?:non-local|non-scalar) object to __autoreleasing parameter for write-back
  SFINAE: SFINAE_SubstitutionFailure
  Text: passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
err_arc_objc_property_default_assign_on_object:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
err_arc_perform_selector_retains:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: performSelector names a selector which retains the object
  SFINAE: SFINAE_SubstitutionFailure
  Text: performSelector names a selector which retains the object
err_arc_pseudo_dtor_inconstant_quals:
  ArgsCount: 2
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pseudo-destructor destroys object of type (.*) with inconsistently-qualified type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
err_arc_receiver_forward_class:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: receiver (.*) for class message is a forward declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: receiver %0 for class message is a forward declaration
err_arc_receiver_forward_instance:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: receiver type (.*) for instance message is a forward declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: receiver type %0 for instance message is a forward declaration
err_arc_strong_property_ownership:
  ArgsCount: 2
  CategoryName: ARC and @properties
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: existing instance variable (.*) for strong property (.*) may not be (?:|__unsafe_unretained||__weak)
  SFINAE: SFINAE_SubstitutionFailure
  Text: existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
err_arc_thread_ownership:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'thread-local variable has non-trivial ownership: type is (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'thread-local variable has non-trivial ownership: type is %0'
err_arc_typecheck_convert_incompatible_pointer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible pointer types passing retainable parameter of type (.*)to a CF function expecting (.*) type
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
err_arc_unsupported_on_runtime:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -fobjc-arc is not supported on platforms using the legacy runtime
  SFINAE: SFINAE_SubstitutionFailure
  Text: -fobjc-arc is not supported on platforms using the legacy runtime
err_arc_unsupported_on_toolchain:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -fobjc-arc is not supported on versions of OS X prior to 10\.6
  SFINAE: SFINAE_SubstitutionFailure
  Text: -fobjc-arc is not supported on versions of OS X prior to 10.6
err_arc_unsupported_weak_class:
  ArgsCount: 0
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class is incompatible with __weak references
  SFINAE: SFINAE_SubstitutionFailure
  Text: class is incompatible with __weak references
err_arc_unused_init_message:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the result of a delegate init call must be immediately returned or assigned to 'self'
  SFINAE: SFINAE_SubstitutionFailure
  Text: the result of a delegate init call must be immediately returned or assigned to 'self'
err_arc_weak_disabled:
  ArgsCount: 0
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot create __weak reference in file using manual reference counting
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot create __weak reference in file using manual reference counting
err_arc_weak_ivar_access:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
  SFINAE: SFINAE_SubstitutionFailure
  Text: dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
err_arc_weak_no_runtime:
  ArgsCount: 0
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot create __weak reference because the current deployment target does not support weak references
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot create __weak reference because the current deployment target does not support weak references
err_arc_weak_unavailable_assign:
  ArgsCount: 0
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: assignment of a weak-unavailable object to a __weak object
  SFINAE: SFINAE_SubstitutionFailure
  Text: assignment of a weak-unavailable object to a __weak object
err_arc_weak_unavailable_property:
  ArgsCount: 1
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: synthesizing __weak instance variable of type (.*), which does not support weak references
  SFINAE: SFINAE_SubstitutionFailure
  Text: synthesizing __weak instance variable of type %0, which does not support weak references
err_arch_unsupported_isa:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: architecture '(.*)' does not support '(.*)' execution mode
  SFINAE: SFINAE_SubstitutionFailure
  Text: architecture '%0' does not support '%1' execution mode
err_arcmt_nsinvocation_ownership:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: NSInvocation's (.*) is not safe to be used with an object with ownership other than __unsafe_unretained
  SFINAE: SFINAE_SubstitutionFailure
  Text: NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
err_arg_with_address_space:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter may not be qualified with an address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter may not be qualified with an address space
err_argument_invalid_range:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument value (.*) is outside the valid range \[(.*), (.*)\]
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument value %0 is outside the valid range [%1, %2]
err_argument_not_contiguous_bit_field:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument (.*) value should represent a contiguous bit field
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument %0 value should represent a contiguous bit field
err_argument_not_multiple:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument should be a multiple of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument should be a multiple of %0
err_argument_not_power_of_2:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument should be a power of 2
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument should be a power of 2
err_argument_not_shifted_byte:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument should be an 8-bit value shifted by a multiple of 8 bits
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument should be an 8-bit value shifted by a multiple of 8 bits
err_argument_not_shifted_byte_or_xxff:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument should be an 8-bit value shifted by a multiple of 8 bits, or in the form 0x\?\?FF
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument should be an 8-bit value shifted by a multiple of 8 bits, or in the form 0x??FF
err_argument_required_after_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument required after attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument required after attribute
err_arithmetic_nonfragile_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arithmetic on pointer to interface (.*), which is not a constant size for this architecture and platform
  SFINAE: SFINAE_SubstitutionFailure
  Text: arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
err_arm_invalid_coproc:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: coprocessor (.*) must be configured as (?:GCP|CDE)
  SFINAE: SFINAE_SubstitutionFailure
  Text: coprocessor %0 must be configured as %select{GCP|CDE}1
err_arm_invalid_specialreg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid special register for builtin
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid special register for builtin
err_array_designator_empty_range:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array designator range \[(.*), (.*)\] is empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: array designator range [%0, %1] is empty
err_array_designator_negative:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array designator value '(.*)' is negative
  SFINAE: SFINAE_SubstitutionFailure
  Text: array designator value '%0' is negative
err_array_designator_non_array:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array designator cannot initialize non-array type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array designator cannot initialize non-array type %0
err_array_designator_too_large:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array designator index \((.*)\) exceeds array bounds \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array designator index (%0) exceeds array bounds (%1)
err_array_incomplete_or_sizeless_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array has (?:incomplete|sizeless) element type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array has %select{incomplete|sizeless}0 element type %1
err_array_init_different_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot initialize array (?:of type \$ with array of type \$|with different type of array)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
err_array_init_incompat_wide_string_into_wchar:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializing wide char array with incompatible wide string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializing wide char array with incompatible wide string literal
err_array_init_narrow_string_into_wchar:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializing wide char array with non-wide string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializing wide char array with non-wide string literal
err_array_init_non_constant_array:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot initialize array (?:of type \$ with non-constant array of type \$|with different type of array)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
err_array_init_not_init_list:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array initializer must be an initializer list(?:| or string literal| or wide string literal)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array initializer must be an initializer list%select{| or string literal| or wide string literal}0
err_array_init_plain_string_into_char8_t:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializing 'char8_t' array with plain string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializing 'char8_t' array with plain string literal
err_array_init_utf8_string_into_char:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:|ISO C\+\+20 does not permit )initialization of char array with UTF-8 string literal(?: is not permitted by ''-fchar8_t''|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|ISO C++20 does not permit }0initialization of char array with UTF-8 string literal%select{ is not permitted by ''-fchar8_t''|}0'
err_array_init_wide_string_into_char:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializing char array with wide string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializing char array with wide string literal
err_array_new_needs_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array size must be specified in new expression with no initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: array size must be specified in new expression with no initializer
err_array_of_abstract_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array of abstract class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array of abstract class type %0
err_array_section_does_not_specify_contiguous_storage:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array section does not specify contiguous storage
  SFINAE: SFINAE_SubstitutionFailure
  Text: array section does not specify contiguous storage
err_array_section_does_not_specify_length:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array section does not specify length for outermost dimension
  SFINAE: SFINAE_SubstitutionFailure
  Text: array section does not specify length for outermost dimension
err_array_size_ambiguous_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous conversion of array size expression of type (.*) to an integral or enumeration type
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous conversion of array size expression of type %0 to an integral or enumeration type
err_array_size_explicit_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array size expression of type (.*) requires explicit conversion to type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array size expression of type %0 requires explicit conversion to type %1
err_array_size_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array size expression has incomplete class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array size expression has incomplete class type %0
err_array_size_non_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: size of array has non-integer type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: size of array has non-integer type %0
err_array_size_not_integral:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array size expression must have integral or (?:|unscoped )enumeration type, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array size expression must have integral or %select{|unscoped }0enumeration type, not %1
err_array_star_in_function_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable length array must be bound in function definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable length array must be bound in function definition
err_array_star_outside_prototype:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: star modifier used outside of function prototype
  SFINAE: SFINAE_SubstitutionFailure
  Text: star modifier used outside of function prototype
err_array_static_not_outermost:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) used in non-outermost array type derivation
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 used in non-outermost array type derivation'
err_array_static_outside_prototype:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) used in array declarator outside of function prototype
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 used in array declarator outside of function prototype'
err_array_too_large:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array is too large \((.*) elements\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array is too large (%0 elements)
err_as_qualified_auto_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: automatic variable qualified with an(?:| invalid) address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: automatic variable qualified with an%select{| invalid}0 address space
err_asm_bad_register_type:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: bad type for named register variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: bad type for named register variable
err_asm_duplicate_qual:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate asm qualifier '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate asm qualifier '%0'
err_asm_empty:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __asm used with no assembly instructions
  SFINAE: SFINAE_SubstitutionFailure
  Text: __asm used with no assembly instructions
err_asm_empty_symbolic_operand_name:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: empty symbolic operand name in inline assembly string
  SFINAE: SFINAE_SubstitutionFailure
  Text: empty symbolic operand name in inline assembly string
err_asm_incomplete_type:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: asm operand has incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: asm operand has incomplete type %0
err_asm_input_duplicate_match:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: more than one input constraint matches the same output '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: more than one input constraint matches the same output '%0'
err_asm_invalid_escape:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid % escape in inline assembly string
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid %% escape in inline assembly string
err_asm_invalid_global_var_reg:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: register '(.*)' unsuitable for global register variables on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: register '%0' unsuitable for global register variables on this target
err_asm_invalid_input_constraint:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid input constraint '(.*)' in asm
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid input constraint '%0' in asm
err_asm_invalid_input_size:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid input size for constraint '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid input size for constraint '%0'
err_asm_invalid_lvalue_in_input:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid lvalue in asm input for constraint '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid lvalue in asm input for constraint '%0'
err_asm_invalid_lvalue_in_output:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid lvalue in asm output
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid lvalue in asm output
err_asm_invalid_operand_number:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid operand number in inline asm string
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid operand number in inline asm string
err_asm_invalid_output_constraint:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid output constraint '(.*)' in asm
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid output constraint '%0' in asm
err_asm_invalid_output_size:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid output size for constraint '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid output size for constraint '%0'
err_asm_invalid_type:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid type (.*) in asm (?:input|output)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid type %0 in asm %select{input|output}1
err_asm_invalid_type_in_input:
  ArgsCount: 2
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid type (.*) in asm input for constraint '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid type %0 in asm input for constraint '%1'
err_asm_naked_parm_ref:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter references not allowed in naked functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter references not allowed in naked functions
err_asm_naked_this_ref:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''this'' pointer references not allowed in naked functions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''this'' pointer references not allowed in naked functions'
err_asm_non_addr_value_in_memory_constraint:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to a (?:bit-field|vector element|global register variable) in asm (?:input|output) with a memory constraint '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
err_asm_operand_wide_string_literal:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use (?:unicode|wide|an empty) string literal in 'asm'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use %select{unicode|wide|an empty}0 string literal in 'asm'
err_asm_qualifier_ignored:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'volatile', 'inline', 'goto', or '\('
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'volatile', 'inline', 'goto', or '('
err_asm_register_size_mismatch:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: size of register '(.*)' does not match variable size
  SFINAE: SFINAE_SubstitutionFailure
  Text: size of register '%0' does not match variable size
err_asm_tying_incompatible_types:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unsupported inline asm: input with type (?:\$ matching output with type \$|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unsupported inline asm: input with type %diff{$ matching output with type $|}0,1'
err_asm_unexpected_constraint_alternatives:
  ArgsCount: 2
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'asm constraint has an unexpected number of alternatives: (.*) vs (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'asm constraint has an unexpected number of alternatives: %0 vs %1'
err_asm_unknown_register_name:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown register name '(.*)' in asm
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown register name '%0' in asm
err_asm_unknown_symbolic_operand_name:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown symbolic operand name in inline assembly string
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown symbolic operand name in inline assembly string
err_asm_unterminated_symbolic_operand_name:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unterminated symbolic operand name in inline assembly string
  SFINAE: SFINAE_SubstitutionFailure
  Text: unterminated symbolic operand name in inline assembly string
err_asm_unwind_and_goto:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unwind clobber can't be used with asm goto
  SFINAE: SFINAE_SubstitutionFailure
  Text: unwind clobber can't be used with asm goto
err_assoc_compatible_types:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) in generic association compatible with previously specified type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 in generic association compatible with previously specified type %1
err_assoc_type_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) in generic association incomplete
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 in generic association incomplete
err_assoc_type_nonobject:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) in generic association not an object type
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 in generic association not an object type
err_assoc_type_variably_modified:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) in generic association is a variably modified type
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 in generic association is a variably modified type
err_ast_file_invalid:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: file '(.*)' is not a valid precompiled (?:PCH|module|AST) file
  SFINAE: SFINAE_SubstitutionFailure
  Text: file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
err_ast_file_not_found:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:PCH|module|AST) file ''(.*)'' not found(?:|: (.*))'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{PCH|module|AST}0 file ''%1'' not found%select{|: %3}2'
err_ast_file_out_of_date:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:PCH|module|AST) file ''(.*)'' is out of date and needs to be rebuilt(?:|: (.*))'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{PCH|module|AST}0 file ''%1'' is out of date and needs to be rebuilt%select{|: %3}2'
err_at_defs_cxx:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@defs is not supported in Objective-C\+\+'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@defs is not supported in Objective-C++'
err_at_in_class:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected '@' in member specification
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected '@' in member specification
err_atdef_nonfragile_interface:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of @defs is not supported on this architecture and platform
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of @defs is not supported on this architecture and platform
err_atimport:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of '@import' when modules are disabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of '@import' when modules are disabled
err_atomic_builtin_bit_int_prohibit:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument to atomic builtin of type '_BitInt' is not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument to atomic builtin of type '_BitInt' is not supported
err_atomic_builtin_cannot_be_const:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic builtin cannot be const-qualified \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic builtin cannot be const-qualified (%0 invalid)
err_atomic_builtin_ext_int_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Atomic memory operand must have a power-of-two size
  SFINAE: SFINAE_SubstitutionFailure
  Text: Atomic memory operand must have a power-of-two size
err_atomic_builtin_must_be_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic builtin must be a pointer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic builtin must be a pointer (%0 invalid)
err_atomic_builtin_must_be_pointer_intfltptr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic builtin must be a pointer to integer, floating-point or pointer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
err_atomic_builtin_must_be_pointer_intptr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic builtin must be a pointer to integer or pointer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
err_atomic_builtin_pointer_size:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
err_atomic_exclusive_builtin_pointer_size:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
err_atomic_load_store_uses_lib:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: atomic (?:load|store) requires runtime support that is not available for this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: atomic %select{load|store}0 requires runtime support that is not available for this target
err_atomic_op_has_invalid_synch_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: synchronization scope argument to atomic operation is invalid
  SFINAE: SFINAE_SubstitutionFailure
  Text: synchronization scope argument to atomic operation is invalid
err_atomic_op_needs_atomic:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic operation must be a pointer to _Atomic type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
err_atomic_op_needs_atomic_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic operation must be a pointer to (?:|atomic )integer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
err_atomic_op_needs_atomic_int_or_ptr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic operation must be a pointer to (?:|atomic )integer or pointer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
err_atomic_op_needs_atomic_int_ptr_or_fp:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic operation must be a pointer to (?:|atomic )integer, pointer or supported floating point type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic operation must be a pointer to %select{|atomic }0integer, pointer or supported floating point type (%1 invalid)
err_atomic_op_needs_non_const_atomic:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic operation must be a pointer to non-(?:const|constant) _Atomic type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
err_atomic_op_needs_non_const_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic operation must be a pointer to non-const type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic operation must be a pointer to non-const type (%0 invalid)
err_atomic_op_needs_trivial_copy:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to atomic operation must be a pointer to a trivially-copyable type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
err_atomic_property_nontrivial_assign_op:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: atomic property of reference type (.*) cannot have non-trivial assignment operator
  SFINAE: SFINAE_SubstitutionFailure
  Text: atomic property of reference type %0 cannot have non-trivial assignment operator
err_atomic_specifier_bad_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: _Atomic cannot be applied to (?:incomplete |array |function |reference |atomic |qualified |sizeless ||integer )type (.*) (?:|||||||which is not trivially copyable|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: _Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |sizeless ||integer }0type %1 %select{|||||||which is not trivially copyable|}0
err_atprotocol_protocol:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@protocol is using a forward protocol declaration of (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@protocol is using a forward protocol declaration of %0'
err_attr_cond_never_constant_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute expression never produces a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute expression never produces a constant expression'
err_attr_objc_ownership_redundant:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the type (.*) is already explicitly ownership-qualified
  SFINAE: SFINAE_SubstitutionFailure
  Text: the type %0 is already explicitly ownership-qualified
err_attr_swift_error_no_error_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute can only be applied to a (?:function|method) with an error parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute can only be applied to a %select{function|method}1 with an error parameter'
err_attr_swift_error_return_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute with '(.*)' convention can only be applied to a (?:function|method) returning (?:an integral type|a pointer)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute with ''%1'' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3'
err_attr_tlsmodel_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
  SFINAE: SFINAE_SubstitutionFailure
  Text: tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
err_attribute_address_function_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function type may not be qualified with an address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: function type may not be qualified with an address space
err_attribute_address_multiple_qualifiers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple address spaces specified for type
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple address spaces specified for type
err_attribute_address_space_negative:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address space is negative
  SFINAE: SFINAE_SubstitutionFailure
  Text: address space is negative
err_attribute_address_space_too_high:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address space is larger than the maximum supported \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address space is larger than the maximum supported (%0)
err_attribute_aligned_too_great:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requested alignment must be (.*) bytes or smaller
  SFINAE: SFINAE_SubstitutionFailure
  Text: requested alignment must be %0 bytes or smaller
err_attribute_argument_invalid:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*) attribute argument is invalid: (?:max must be 0 since min is 0|min must not be greater than max)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1'
err_attribute_argument_is_zero:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute must be greater than 0
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute must be greater than 0'
err_attribute_argument_n_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute requires parameter (.*) to be (?:int or bool|an integer constant|a string|an identifier|a constant expression|a builtin function)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier|a constant expression|a builtin function}2'
err_attribute_argument_out_of_bounds:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute parameter (.*) is out of bounds
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute parameter %1 is out of bounds'
err_attribute_argument_out_of_bounds_extra_info:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*) attribute parameter (.*) is out of bounds: (?:no parameters to index into|can only be 1, since there is one parameter|must be between 1 and (.*))'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2'
err_attribute_argument_out_of_range:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute requires integer constant between (.*) and (.*) inclusive
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute requires integer constant between %1 and %2 inclusive'
err_attribute_argument_parm_pack_not_supported:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) does not support argument pack expansion
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 does not support argument pack expansion
err_attribute_argument_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute requires (?:int or bool|an integer constant|a string|an identifier)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1'
err_attribute_arm_builtin_alias:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__clang_arm_builtin_alias'' attribute can only be applied to an ARM builtin'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__clang_arm_builtin_alias'' attribute can only be applied to an ARM builtin'
err_attribute_arm_feature_sve_bits_unsupported:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is only supported when '-msve-vector-bits=<bits>' is specified with a value of 128, 256, 512, 1024 or 2048\.
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is only supported when ''-msve-vector-bits=<bits>'' is specified with a value of 128, 256, 512, 1024 or 2048.'
err_attribute_arm_mve_polymorphism:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__clang_arm_mve_strict_polymorphism'' attribute can only be applied to an MVE/NEON vector type'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__clang_arm_mve_strict_polymorphism'' attribute can only be applied to an MVE/NEON vector type'
err_attribute_bad_neon_vector_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Neon vector size must be 64 or 128 bits
  SFINAE: SFINAE_SubstitutionFailure
  Text: Neon vector size must be 64 or 128 bits
err_attribute_bad_sve_vector_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid SVE vector size '(.*)', must match value set by '-msve-vector-bits' \('(.*)'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid SVE vector size '%0', must match value set by '-msve-vector-bits' ('%1')
err_attribute_bounds_for_function:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute references parameter (.*), but the function (.*) has only (.*) parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute references parameter %1, but the function %2 has only %3 parameters'
err_attribute_builtin_alias:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute can only be applied to a ARM or RISC-V builtin
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute can only be applied to a ARM or RISC-V builtin'
err_attribute_cleanup_arg_not_function:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''cleanup'' argument (?:|(.*) |(.*) )is not a (?:||single )function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''cleanup'' argument %select{|%1 |%1 }0is not a %select{||single }0function'
err_attribute_cleanup_func_arg_incompatible_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''cleanup'' function (.*) parameter has (?:type \$ which is incompatible with type \$|incompatible type)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''cleanup'' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2'
err_attribute_cleanup_func_must_take_one_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''cleanup'' function (.*) must take 1 parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''cleanup'' function %0 must take 1 parameter'
err_attribute_dll_ambiguous_default_ctor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__declspec\(dllexport\)'' cannot be applied to more than one default constructor in (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__declspec(dllexport)'' cannot be applied to more than one default constructor in %0'
err_attribute_dll_deleted:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) cannot be applied to a deleted function
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %q0 cannot be applied to a deleted function
err_attribute_dll_lambda:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: lambda cannot be declared (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: lambda cannot be declared %0
err_attribute_dll_member_of_dll_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) cannot be applied to member of (.*) class
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %q0 cannot be applied to member of %q1 class
err_attribute_dll_not_extern:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must have external linkage when declared (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 must have external linkage when declared %q1'
err_attribute_dll_redeclaration:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration of (.*) cannot add (.*) attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration of %q0 cannot add %q1 attribute
err_attribute_dll_thread_local:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be thread local when declared (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 cannot be thread local when declared %q1'
err_attribute_dllimport_data_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of dllimport data
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of dllimport data
err_attribute_dllimport_function_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dllimport cannot be applied to non-inline function definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: dllimport cannot be applied to non-inline function definition
err_attribute_dllimport_static_field_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of dllimport static field not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of dllimport static field not allowed
err_attribute_integers_only:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute argument may only refer to a function parameter of integer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute argument may only refer to a function parameter of integer type'
err_attribute_invalid_argument:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:a reference type|an array type|a non-vector or non-vectorizable scalar type) is an invalid argument to attribute (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{a reference type|an array type|a non-vector or non-vectorizable scalar type}0 is an invalid argument to attribute %1'
err_attribute_invalid_implicit_this_argument:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute is invalid for the implicit this argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute is invalid for the implicit this argument'
err_attribute_invalid_matrix_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid matrix element type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid matrix element type %0
err_attribute_invalid_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vector size not an integral multiple of component size
  SFINAE: SFINAE_SubstitutionFailure
  Text: vector size not an integral multiple of component size
err_attribute_invalid_sve_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute applied to non-SVE type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute applied to non-SVE type %1'
err_attribute_invalid_vector_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid vector element type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid vector element type %0
err_attribute_missing_on_first_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute does not appear on the first declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute does not appear on the first declaration'
err_attribute_multiple_objc_gc:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple garbage collection attributes specified for type
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple garbage collection attributes specified for type
err_attribute_no_builtin_on_defaulted_deleted_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute has no effect on defaulted or deleted functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute has no effect on defaulted or deleted functions'
err_attribute_no_builtin_on_non_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute is permitted on definitions only
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute is permitted on definitions only'
err_attribute_no_builtin_wildcard_or_builtin_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: empty (.*) cannot be composed with named ones
  SFINAE: SFINAE_SubstitutionFailure
  Text: empty %0 cannot be composed with named ones
err_attribute_no_member_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to non-static member functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to non-static member functions'
err_attribute_no_member_pointers:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be used with pointers to members
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be used with pointers to members'
err_attribute_not_clinkage:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function type with (.*) attribute must have C linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: function type with %0 attribute must have C linkage
err_attribute_not_import_attr:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to a module import
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to a module import'
err_attribute_not_module_attr:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to a module
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to a module'
err_attribute_not_supported_in_lang:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute is not supported in (?:C|C\+\+|Objective-C)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute is not supported in %select{C|C++|Objective-C}1'
err_attribute_not_supported_on_arch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute is not supported on '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute is not supported on ''%1'''
err_attribute_not_type_attr:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to types
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to types'
err_attribute_only_once_per_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute can only be applied once per parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute can only be applied once per parameter'
err_attribute_output_parameter:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute only applies to output parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute only applies to output parameters
err_attribute_overloadable_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration of (.*) must (?:not |)have the 'overloadable' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
err_attribute_overloadable_multiple_unmarked_overloads:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: at most one overload for a given name may lack the 'overloadable' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: at most one overload for a given name may lack the 'overloadable' attribute
err_attribute_overloadable_no_prototype:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''overloadable'' function (.*) must have a prototype'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''overloadable'' function %0 must have a prototype'
err_attribute_parameter_types:
  ArgsCount: 7
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*) attribute parameter types do not match: parameter (.*) of function (.*) has type (.*), but parameter (.*) of function (.*) has type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute parameter types do not match: parameter %1 of function %2 has type %3, but parameter %4 of function %5 has type %6'
err_attribute_pointers_only:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute only applies to(?:| constant) pointer arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute only applies to%select{| constant}1 pointer arguments'
err_attribute_preferred_name_arg_invalid:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument (.*) to 'preferred_name' attribute is not a typedef for a specialization of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument %0 to 'preferred_name' attribute is not a typedef for a specialization of %1
err_attribute_regparm_invalid_number:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''regparm'' parameter must be between 0 and (.*) inclusive'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''regparm'' parameter must be between 0 and %0 inclusive'
err_attribute_regparm_wrong_platform:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''regparm'' is not valid on this platform'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''regparm'' is not valid on this platform'
err_attribute_requires_arguments:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parentheses must be omitted if (.*) attribute's argument list is empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: parentheses must be omitted if %0 attribute's argument list is empty
err_attribute_requires_opencl_version:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) is supported in the OpenCL version (.*)(?:| onwards)
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 is supported in the OpenCL version %1%select{| onwards}2
err_attribute_requires_positive_integer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute requires a (?:positive|non-negative) integral compile time constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute requires a %select{positive|non-negative}1 integral compile time constant expression'
err_attribute_section_invalid_for_target:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'argument to (?:''code_seg''|''section'') attribute is not valid for this target: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'argument to %select{''code_seg''|''section''}1 attribute is not valid for this target: %0'
err_attribute_selectany_non_extern_data:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''selectany'' can only be applied to data items with external linkage'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''selectany'' can only be applied to data items with external linkage'
err_attribute_sentinel_less_than_zero:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''sentinel'' parameter 1 less than zero'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''sentinel'' parameter 1 less than zero'
err_attribute_sentinel_not_zero_or_one:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''sentinel'' parameter 2 not 0 or 1'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''sentinel'' parameter 2 not 0 or 1'
err_attribute_size_too_large:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) size too large
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 size too large'
err_attribute_sizeless_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to sizeless type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to sizeless type %1'
err_attribute_too_few_arguments:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute takes at least (.*) arguments?
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute takes at least %1 argument%s1'
err_attribute_too_many_arguments:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute takes no more than (.*) arguments?
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute takes no more than %1 argument%s1'
err_attribute_unsupported:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute is not supported on targets missing (.*); specify an appropriate -march= or -mcpu=
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute is not supported on targets missing %1; specify an appropriate -march= or -mcpu='
err_attribute_uuid_malformed_guid:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: uuid attribute contains a malformed GUID
  SFINAE: SFINAE_SubstitutionFailure
  Text: uuid attribute contains a malformed GUID
err_attribute_vecreturn_only_pod_record:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the vecreturn attribute can only be used on a POD \(plain old data\) class or structure \(i\.e\. no virtual functions\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
err_attribute_vecreturn_only_vector_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
  SFINAE: SFINAE_SubstitutionFailure
  Text: the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
err_attribute_weak_static:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: weak declaration cannot have internal linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: weak declaration cannot have internal linkage
err_attribute_weakref_not_global_context:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: weakref declaration of (.*) must be in a global context
  SFINAE: SFINAE_SubstitutionFailure
  Text: weakref declaration of %0 must be in a global context
err_attribute_weakref_not_static:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: weakref declaration must have internal linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: weakref declaration must have internal linkage
err_attribute_weakref_without_alias:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: weakref declaration of (.*) must also have an alias attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: weakref declaration of %0 must also have an alias attribute
err_attribute_wrong_decl_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute only applies to (?:functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1'
err_attribute_wrong_decl_type_str:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute only applies to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute only applies to %1'
err_attribute_wrong_number_arguments:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute (?:takes no arguments|takes one argument|requires exactly (.*) arguments)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1'
err_attribute_wrong_number_arguments_for:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute references function (.*), which (?:takes no arguments|takes one argument|takes exactly (.*) arguments)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute references function %1, which %plural{0:takes no arguments|1:takes one argument|:takes exactly %2 arguments}2'
err_attribute_zero_size:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: zero (.*) size
  SFINAE: SFINAE_SubstitutionFailure
  Text: zero %0 size
err_attributes_are_not_compatible:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) and (.*) attributes are not compatible
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 and %1 attributes are not compatible'
err_attributes_misplaced:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: misplaced attributes; expected attributes here
  SFINAE: SFINAE_SubstitutionFailure
  Text: misplaced attributes; expected attributes here
err_attributes_not_allowed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: an attribute list cannot appear here
  SFINAE: SFINAE_SubstitutionFailure
  Text: an attribute list cannot appear here
err_auto_bitfield:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot pass bit-field as __auto_type initializer in C
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot pass bit-field as __auto_type initializer in C
err_auto_different_deductions:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:'auto'|'decltype\(auto\)'|'__auto_type'|template arguments) deduced as (.*) in declaration of (.*) and deduced as (.*) in declaration of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{''auto''|''decltype(auto)''|''__auto_type''|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4'
err_auto_fn_deduction_failure:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce return type (.*) from returned value of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce return type %0 from returned value of type %1
err_auto_fn_different_deductions:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(?:auto|decltype\(auto\))'' in return type deduced as (.*) here but deduced as (.*) in earlier return statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%select{auto|decltype(auto)}0'' in return type deduced as %1 here but deduced as %2 in earlier return statement'
err_auto_fn_no_return_but_not_auto:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce return type (.*) for function with no return statements
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce return type %0 for function with no return statements
err_auto_fn_return_init_list:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce return type from initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce return type from initializer list
err_auto_fn_return_void_but_not_auto:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce return type (.*) from omitted return expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce return type %0 from omitted return expression
err_auto_fn_used_before_defined:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function (.*) with deduced return type cannot be used before it is defined
  SFINAE: SFINAE_SubstitutionFailure
  Text: function %0 with deduced return type cannot be used before it is defined
err_auto_fn_virtual:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function with deduced return type cannot be virtual
  SFINAE: SFINAE_SubstitutionFailure
  Text: function with deduced return type cannot be virtual
err_auto_inconsistent_deduction:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduced conflicting types (?:\(\$ vs \$\) |)for initializer list element type
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
err_auto_init_list_from_c:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use __auto_type with initializer list in C
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use __auto_type with initializer list in C
err_auto_missing_trailing_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''auto'' return without trailing return type; deduced return types are a C\+\+14 extension'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''auto'' return without trailing return type; deduced return types are a C++14 extension'
err_auto_new_ctor_multiple_expressions:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: new expression for type (.*) contains multiple constructor arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: new expression for type %0 contains multiple constructor arguments
err_auto_new_deduction_failure:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: new expression for type (.*) has incompatible constructor argument of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: new expression for type %0 has incompatible constructor argument of type %1
err_auto_new_requires_ctor_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: new expression for type (.*) requires a constructor argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: new expression for type %0 requires a constructor argument
err_auto_non_deduced_not_alone:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:function with deduced return type|declaration with trailing return type) must be the only declaration in its group
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group'
err_auto_not_allowed:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:'auto'|'decltype\(auto\)'|'__auto_type'|use of (?:class template|function template|variable template|alias template|template template parameter|concept|template) (.*) requires template arguments; argument deduction) not allowed (?:in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C\+\+17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration|in function prototype that is not a function declaration|in requires expression parameter)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{''auto''|''decltype(auto)''|''__auto_type''|use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by ''new''|in K&R-style function parameter|in template parameter|in friend declaration|in function prototype that is not a function declaration|in requires expression parameter}1'
err_auto_not_allowed_var_inst:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''auto'' variable template instantiation is not allowed'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''auto'' variable template instantiation is not allowed'
err_auto_var_deduction_failure:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) with type (.*) has incompatible initializer of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 with type %1 has incompatible initializer of type %2
err_auto_var_deduction_failure_from_init_list:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce actual type for variable (.*) with type (.*) from initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce actual type for variable %0 with type %1 from initializer list
err_auto_var_init_multiple_expressions:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer for variable (.*) with type (.*) contains multiple expressions
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer for variable %0 with type %1 contains multiple expressions
err_auto_var_init_no_expression:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer for variable (.*) with type (.*) is empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer for variable %0 with type %1 is empty
err_auto_var_init_paren_braces:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce type for variable (.*) with type (.*) from (?:parenthesized|nested) initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
err_auto_var_requires_init:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of variable (.*) with deduced type (.*) requires an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of variable %0 with deduced type %1 requires an initializer
err_auto_variable_cannot_appear_in_own_initializer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) declared with deduced type (.*) cannot appear in its own initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 declared with deduced type %1 cannot appear in its own initializer
err_avail_query_expected_platform_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a platform name here
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a platform name here
err_avail_query_unrecognized_platform_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unrecognized platform name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: unrecognized platform name %0
err_availability_expected_change:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'introduced', 'deprecated', or 'obsoleted'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'introduced', 'deprecated', or 'obsoleted'
err_availability_expected_platform:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a platform name, e\.g\., 'macos'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a platform name, e.g., 'macos'
err_availability_query_repeated_platform:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: version for '(.*)' already specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: version for '%0' already specified
err_availability_query_repeated_star:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''\*'' query has already been specified'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''*'' query has already been specified'
err_availability_query_wildcard_required:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: must handle potential future platforms with '\*'
  SFINAE: SFINAE_SubstitutionFailure
  Text: must handle potential future platforms with '*'
err_availability_redundant:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redundant (.*) availability change; only the last specified change will be used
  SFINAE: SFINAE_SubstitutionFailure
  Text: redundant %0 availability change; only the last specified change will be used
err_availability_unknown_change:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not an availability stage; use ''introduced'', ''deprecated'', or ''obsoleted'''
err_avx_calling_convention:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: AVX vector (?:return|argument) of type (.*) without '(.*)' enabled changes the ABI
  SFINAE: SFINAE_SubstitutionFailure
  Text: AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
err_await_suspend_invalid_return_type:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of 'await_suspend' is required to be 'void' or 'bool' \(have (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
err_bad_cast_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is an incomplete type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is an incomplete type'
err_bad_category_property_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property implementation must have its declaration in the category (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property implementation must have its declaration in the category %0
err_bad_character_encoding:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal character encoding in character literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal character encoding in character literal
err_bad_const_cast_dest:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:const_cast||||C-style cast|functional-style cast|) to (.*), which is not a reference, pointer-to-object, or pointer-to-data-member
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{const_cast||||C-style cast|functional-style cast|}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member'
err_bad_cstyle_cast_overload:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address of overloaded function (.*) cannot be cast to type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address of overloaded function %0 cannot be cast to type %1
err_bad_cxx_cast_addr_space_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast) from (.*) to (.*) converts between mismatching address spaces
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 converts between mismatching address spaces'
err_bad_cxx_cast_bitfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|) from bit-field lvalue to reference type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from bit-field lvalue to reference type %2'
err_bad_cxx_cast_generic:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast) from (.*) to (.*) is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 is not allowed'
err_bad_cxx_cast_member_pointer_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:||reinterpret_cast||C-style cast||) from member pointer type (.*) to member pointer type (.*) of different size
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{||reinterpret_cast||C-style cast||}0 from member pointer type %1 to member pointer type %2 of different size
err_bad_cxx_cast_qualifiers_away:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|) from (.*) to (.*) casts away qualifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 casts away qualifiers'
err_bad_cxx_cast_rvalue:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast) from rvalue to reference type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from rvalue to reference type %2'
err_bad_cxx_cast_scalar_to_vector_different_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:||reinterpret_cast||C-style cast||) from scalar (.*) to vector (.*) of different size
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{||reinterpret_cast||C-style cast||}0 from scalar %1 to vector %2 of different size'
err_bad_cxx_cast_unrelated_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|) from (.*) to (.*), which are not related by inheritance, is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2, which are not related by inheritance, is not allowed'
err_bad_cxx_cast_vector_to_scalar_different_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:||reinterpret_cast||C-style cast||) from vector (.*) to scalar (.*) of different size
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{||reinterpret_cast||C-style cast||}0 from vector %1 to scalar %2 of different size'
err_bad_cxx_cast_vector_to_vector_different_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:||reinterpret_cast||C-style cast||) from vector (.*) to vector (.*) of different size
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{||reinterpret_cast||C-style cast||}0 from vector %1 to vector %2 of different size'
err_bad_dynamic_cast_not_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not a class type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not a class type'
err_bad_dynamic_cast_not_polymorphic:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not polymorphic
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not polymorphic'
err_bad_dynamic_cast_not_ptr:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use dynamic_cast to convert from (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use dynamic_cast to convert from %0 to %1
err_bad_dynamic_cast_not_ref_or_ptr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid target type (.*) for dynamic_cast; target type must be a reference or pointer type to a defined class
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid target type %0 for dynamic_cast; target type must be a reference or pointer type to a defined class
err_bad_kernel_param_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be used as the type of a kernel parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be used as the type of a kernel parameter'
err_bad_lvalue_to_rvalue_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast from lvalue of type (.*) to rvalue reference type (.*); types are not compatible
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
err_bad_memptr_lhs:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: left hand operand to (.*) must be a (?:|pointer to )class compatible with the right hand operand, but is (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
err_bad_memptr_rhs:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: right hand operand to (.*) has non-pointer-to-member type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: right hand operand to %0 has non-pointer-to-member type %1
err_bad_multiversion_option:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function multiversioning doesn't support (?:feature|architecture) '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: function multiversioning doesn't support %select{feature|architecture}0 '%1'
err_bad_new_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot allocate (?:function|reference) type (.*) with new
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot allocate %select{function|reference}1 type %0 with new
err_bad_parameter_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be the name of a parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be the name of a parameter'
err_bad_parameter_name_template_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter name cannot have template arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter name cannot have template arguments
err_bad_property_context:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property implementation must be in a class or category implementation
  SFINAE: SFINAE_SubstitutionFailure
  Text: property implementation must be in a class or category implementation
err_bad_property_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property implementation must have its declaration in interface (.*) or one of its extensions
  SFINAE: SFINAE_SubstitutionFailure
  Text: property implementation must have its declaration in interface %0 or one of its extensions
err_bad_receiver_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: bad receiver type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: bad receiver type %0
err_bad_reinterpret_cast_overload:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reinterpret_cast cannot resolve overloaded function (.*) to type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: reinterpret_cast cannot resolve overloaded function %0 to type %1
err_bad_reinterpret_cast_reference:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reinterpret_cast of a (.*) to (.*) needs its address, which is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: reinterpret_cast of a %0 to %1 needs its address, which is not allowed
err_bad_reinterpret_cast_small_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cast from pointer to smaller type (.*) loses information
  SFINAE: SFINAE_SubstitutionFailure
  Text: cast from pointer to smaller type %2 loses information
err_bad_rvalue_to_rvalue_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast from rvalue of type (.*) to rvalue reference type (.*); types are not compatible
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
err_bad_static_cast_member_pointer_nonmp:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast from type (.*) to member pointer type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast from type %1 to member pointer type %2
err_bad_static_cast_overload:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address of overloaded function (.*) cannot be static_cast to type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address of overloaded function %0 cannot be static_cast to type %1
err_bad_static_cast_pointer_nonpointer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast from type (.*) to pointer type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast from type %1 to pointer type %2
err_bad_string_encoding:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal character encoding in string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal character encoding in string literal
err_bad_variable_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be the name of a variable or data member
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be the name of a variable or data member'
err_base_class_has_flexible_array_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base class (.*) has a flexible array member
  SFINAE: SFINAE_SubstitutionFailure
  Text: base class %0 has a flexible array member
err_base_clause_on_union:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unions cannot have base classes
  SFINAE: SFINAE_SubstitutionFailure
  Text: unions cannot have base classes
err_base_init_direct_and_virtual:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base class initializer (.*) names both a direct base class and an inherited virtual base class
  SFINAE: SFINAE_SubstitutionFailure
  Text: base class initializer %0 names both a direct base class and an inherited virtual base class
err_base_init_does_not_name_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constructor initializer (.*) does not name a class
  SFINAE: SFINAE_SubstitutionFailure
  Text: constructor initializer %0 does not name a class
err_base_must_be_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base specifier must name a class
  SFINAE: SFINAE_SubstitutionFailure
  Text: base specifier must name a class
err_base_specifier_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to a base specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to a base specifier'
err_binding_cannot_appear_in_own_initializer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: binding (.*) cannot appear in the initializer of its own decomposition declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: binding %0 cannot appear in the initializer of its own decomposition declaration
err_bit_cast_non_trivially_copyable:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_bit_cast (?:source|destination) type must be trivially copyable
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_bit_cast %select{source|destination}0 type must be trivially copyable
err_bit_cast_type_size_mismatch:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_bit_cast source size does not equal destination size \((.*) vs (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_bit_cast source size does not equal destination size (%0 vs %1)
err_bit_int_bad_size:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:signed|unsigned) _BitInt must have a bit size of at least (?:2|1)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{signed|unsigned}0 _BitInt must have a bit size of at least %select{2|1}0'
err_bit_int_max_size:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:signed|unsigned) _BitInt of bit sizes greater than (.*) not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{signed|unsigned}0 _BitInt of bit sizes greater than %1 not supported'
err_bitfield_has_negative_width:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: bit-field (.*) has negative width \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: bit-field %0 has negative width (%1)
err_bitfield_has_zero_width:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: named bit-field (.*) has zero width
  SFINAE: SFINAE_SubstitutionFailure
  Text: named bit-field %0 has zero width
err_bitfield_too_wide:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:bit-field (.*)|anonymous bit-field) is too wide \((.*) bits\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{bit-field %1|anonymous bit-field}0 is too wide (%2 bits)'
err_bitfield_width_exceeds_type_width:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'width of(?: anonymous|) bit-field(?:| (.*)) \((.*) bits\) exceeds the (?:width|size) of its type \((.*) bits?\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: width of%select{ anonymous|}0 bit-field%select{| %1}0 (%2 bits) exceeds the %select{width|size}3 of its type (%4 bit%s4)
err_block_decl_ref_not_modifiable_lvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable is not assignable \(missing __block type specifier\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable is not assignable (missing __block type specifier)
err_block_extern_cant_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''extern'' variable cannot have an initializer'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''extern'' variable cannot have an initializer'
err_block_on_nonlocal:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __block attribute not allowed, only allowed on local variables
  SFINAE: SFINAE_SubstitutionFailure
  Text: __block attribute not allowed, only allowed on local variables
err_block_on_vm:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __block attribute not allowed on declaration with a variably modified type
  SFINAE: SFINAE_SubstitutionFailure
  Text: __block attribute not allowed on declaration with a variably modified type
err_block_return_missing_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-void block should return a value
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-void block should return a value
err_block_returning_array_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: block cannot return (?:array|function) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: block cannot return %select{array|function}0 type %1
err_blocks_disable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: blocks support disabled - compile with -fblocks or (?:pick a deployment target that supports them|for OpenCL C 2\.0 or OpenCL C 3\.0 with __opencl_c_device_enqueue feature)
  SFINAE: SFINAE_SubstitutionFailure
  Text: blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL C 2.0 or OpenCL C 3.0 with __opencl_c_device_enqueue feature}0
err_bool_redeclaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration of C\+\+ built-in type 'bool'
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration of C++ built-in type 'bool'
err_bound_member_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to non-static member function must be called(?:|; did you mean to call it with no arguments\?)
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
err_box_literal_collection:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:string|character|boolean|numeric) literal must be prefixed by '@' in a collection
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{string|character|boolean|numeric}0 literal must be prefixed by ''@'' in a collection'
err_bracket_depth_exceeded:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: bracket nesting level exceeded maximum of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: bracket nesting level exceeded maximum of %0
err_brackets_go_after_unqualified_id:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: brackets are not allowed here; to declare an array, place the brackets after the (?:identifier|name)
  SFINAE: SFINAE_SubstitutionFailure
  Text: brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
err_break_not_in_loop_or_switch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''break'' statement not in loop or switch statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''break'' statement not in loop or switch statement'
err_btf_type_id_not_const:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_btf_type_id argument (.*) not a constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_btf_type_id argument %0 not a constant
err_builtin_annotation_first_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to __builtin_annotation must be an integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to __builtin_annotation must be an integer
err_builtin_annotation_second_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: second argument to __builtin_annotation must be a non-wide string constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: second argument to __builtin_annotation must be a non-wide string constant
err_builtin_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of builtin function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of builtin function %0
err_builtin_fn_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: builtin functions must be directly called
  SFINAE: SFINAE_SubstitutionFailure
  Text: builtin functions must be directly called
err_builtin_func_cast_more_than_one_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function-style cast to a builtin type can only take one argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: function-style cast to a builtin type can only take one argument
err_builtin_invalid_arg_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: \d+(?:st|nd|rd|th) argument must be a (?:vector, integer or floating point type|matrix|pointer to a valid matrix element type|signed integer or floating point type|vector type|floating point type|vector of integers) \(was (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%ordinal0 argument must be a %select{vector, integer or floating point type|matrix|pointer to a valid matrix element type|signed integer or floating point type|vector type|floating point type|vector of integers}1 (was %2)'
err_builtin_launder_invalid_arg:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-pointer|function pointer|void pointer) argument to '__builtin_launder' is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-pointer|function pointer|void pointer}0 argument to ''__builtin_launder'' is not allowed'
err_builtin_longjmp_invalid_val:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument to __builtin_longjmp must be a constant 1
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument to __builtin_longjmp must be a constant 1
err_builtin_longjmp_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_longjmp is not supported for the current target
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_longjmp is not supported for the current target
err_builtin_matrix_disabled:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: matrix types extension is disabled\. Pass -fenable-matrix to enable it
  SFINAE: SFINAE_SubstitutionFailure
  Text: matrix types extension is disabled. Pass -fenable-matrix to enable it
err_builtin_matrix_invalid_dimension:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) dimension is outside the allowed range \[1, (.*)\]
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 dimension is outside the allowed range [1, %1]'
err_builtin_matrix_pointer_arg_mismatch:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the pointee of the 2nd argument must match the element type of the 1st argument \((.*) != (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: the pointee of the 2nd argument must match the element type of the 1st argument (%0 != %1)
err_builtin_matrix_scalar_unsigned_arg:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) argument must be a constant unsigned integer expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 argument must be a constant unsigned integer expression'
err_builtin_matrix_store_to_const:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot store matrix to read-only pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot store matrix to read-only pointer
err_builtin_matrix_stride_too_small:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: stride must be greater or equal to the number of rows
  SFINAE: SFINAE_SubstitutionFailure
  Text: stride must be greater or equal to the number of rows
err_builtin_needs_feature:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) needs target feature (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 needs target feature %1'
err_builtin_operator_new_delete_not_usual:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to '(?:__builtin_operator_new|__builtin_operator_delete)' selects non-usual (?:allocation|deallocation) function
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
err_builtin_redeclare:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot redeclare builtin function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot redeclare builtin function %0
err_builtin_requires_language:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' is only available in (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' is only available in %1'
err_builtin_setjmp_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_setjmp is not supported for the current target
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_setjmp is not supported for the current target
err_builtin_target_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: builtin is not supported on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: builtin is not supported on this target
err_builtin_x64_aarch64_only:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin is only available on x86-64 and aarch64 targets
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin is only available on x86-64 and aarch64 targets
err_c11_noreturn_misplaced:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''_Noreturn'' keyword must precede function declarator'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''_Noreturn'' keyword must precede function declarator'
err_c99_array_usage_cxx:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:qualifier in |static |)array size (?:||'\[\*\] ')is a C99 feature, not permitted in C\+\+
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{qualifier in |static |}0array size %select{||''[*] ''}0is a C99 feature, not permitted in C++'
err_call_function_incomplete_return:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: calling (.*) with incomplete return type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: calling %0 with incomplete return type %1
err_call_incomplete_argument:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument type (.*) is incomplete
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument type %0 is incomplete
err_call_incomplete_return:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: calling function with incomplete return type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: calling function with incomplete return type %0
err_callback_attribute_argument_unknown:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''callback'' attribute argument (.*) is not a known function parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''callback'' attribute argument %0 is not a known function parameter'
err_callback_attribute_invalid_callee:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''callback'' attribute specifies invalid callback callee'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''callback'' attribute specifies invalid callback callee'
err_callback_attribute_multiple:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple 'callback' attributes specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple 'callback' attributes specified
err_callback_attribute_no_callee:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''callback'' attribute specifies no callback callee'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''callback'' attribute specifies no callback callee'
err_callback_callee_is_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''callback'' attribute callee may not be variadic'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''callback'' attribute callee may not be variadic'
err_callback_callee_no_function_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''callback'' attribute callee does not have function type'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''callback'' attribute callee does not have function type'
err_callback_implicit_this_not_available:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''callback'' argument at position (.*) references unavailable implicit ''this'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''callback'' argument at position %0 references unavailable implicit ''this'''
err_called_once_attribute_wrong_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''called_once'' attribute only applies to function-like parameters'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''called_once'' attribute only applies to function-like parameters'
err_cannot_find_suitable_accessor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find suitable (?:getter|setter) for property (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find suitable %select{getter|setter}0 for property %1
err_cannot_form_pointer_to_member_of_reference_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot form a pointer-to-member to member (.*) of reference type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot form a pointer-to-member to member %0 of reference type %1
err_cannot_open_file:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'cannot open file ''(.*)'': (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot open file ''%0'': %1'
err_cannot_pass_non_trivial_c_struct_to_vararg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot pass non-trivial C object of type (.*) by value to variadic (?:function|block|method|constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
err_cannot_pass_objc_interface_to_vararg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot pass object with interface type (.*) by value through variadic (?:function|block|method|constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
err_cannot_pass_objc_interface_to_vararg_format:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot pass object with interface type (.*) by value to variadic (?:function|block|method|constructor); expected type from format string was (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
err_cannot_pass_to_vararg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot pass (?:expression of type (.*)|initializer list) to variadic (?:function|block|method|constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
err_cannot_pass_to_vararg_format:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot pass (?:expression of type (.*)|initializer list) to variadic (?:function|block|method|constructor); expected type from format string was (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
err_capture_bad_target:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: capture host variable (.*) by reference in device or host device lambda function
  SFINAE: SFINAE_SubstitutionFailure
  Text: capture host variable %0 by reference in device or host device lambda function
err_capture_block_variable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __block variable (.*) cannot be captured in a (?:lambda expression|captured statement)
  SFINAE: SFINAE_SubstitutionFailure
  Text: __block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
err_capture_default_first:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: capture default must be first
  SFINAE: SFINAE_SubstitutionFailure
  Text: capture default must be first
err_capture_default_non_local:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-local lambda expression cannot have a capture-default
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-local lambda expression cannot have a capture-default
err_capture_does_not_name_variable:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) in capture list does not name a variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 in capture list does not name a variable'
err_capture_more_than_once:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) can appear only once in a capture list
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 can appear only once in a capture list'
err_capture_non_automatic_variable:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be captured because it does not have automatic storage duration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be captured because it does not have automatic storage duration'
err_capture_of_abstract_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: by-copy capture of value of abstract type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: by-copy capture of value of abstract type %0
err_capture_of_incomplete_or_sizeless_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: by-copy capture of variable (.*) with (?:incomplete|sizeless) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: by-copy capture of variable %0 with %select{incomplete|sizeless}1 type %2
err_carries_dependency_missing_on_first_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:function|parameter) declared '\[\[carries_dependency\]\]' after its first declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{function|parameter}0 declared ''[[carries_dependency]]'' after its first declaration'
err_carries_dependency_param_not_function_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''\[\[carries_dependency\]\]'' attribute only allowed on parameter in a function declaration or lambda'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''[[carries_dependency]]'' attribute only allowed on parameter in a function declaration or lambda'
err_case_not_in_switch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''case'' statement not in switch statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''case'' statement not in switch statement'
err_cast_from_bfloat16:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot type-cast from __bf16
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot type-cast from __bf16
err_cast_pointer_from_non_pointer_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: operand of type (.*) cannot be cast to a pointer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: operand of type %0 cannot be cast to a pointer type
err_cast_pointer_to_non_pointer_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pointer cannot be cast to type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: pointer cannot be cast to type %0
err_cast_selector_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot type cast @selector expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot type cast @selector expression
err_cast_to_bfloat16:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot type-cast to __bf16
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot type-cast to __bf16
err_catch_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot catch incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot catch incomplete type %0
err_catch_incomplete_ptr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot catch pointer to incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot catch pointer to incomplete type %0
err_catch_incomplete_ref:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot catch reference to incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot catch reference to incomplete type %0
err_catch_param_not_objc_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@catch parameter is not a pointer to an interface type'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@catch parameter is not a pointer to an interface type'
err_catch_rvalue_ref:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot catch exceptions by rvalue reference
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot catch exceptions by rvalue reference
err_catch_sizeless:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot catch (?:|reference to )sizeless type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot catch %select{|reference to }0sizeless type %1
err_catch_variably_modified:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot catch variably modified type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot catch variably modified type %0
err_category_forward_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot define (?:category|class extension) for undefined class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot define %select{category|class extension}0 for undefined class %1
err_category_property:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property declared in category (.*) cannot be implemented in class implementation
  SFINAE: SFINAE_SubstitutionFailure
  Text: property declared in category %0 cannot be implemented in class implementation
err_cc1_round_trip_fail_then_ok:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: original arguments parse failed, then succeeded in round-trip
  SFINAE: SFINAE_SubstitutionFailure
  Text: original arguments parse failed, then succeeded in round-trip
err_cc1_round_trip_mismatch:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: generated arguments do not match in round-trip
  SFINAE: SFINAE_SubstitutionFailure
  Text: generated arguments do not match in round-trip
err_cc1_round_trip_ok_then_fail:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: generated arguments parse failed in round-trip
  SFINAE: SFINAE_SubstitutionFailure
  Text: generated arguments parse failed in round-trip
err_cc1_unbounded_vscale_min:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: minimum vscale must be an unsigned integer greater than 0
  SFINAE: SFINAE_SubstitutionFailure
  Text: minimum vscale must be an unsigned integer greater than 0
err_cconv_change:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declared '(.*)' here was previously declared (?:'(.*)'|without calling convention)
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declared '%0' here was previously declared %select{'%2'|without calling convention}1
err_cconv_incomplete_param_type:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter (.*) must have a complete type to use function (.*) with the (.*) calling convention
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter %0 must have a complete type to use function %1 with the %2 calling convention
err_cconv_knr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function with no prototype cannot use the (.*) calling convention
  SFINAE: SFINAE_SubstitutionFailure
  Text: function with no prototype cannot use the %0 calling convention
err_cconv_varargs:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variadic function cannot use (.*) calling convention
  SFINAE: SFINAE_SubstitutionFailure
  Text: variadic function cannot use %0 calling convention
err_cfstring_literal_not_string_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CFString literal is not a string constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: CFString literal is not a string constant
err_character_not_allowed:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected character <U\+(.*)>
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected character <U+%0>
err_character_not_allowed_identifier:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: character <U\+(.*)> not allowed (?:in|at the start of) an identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: character <U+%0> not allowed %select{in|at the start of}1 an identifier
err_character_too_large:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: character too large for enclosing character literal type
  SFINAE: SFINAE_SubstitutionFailure
  Text: character too large for enclosing character literal type
err_circular_inheritance:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: circular inheritance between (.*) and (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: circular inheritance between %0 and %1
err_class_extension_after_impl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot declare class extension for (.*) after class implementation
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot declare class extension for %0 after class implementation
err_class_marked_final_used_as_base:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base (.*) is marked '(?:final|sealed)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: base %0 is marked '%select{final|sealed}1'
err_class_on_template_template_param:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template template parameter requires 'class'(?:| or 'typename') after the parameter list
  SFINAE: SFINAE_SubstitutionFailure
  Text: template template parameter requires 'class'%select{| or 'typename'}0 after the parameter list
err_class_property_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) is a class property; did you mean to access it with class '(.*)'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 is a class property; did you mean to access it with class '%1'?
err_class_redeclared_with_different_access:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) redeclared with '(.*)' access
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 redeclared with ''%1'' access'
err_class_stub_subclassing_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''objc_class_stub'' attribute cannot be specified on a class that does not have the ''objc_subclassing_restricted'' attribute'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''objc_class_stub'' attribute cannot be specified on a class that does not have the ''objc_subclassing_restricted'' attribute'
err_cmse_pi_are_incompatible:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cmse is not compatible with (?:RWPI|ROPI)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cmse is not compatible with %select{RWPI|ROPI}0
err_cocoa_naming_owned_rule:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property follows Cocoa naming convention for returning 'owned' objects
  SFINAE: SFINAE_SubstitutionFailure
  Text: property follows Cocoa naming convention for returning 'owned' objects
err_collection_expr_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the type (.*) is not a pointer to a fast-enumerable object
  SFINAE: SFINAE_SubstitutionFailure
  Text: the type %0 is not a pointer to a fast-enumerable object
err_complex_mode_vector_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of machine mode does not support base vector types
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of machine mode does not support base vector types
err_compound_literal_with_address_space:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: compound literal in function scope may not be qualified with an address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: compound literal in function scope may not be qualified with an address space
err_compound_qualified_function_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:block pointer|pointer|reference) to function type (?:(.*) |)cannot have '(.*)' qualifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have ''%3'' qualifier'
err_concept_decls_may_only_appear_in_global_namespace_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: concept declarations may only appear in global or namespace scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: concept declarations may only appear in global or namespace scope
err_concept_definition_not_identifier:
  ArgsCount: 0
  CategoryName: Concepts Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: name defined in concept definition must be an identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: name defined in concept definition must be an identifier
err_concept_extra_headers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous template parameter list in concept definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous template parameter list in concept definition
err_concept_no_associated_constraints:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: concept cannot have associated constraints
  SFINAE: SFINAE_SubstitutionFailure
  Text: concept cannot have associated constraints
err_concept_no_parameters:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: concept template parameter list must have at least one parameter; explicit specialization of concepts is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: concept template parameter list must have at least one parameter; explicit specialization of concepts is not allowed
err_cond_voidptr_arc:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'operands to conditional of types(?: \$ and \$|) are incompatible in ARC mode'
  SFINAE: SFINAE_SubstitutionFailure
  Text: operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
err_conditional_ambiguous:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conditional expression is ambiguous; (?:\$ can be converted to \$ and vice versa|types can be convert to each other)
  SFINAE: SFINAE_SubstitutionFailure
  Text: conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
err_conditional_ambiguous_ovl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conditional expression is ambiguous; (?:\$ and \$|types) can be converted to several common types
  SFINAE: SFINAE_SubstitutionFailure
  Text: conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
err_conditional_vector_cond_result_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot mix vectors and extended vectors in a vector conditional
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot mix vectors and extended vectors in a vector conditional
err_conditional_vector_element_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vector condition type (.*) and result type (.*) do not have elements of the same size
  SFINAE: SFINAE_SubstitutionFailure
  Text: vector condition type %0 and result type %1 do not have elements of the same size
err_conditional_vector_has_void:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: GNU vector conditional operand cannot be (?:void|a throw expression)
  SFINAE: SFINAE_SubstitutionFailure
  Text: GNU vector conditional operand cannot be %select{void|a throw expression}0
err_conditional_vector_mismatched:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vector operands to the vector conditional must be the same type (?:\(\$ and \$\)|)\}
  SFINAE: SFINAE_SubstitutionFailure
  Text: vector operands to the vector conditional must be the same type %diff{($ and $)|}0,1}
err_conditional_vector_operand_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumeration type (.*) is not allowed in a vector conditional
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumeration type %0 is not allowed in a vector conditional
err_conditional_vector_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vector condition type (.*) and result type (.*) do not have the same number of elements
  SFINAE: SFINAE_SubstitutionFailure
  Text: vector condition type %0 and result type %1 do not have the same number of elements
err_conditional_void_nonvoid:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:left|right) operand to \? is void, but (?:right|left) operand is of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0'
err_config_scalar_return:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CUDA special function '(.*)' must have scalar return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: CUDA special function '%0' must have scalar return type
err_conflict_marker:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: version control conflict marker in file
  SFINAE: SFINAE_SubstitutionFailure
  Text: version control conflict marker in file
err_conflicting_aliasing_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting types for alias (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting types for alias %0
err_conflicting_codeseg_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting code segment specifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting code segment specifiers
err_conflicting_ivar_bitwidth:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variable (.*) has conflicting bit-field width
  SFINAE: SFINAE_SubstitutionFailure
  Text: instance variable %0 has conflicting bit-field width
err_conflicting_ivar_name:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'conflicting instance variable names: (.*) vs (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'conflicting instance variable names: %0 vs %1'
err_conflicting_ivar_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'instance variable (.*) has conflicting type(?:: \$ vs \$|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'instance variable %0 has conflicting type%diff{: $ vs $|}1,2'
err_conflicting_overriding_cc_attributes:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: virtual function (.*) has different calling convention attributes (?:\(\$\) than the function it overrides \(which has calling convention \$\)|than the function it overrides)
  SFINAE: SFINAE_SubstitutionFailure
  Text: virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
err_conflicting_super_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting super class name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting super class name %0
err_conflicting_types:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting types for (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting types for %0
err_constant_integer_arg_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument to (.*) must be a constant integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument to %0 must be a constant integer
err_consteval_override:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: consteval function (.*) cannot override a non-consteval function
  SFINAE: SFINAE_SubstitutionFailure
  Text: consteval function %0 cannot override a non-consteval function
err_constexpr_body_invalid_stmt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: statement not allowed in (?:constexpr|consteval) (?:function|constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: statement not allowed in %select{constexpr|consteval}1 %select{function|constructor}0
err_constexpr_body_no_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no return statement in (?:constexpr|consteval) function
  SFINAE: SFINAE_SubstitutionFailure
  Text: no return statement in %select{constexpr|consteval}0 function
err_constexpr_dtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot be declared (?:<ERROR>|constexpr|consteval|constinit)
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot be declared %sub{select_constexpr_spec_kind}0
err_constexpr_dtor_subobject:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot be declared (?:<ERROR>|constexpr|consteval|constinit) because (?:data member (.*)|base class (.*)) does not have a constexpr destructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot be declared %sub{select_constexpr_spec_kind}0 because %select{data member %2|base class %3}1 does not have a constexpr destructor
err_constexpr_if_condition_expression_is_not_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constexpr if condition is not a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: constexpr if condition is not a constant expression
err_constexpr_invalid_template_arg:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:pointer|reference) to (?:|subobject of )(?:type_info object|string literal|temporary object|predefined '(.*)' variable) is not allowed in a template argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined ''%3'' variable}2 is not allowed in a template argument'
err_constexpr_local_var_non_literal_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable of non-literal type (.*) cannot be defined in a constexpr (?:function|constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
err_constexpr_local_var_static:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:static|thread_local) variable not permitted in a constexpr (?:function|constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0'
err_constexpr_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''main'' is not allowed to be declared (?:constexpr|consteval)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''main'' is not allowed to be declared %select{constexpr|consteval}0'
err_constexpr_non_literal_param:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:constexpr|consteval) (?:function|constructor)'s \d+(?:st|nd|rd|th) parameter type (.*) is not a literal type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{constexpr|consteval}2 %select{function|constructor}1''s %ordinal0 parameter type %3 is not a literal type'
err_constexpr_non_literal_return:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:constexpr|consteval) function's return type (.*) is not a literal type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{constexpr|consteval}0 function''s return type %1 is not a literal type'
err_constexpr_redecl_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-constexpr|constexpr|consteval) declaration of (.*) follows (?:non-constexpr|constexpr|consteval) declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-constexpr|constexpr|consteval}1 declaration of %0 follows %select{non-constexpr|constexpr|consteval}2 declaration'
err_constexpr_return_missing_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-void (?:constexpr|consteval) function (.*) should return a value
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-void %select{constexpr|consteval}1 function %0 should return a value
err_constexpr_static_mem_var_requires_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of constexpr static data member (.*) requires an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of constexpr static data member %0 requires an initializer
err_constexpr_tag:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class|struct|interface|union|enum) cannot be marked (?:<ERROR>|constexpr|consteval|constinit)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class|struct|interface|union|enum}0 cannot be marked %sub{select_constexpr_spec_kind}1'
err_constexpr_var_non_literal:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constexpr variable cannot have non-literal type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: constexpr variable cannot have non-literal type %0
err_constexpr_var_requires_const_destruction:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constexpr variable (.*) must have constant destruction
  SFINAE: SFINAE_SubstitutionFailure
  Text: constexpr variable %0 must have constant destruction
err_constexpr_var_requires_const_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constexpr variable (.*) must be initialized by a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: constexpr variable %0 must be initialized by a constant expression
err_constexpr_virtual:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: virtual function cannot be constexpr
  SFINAE: SFINAE_SubstitutionFailure
  Text: virtual function cannot be constexpr
err_constexpr_virtual_base:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constexpr (?:member function|constructor) not allowed in (?:struct|interface|class) with virtual base (?:class|classes)
  SFINAE: SFINAE_SubstitutionFailure
  Text: constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
err_constexpr_vla:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variably-modified type (.*) cannot be used in a constexpr (?:function|constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
err_constexpr_wrong_decl_kind:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:<ERROR>|constexpr|consteval|constinit) can only be used in (?:|variable and function|function|variable) declarations
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%sub{select_constexpr_spec_kind}0 can only be used in %select{|variable and function|function|variable}0 declarations'
err_constinit_added_too_late:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''constinit'' specifier added after initialization of variable'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''constinit'' specifier added after initialization of variable'
err_constinit_local_variable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: local variable cannot be declared 'constinit'
  SFINAE: SFINAE_SubstitutionFailure
  Text: local variable cannot be declared 'constinit'
err_constrained_virtual_method:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: virtual function cannot have a requires clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: virtual function cannot have a requires clause
err_constructor_bad_name:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing return type for function (.*); did you mean the constructor name (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing return type for function %0; did you mean the constructor name %1?
err_constructor_byvalue_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: copy constructor must pass its first argument by reference
  SFINAE: SFINAE_SubstitutionFailure
  Text: copy constructor must pass its first argument by reference
err_constructor_cannot_be:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constructor cannot be declared '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: constructor cannot be declared '%0'
err_constructor_redeclared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constructor cannot be redeclared
  SFINAE: SFINAE_SubstitutionFailure
  Text: constructor cannot be redeclared
err_constructor_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constructor cannot have a return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: constructor cannot have a return type
err_continuation_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class extension has no primary class
  SFINAE: SFINAE_SubstitutionFailure
  Text: class extension has no primary class
err_continue_from_cond_var_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot jump from this continue statement to the loop increment; jump bypasses initialization of loop condition variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot jump from this continue statement to the loop increment; jump bypasses initialization of loop condition variable
err_continue_not_in_loop:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''continue'' statement not in loop statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''continue'' statement not in loop statement'
err_conv_function_not_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function must be a non-static member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function must be a non-static member function
err_conv_function_redeclared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function cannot be redeclared
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function cannot be redeclared
err_conv_function_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function cannot have a return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function cannot have a return type
err_conv_function_to_array:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function cannot convert to an array type
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function cannot convert to an array type
err_conv_function_to_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function cannot convert to a function type
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function cannot convert to a function type
err_conv_function_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function cannot be variadic
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function cannot be variadic
err_conv_function_with_complex_decl:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specify any part of a return type in the declaration of a conversion function(?:; put the complete type after 'operator'|; use a typedef to declare a conversion to (.*)|; use an alias template to declare a conversion to (.*)|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
err_conv_function_with_params:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function cannot have any parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function cannot have any parameters
err_convertvector_incompatible_vector:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first two arguments to __builtin_convertvector must have the same number of elements
  SFINAE: SFINAE_SubstitutionFailure
  Text: first two arguments to __builtin_convertvector must have the same number of elements
err_convertvector_non_vector:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to __builtin_convertvector must be a vector
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to __builtin_convertvector must be a vector
err_convertvector_non_vector_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: second argument to __builtin_convertvector must be a vector type
  SFINAE: SFINAE_SubstitutionFailure
  Text: second argument to __builtin_convertvector must be a vector type
err_copy_capture_with_copy_default:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''&'' must precede a capture when the capture default is ''='''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''&'' must precede a capture when the capture default is ''='''
err_coroutine_handle_missing_member:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: std::coroutine_handle must have a member named '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: std::coroutine_handle must have a member named '%0'
err_coroutine_invalid_func_context:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' cannot be used in (?:a constructor|a destructor|the ''main'' function|a constexpr function|a function with a deduced return type|a varargs function|a consteval function)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%1'' cannot be used in %select{a constructor|a destructor|the ''main'' function|a constexpr function|a function with a deduced return type|a varargs function|a consteval function}0'
err_coroutine_objc_method:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Objective-C methods as coroutines are not yet supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: Objective-C methods as coroutines are not yet supported
err_coroutine_outside_function:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' cannot be used outside a function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' cannot be used outside a function'
err_coroutine_promise_final_suspend_requires_nothrow:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the expression 'co_await __promise\.final_suspend\(\)' is required to be non-throwing
  SFINAE: SFINAE_SubstitutionFailure
  Text: the expression 'co_await __promise.final_suspend()' is required to be non-throwing
err_coroutine_promise_get_return_object_on_allocation_failure:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*): ''get_return_object_on_allocation_failure\(\)'' must be a static member function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0: ''get_return_object_on_allocation_failure()'' must be a static member function'
err_coroutine_promise_incompatible_return_functions:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the coroutine promise type (.*) declares both 'return_value' and 'return_void'
  SFINAE: SFINAE_SubstitutionFailure
  Text: the coroutine promise type %0 declares both 'return_value' and 'return_void'
err_coroutine_promise_new_requires_nothrow:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure\(\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is required to have a non-throwing noexcept specification when the promise type declares ''get_return_object_on_allocation_failure()'''
err_coroutine_promise_type_incomplete:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'this function cannot be a coroutine: (.*) is an incomplete type'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'this function cannot be a coroutine: %0 is an incomplete type'
err_coroutine_promise_unhandled_exception_required:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is required to declare the member 'unhandled_exception\(\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is required to declare the member ''unhandled_exception()'''
err_coroutine_type_missing_specialization:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'this function cannot be a coroutine: missing definition of specialization (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'this function cannot be a coroutine: missing definition of specialization %0'
err_coroutine_unevaluated_context:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' cannot be used in an unevaluated context'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' cannot be used in an unevaluated context'
err_coroutine_within_handler:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' cannot be used in the handler of a try block'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' cannot be used in the handler of a try block'
err_covariant_return_ambiguous_derived_to_base_conv:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of virtual function (.*) is not covariant with the return type of the function it overrides \(ambiguous conversion from derived class (.*) to base class (.*):(.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
err_covariant_return_inaccessible_base:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid covariant return for virtual function: (.*) is a (?:private|protected) base class of (.*)'
  SFINAE: SFINAE_AccessControl
  Text: 'invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0'
err_covariant_return_incomplete:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of virtual function (.*) is not covariant with the return type of the function it overrides \((.*) is incomplete\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
err_covariant_return_not_derived:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of virtual function (.*) is not covariant with the return type of the function it overrides \((.*) is not derived from (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
err_covariant_return_type_class_type_more_qualified:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of virtual function (.*) is not covariant with the return type of the function it overrides \(class type (.*) is more qualified than class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
err_covariant_return_type_different_qualifications:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of virtual function (.*) is not covariant with the return type of the function it overrides \((.*) has different qualifiers than (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
err_cpu_dispatch_mismatch:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''cpu_dispatch'' function redeclared with different CPUs'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''cpu_dispatch'' function redeclared with different CPUs'
err_cpu_specific_multiple_defs:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'multiple ''cpu_specific'' functions cannot specify the same CPU: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'multiple ''cpu_specific'' functions cannot specify the same CPU: %0'
err_cpu_unsupported_isa:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CPU '(.*)' does not support '(.*)' execution mode
  SFINAE: SFINAE_SubstitutionFailure
  Text: CPU '%0' does not support '%1' execution mode
err_ctor_dtor_returns_void:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:constructor|destructor) (.*) must not return void expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{constructor|destructor}1 %0 must not return void expression'
err_ctor_init_missing_comma:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing ',' between base or member initializers
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing ',' between base or member initializers
err_ctu_error_opening:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: CrossTU
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'error opening ''(.*)'': required by the CrossTU functionality'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'error opening ''%0'': required by the CrossTU functionality'
err_cuda_device_builtin_surftex_cls_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal device builtin (?:surface|texture) reference class template (.*) declared here
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal device builtin %select{surface|texture}0 reference class template %1 declared here
err_cuda_device_builtin_surftex_ref_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal device builtin (?:surface|texture) reference type (.*) declared here
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal device builtin %select{surface|texture}0 reference type %1 declared here
err_cuda_device_exceptions:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use '(.*)' in (?:__device__|__global__|__host__|__host__ __device__) function
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
err_cuda_extern_shared:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __shared__ variable (.*) cannot be 'extern'
  SFINAE: SFINAE_SubstitutionFailure
  Text: __shared__ variable %0 cannot be 'extern'
err_cuda_host_shared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __shared__ local variables not allowed in (?:__device__|__global__|__host__|__host__ __device__) functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: __shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
err_cuda_nonstatic_constdev:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __constant__, __device__, and __managed__ are not allowed on non-static local variables
  SFINAE: SFINAE_SubstitutionFailure
  Text: __constant__, __device__, and __managed__ are not allowed on non-static local variables
err_cuda_ovl_target:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:__device__|__global__|__host__|__host__ __device__) function (.*) cannot overload (?:__device__|__global__|__host__|__host__ __device__) function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3'
err_cuda_unattributed_constexpr_cannot_overload_device:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constexpr function (.*) without __host__ or __device__ attributes cannot overload __device__ function with same signature\.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr\.
  SFINAE: SFINAE_SubstitutionFailure
  Text: constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
err_cuda_vla:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use variable-length arrays in (?:__device__|__global__|__host__|__host__ __device__) functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
err_current_module_name_mismatch:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module name '(.*)' specified on command line does not match name of module
  SFINAE: SFINAE_SubstitutionFailure
  Text: module name '%0' specified on command line does not match name of module
err_cxx11_attribute_forbids_arguments:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) cannot have an argument list
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 cannot have an argument list
err_cxx11_attribute_forbids_ellipsis:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) cannot be used as an attribute pack
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 cannot be used as an attribute pack
err_cxx2b_size_t_suffix:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''size_t'' suffix for literals is a C\+\+2b feature'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''size_t'' suffix for literals is a C++2b feature'
err_cyclic_alias:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:alias|ifunc) definition is part of a cycle
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{alias|ifunc}0 definition is part of a cycle'
err_dangling_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:reference|backing array for 'std::initializer_list') (?:|subobject of )member (.*) (?:binds to|is) a temporary object whose lifetime would be shorter than the lifetime of the constructed object
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{reference|backing array for ''std::initializer_list''}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object'
err_dealloc_bad_result_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dealloc return type must be correctly specified as 'void' under ARC, instead of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: dealloc return type must be correctly specified as 'void' under ARC, instead of %0
err_decimal_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: GNU decimal type extension not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: GNU decimal type extension not supported
err_decl_attribute_invalid_on_stmt:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to a statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to a statement'
err_decl_negative_array_size:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' declared as an array with a negative size'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' declared as an array with a negative size'
err_declaration_does_not_declare_param:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration does not declare a parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration does not declare a parameter
err_declarator_need_ident:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declarator requires an identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: declarator requires an identifier
err_declspec_after_virtspec:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' qualifier may not appear after the virtual specifier ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' qualifier may not appear after the virtual specifier ''%1'''
err_declspec_thread_on_thread_variable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__declspec\(thread\)'' applied to variable that already has a thread-local storage specifier'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__declspec(thread)'' applied to variable that already has a thread-local storage specifier'
err_decltype_auto_cannot_be_combined:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''decltype\(auto\)'' cannot be combined with other type specifiers'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''decltype(auto)'' cannot be combined with other type specifiers'
err_decltype_auto_compound_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot form (?:pointer to|reference to|array of) 'decltype\(auto\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
err_decltype_auto_function_declarator_not_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''decltype\(auto\)'' can only be used as a return type in a function declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''decltype(auto)'' can only be used as a return type in a function declaration'
err_decltype_auto_initializer_list:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce 'decltype\(auto\)' from initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce 'decltype(auto)' from initializer list
err_decltype_auto_invalid:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''decltype\(auto\)'' not allowed here'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''decltype(auto)'' not allowed here'
err_decltype_in_declarator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''decltype'' cannot be used to name a declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''decltype'' cannot be used to name a declaration'
err_decomp_decl_ambiguous_base:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose members of ambiguous base class (.*) of (.*):(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot decompose members of ambiguous base class %1 of %0:%2
err_decomp_decl_anon_union_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose class type (.*) because it has an anonymous (?:struct|union) member
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
err_decomp_decl_context:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: decomposition declaration not permitted in this context
  SFINAE: SFINAE_SubstitutionFailure
  Text: decomposition declaration not permitted in this context
err_decomp_decl_inaccessible_base:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose members of inaccessible base class (.*) of (.*)
  SFINAE: SFINAE_AccessControl
  Text: cannot decompose members of inaccessible base class %1 of %0
err_decomp_decl_inaccessible_field:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose (?:private|protected) member (.*) of (.*)
  SFINAE: SFINAE_AccessControl
  Text: cannot decompose %select{private|protected}0 member %1 of %3
err_decomp_decl_lambda:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose lambda closure type
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot decompose lambda closure type
err_decomp_decl_multiple_bases_with_members:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'cannot decompose class type (.*): (?:its base classes (.*) and|both it and its base class) (.*) have non-static data members'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members'
err_decomp_decl_not_alone:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: decomposition declaration must be the only declaration in its group
  SFINAE: SFINAE_SubstitutionFailure
  Text: decomposition declaration must be the only declaration in its group
err_decomp_decl_parens:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: decomposition declaration cannot be declared with parentheses
  SFINAE: SFINAE_SubstitutionFailure
  Text: decomposition declaration cannot be declared with parentheses
err_decomp_decl_requires_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: decomposition declaration (.*) requires an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: decomposition declaration %0 requires an initializer
err_decomp_decl_spec:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: decomposition declaration cannot be declared (?:'(.*)'|with '(.*)' specifiers)
  SFINAE: SFINAE_SubstitutionFailure
  Text: decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
err_decomp_decl_std_tuple_element_not_specialized:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose this type; 'std::tuple_element<(.*)>::type' does not name a type
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
err_decomp_decl_std_tuple_size_not_constant:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose this type; 'std::tuple_size<(.*)>::value' is not a valid integral constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
err_decomp_decl_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: decomposition declaration template not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: decomposition declaration template not supported
err_decomp_decl_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: decomposition declaration cannot be declared with type (.*); declared type must be 'auto' or reference to 'auto'
  SFINAE: SFINAE_SubstitutionFailure
  Text: decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
err_decomp_decl_unbindable_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decompose (?:union|non-class, non-array) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot decompose %select{union|non-class, non-array}1 type %2
err_decomp_decl_wrong_number_bindings:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) decomposes into (.*) (?:element|elements), but (?:(?:no|only (.*))|(.*)) (?:name was|names were) provided
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 decomposes into %3 %plural{1:element|:elements}2, but %select{%plural{0:no|:only %1}1|%1}4 %plural{1:name was|:names were}1 provided
err_decrement_bool:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot decrement expression of type bool
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot decrement expression of type bool
err_deduced_class_template_compound_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with) deduced class template specialization type
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
err_deduced_class_template_ctor_ambiguous:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous deduction for template arguments of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous deduction for template arguments of %0
err_deduced_class_template_ctor_no_viable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no viable constructor or deduction guide for deduction of template arguments of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no viable constructor or deduction guide for deduction of template arguments of %0
err_deduced_class_template_deleted:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class template argument deduction for (.*) selected a deleted constructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: class template argument deduction for %0 selected a deleted constructor
err_deduced_class_template_explicit:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class template argument deduction for (.*) selected an explicit (?:constructor|deduction guide) for copy-list-initialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
err_deduced_class_template_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template (.*) has no definition and no (?:|viable )deduction guides for deduction of template arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
err_deduced_non_class_template_specialization_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:<error>|function template|variable template|alias template|template template parameter|concept|template) (.*) requires template arguments; argument deduction only allowed for class templates
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{<error>|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments; argument deduction only allowed for class templates'
err_deduced_non_type_template_arg_type_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'deduced non-type template argument does not have the same type as the corresponding template parameter(?: \(\$ vs \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
err_deduced_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduced return types are a C\+\+14 extension
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduced return types are a C++14 extension
err_deduced_tst:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typename specifier refers to (?:class template|function template|variable template|alias template|template template parameter|template); argument deduction not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0; argument deduction not allowed here
err_deduction_guide_bad_trailing_return_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduced type (.*) of deduction guide is not (?:|written as )a specialization of template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
err_deduction_guide_defines_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide cannot have a function definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide cannot have a function definition
err_deduction_guide_invalid_specifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide cannot be declared '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide cannot be declared '%0'
err_deduction_guide_name_not_class_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specify deduction guide for (?:<error>|function template|variable template|alias template|template template parameter|concept|dependent template name) (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|concept|dependent template name}0 %1
err_deduction_guide_no_trailing_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide declaration without trailing return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide declaration without trailing return type
err_deduction_guide_redeclared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration of deduction guide
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration of deduction guide
err_deduction_guide_specialized:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide cannot be (?:explicitly instantiated|explicitly specialized)
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
err_deduction_guide_template_not_deducible:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide template contains (?:a template parameter|template parameters) that cannot be deduced
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
err_deduction_guide_with_complex_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specify any part of a return type in the declaration of a deduction guide
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specify any part of a return type in the declaration of a deduction guide
err_deduction_guide_wrong_access:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide has different access from the corresponding member template
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide has different access from the corresponding member template
err_deduction_guide_wrong_scope:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide must be declared in the same scope as template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide must be declared in the same scope as template %q0
err_deep_exception_specs_differ:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specifications of (?:return|argument) types differ
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specifications of %select{return|argument}0 types differ
err_default_arg_in_partial_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default template argument in a class template partial specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: default template argument in a class template partial specialization
err_default_arg_makes_ctor_special:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: addition of default argument on redeclaration makes this constructor a (?:default|copy|move) constructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
err_default_arg_unparsed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected end of default argument expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected end of default argument expression
err_default_delete_in_multiple_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''= (?:default|delete)'' is a function definition and must occur in a standalone declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''= %select{default|delete}0'' is a function definition and must occur in a standalone declaration'
err_default_init_const:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default initialization of an object of const type (.*)(?:| without a user-provided default constructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: default initialization of an object of const type %0%select{| without a user-provided default constructor}1
err_default_member_initializer_cycle:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default member initializer for (.*) uses itself
  SFINAE: SFINAE_SubstitutionFailure
  Text: default member initializer for %0 uses itself
err_default_member_initializer_not_yet_parsed:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default member initializer for (.*) needed within definition of enclosing class (.*) outside of member functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
err_default_not_in_switch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''default'' statement not in switch statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''default'' statement not in switch statement'
err_default_special_members:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only special member functions (?:|and comparison operators )may be defaulted
  SFINAE: SFINAE_SubstitutionFailure
  Text: only special member functions %select{|and comparison operators }0may be defaulted
err_default_template_template_parameter_not_template:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default template argument for a template template parameter must be a class template
  SFINAE: SFINAE_SubstitutionFailure
  Text: default template argument for a template template parameter must be a class template
err_defaulted_comparison_cannot_deduce_undeduced_auto:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for (?:|member|base class) (.*) has a deduced return type and is not yet defined
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for %select{|member|base class}0 %1 has a deduced return type and is not yet defined
err_defaulted_comparison_deduced_return_type_not_auto:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduced return type for defaulted (?:<ERROR>|equality|three-way|equality|relational) comparison operator must be 'auto', not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduced return type for defaulted %sub{select_defaulted_comparison_kind}0 must be 'auto', not %1
err_defaulted_comparison_non_const:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: defaulted member (?:<ERROR>|equality|three-way|equality|relational) comparison operator must be const-qualified
  SFINAE: SFINAE_SubstitutionFailure
  Text: defaulted member %sub{select_defaulted_comparison_kind}0 must be const-qualified
err_defaulted_comparison_not_friend:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:<ERROR>|equality|three-way|equality|relational) comparison operator is not a friend of (?:|incomplete class )(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%sub{select_defaulted_comparison_kind}0 is not a friend of %select{|incomplete class }1%2'
err_defaulted_comparison_num_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-member|member) (?:<ERROR>|equality|three-way|equality|relational) comparison operator comparison operator must have (?:2|1) parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-member|member}0 %sub{select_defaulted_comparison_kind}1 comparison operator must have %select{2|1}0 parameters'
err_defaulted_comparison_param:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid parameter type for defaulted (?:<ERROR>|equality|three-way|equality|relational) comparison operator; found (.*), expected (.*)(?:| or (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid parameter type for defaulted %sub{select_defaulted_comparison_kind}0; found %1, expected %2%select{| or %4}3
err_defaulted_comparison_param_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'parameters for defaulted (?:<ERROR>|equality|three-way|equality|relational) comparison operator must have the same type(?: \(found \$ vs \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameters for defaulted %sub{select_defaulted_comparison_kind}0 must have the same type%diff{ (found $ vs $)|}1,2
err_defaulted_comparison_param_unknown:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid parameter type for non-member defaulted (?:<ERROR>|equality|three-way|equality|relational) comparison operator; found (.*), expected class or reference to a constant class
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid parameter type for non-member defaulted %sub{select_defaulted_comparison_kind}0; found %1, expected class or reference to a constant class
err_defaulted_comparison_return_type_not_bool:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type for defaulted (?:<ERROR>|equality|three-way|equality|relational) comparison operator must be 'bool', not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type for defaulted %sub{select_defaulted_comparison_kind}0 must be 'bool', not %1
err_defaulted_comparison_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: comparison operator template cannot be defaulted
  SFINAE: SFINAE_SubstitutionFailure
  Text: comparison operator template cannot be defaulted
err_defaulted_copy_assign_not_ref:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
err_defaulted_special_member_copy_const_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the parameter for this explicitly-defaulted copy (?:constructor|assignment operator) is const, but a member or base requires it to be non-const
  SFINAE: SFINAE_SubstitutionFailure
  Text: the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
err_defaulted_special_member_move_const_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the parameter for an explicitly-defaulted move (?:constructor|assignment operator) may not be const
  SFINAE: SFINAE_SubstitutionFailure
  Text: the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
err_defaulted_special_member_params:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: an explicitly-defaulted (?:|copy |move )constructor cannot have default arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
err_defaulted_special_member_quals:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: an explicitly-defaulted (?:copy|move) assignment operator may not have 'const'(?:, 'constexpr'|) or 'volatile' qualifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
err_defaulted_special_member_return_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicitly-defaulted (?:copy|move) assignment operator must return (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicitly-defaulted %select{copy|move}0 assignment operator must return %1
err_defaulted_special_member_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: an explicitly-defaulted (?:|copy |move )constructor cannot be variadic
  SFINAE: SFINAE_SubstitutionFailure
  Text: an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
err_defaulted_special_member_volatile_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the parameter for an explicitly-defaulted (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) may not be volatile
  SFINAE: SFINAE_SubstitutionFailure
  Text: the parameter for an explicitly-defaulted %sub{select_special_member_kind}0 may not be volatile
err_defined_macro_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''defined'' cannot be used as a macro name'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''defined'' cannot be used as a macro name'
err_definition_of_explicitly_defaulted_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of explicitly defaulted (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function)
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
err_definition_of_implicitly_declared_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of implicitly declared (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function)
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
err_delegating_ctor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: delegating constructors are permitted only in C\+\+11
  SFINAE: SFINAE_SubstitutionFailure
  Text: delegating constructors are permitted only in C++11
err_delegating_initializer_alone:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: an initializer for a delegating constructor must appear alone
  SFINAE: SFINAE_SubstitutionFailure
  Text: an initializer for a delegating constructor must appear alone
err_delete_explicit_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: converting delete expression from type (.*) to type (.*) invokes an explicit conversion function
  SFINAE: SFINAE_SubstitutionFailure
  Text: converting delete expression from type %0 to type %1 invokes an explicit conversion function
err_delete_incomplete_class_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deleting incomplete class type (.*); no conversions to pointer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: deleting incomplete class type %0; no conversions to pointer type
err_delete_operand:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot delete expression of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot delete expression of type %0
err_deleted_decl_not_first:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deleted definition must be first declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: deleted definition must be first declaration
err_deleted_function_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attempt to use a deleted function
  SFINAE: SFINAE_SubstitutionFailure
  Text: attempt to use a deleted function
err_deleted_inherited_ctor_use:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constructor inherited by (.*) from base class (.*) is implicitly deleted
  SFINAE: SFINAE_SubstitutionFailure
  Text: constructor inherited by %0 from base class %1 is implicitly deleted
err_deleted_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''main'' is not allowed to be deleted'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''main'' is not allowed to be deleted'
err_deleted_non_function:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only functions can have deleted definitions
  SFINAE: SFINAE_SubstitutionFailure
  Text: only functions can have deleted definitions
err_deleted_override:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deleted function (.*) cannot override a non-deleted function
  SFINAE: SFINAE_SubstitutionFailure
  Text: deleted function %0 cannot override a non-deleted function
err_delimited_escape_empty:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: delimited escape sequence cannot be empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: delimited escape sequence cannot be empty
err_delimited_escape_invalid:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid digit '(.*)' in escape sequence
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid digit '%0' in escape sequence
err_delimited_escape_missing_brace:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\{' after '\\(.*)' escape sequence
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '{' after '\%0' escape sequence
err_dep_source_minimizer_missing_sema_after_at_import:
  ArgsCount: 0
  CategoryName: Dependency Directive Source Minimization Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: could not find ';' after @import
  SFINAE: SFINAE_SubstitutionFailure
  Text: could not find ';' after @import
err_dep_source_minimizer_unexpected_tokens_at_import:
  ArgsCount: 0
  CategoryName: Dependency Directive Source Minimization Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected extra tokens at end of @import declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected extra tokens at end of @import declaration
err_dependent_deduced_tst:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typename specifier refers to (?:class template|function template|variable template|alias template|template template parameter|template) member in (.*); argument deduction not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
err_dependent_function_template_spec_no_match:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no candidate function template was found for dependent friend function template specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: no candidate function template was found for dependent friend function template specialization
err_dependent_nested_name_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nested name specifier for a declaration cannot depend on a template parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: nested name specifier for a declaration cannot depend on a template parameter
err_dependent_non_type_arg_in_partial_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of specialized non-type template argument depends on a template parameter of the partial specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of specialized non-type template argument depends on a template parameter of the partial specialization
err_dependent_tag_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:declaration|definition) of (?:struct|interface|union|class|enum) in a dependent scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope'
err_dependent_typed_non_type_arg_in_partial_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument specializes a template parameter with dependent type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument specializes a template parameter with dependent type %0
err_dereference_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dereference of pointer to incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: dereference of pointer to incomplete type %0
err_designated_init_attr_non_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''objc_designated_initializer'' attribute only applies to init methods of interface or class extension declarations'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''objc_designated_initializer'' attribute only applies to init methods of interface or class extension declarations'
err_designator_for_scalar_or_sizeless_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: designator in initializer for (?:scalar|indivisible sizeless) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: designator in initializer for %select{scalar|indivisible sizeless}0 type %1
err_designator_into_flexible_array_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: designator into flexible array member subobject
  SFINAE: SFINAE_SubstitutionFailure
  Text: designator into flexible array member subobject
err_destroy_attr_on_non_static_var:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:no_destroy|always_destroy) attribute can only be applied to a variable with static or thread storage duration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration'
err_destroying_operator_delete_not_usual:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destroying operator delete can have only an optional size and optional alignment parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: destroying operator delete can have only an optional size and optional alignment parameter
err_destructor_cannot_be:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot be declared '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot be declared '%0'
err_destructor_expr_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: identifier (.*) in object destruction expression does not name the type (.*) of the object being destroyed
  SFINAE: SFINAE_SubstitutionFailure
  Text: identifier %0 in object destruction expression does not name the type %1 of the object being destroyed
err_destructor_expr_nontype:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: identifier (.*) in object destruction expression does not name a type
  SFINAE: SFINAE_SubstitutionFailure
  Text: identifier %0 in object destruction expression does not name a type
err_destructor_expr_type_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor type (.*) in object destruction expression does not match the type (.*) of the object being destroyed
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
err_destructor_name:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected the class name after '~' to name the enclosing class
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected the class name after '~' to name the enclosing class
err_destructor_name_nontype:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: identifier (.*) after '~' in destructor name does not name a type
  SFINAE: SFINAE_SubstitutionFailure
  Text: identifier %0 after '~' in destructor name does not name a type
err_destructor_not_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor must be a non-static member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor must be a non-static member function
err_destructor_redeclared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot be redeclared
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot be redeclared
err_destructor_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot have a return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot have a return type
err_destructor_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot be declared as a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot be declared as a template
err_destructor_template_id:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor name (.*) does not refer to a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor name %0 does not refer to a template
err_destructor_tilde_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a class name after '~' to name a destructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a class name after '~' to name a destructor
err_destructor_tilde_scope:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''~'' in destructor name should be after nested name specifier'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''~'' in destructor name should be after nested name specifier'
err_destructor_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot be variadic
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot be variadic
err_destructor_with_params:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: destructor cannot have any parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: destructor cannot have any parameters
err_diagnose_if_invalid_diagnostic_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
err_different_asm_label:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting asm label
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting asm label
err_different_language_linkage:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of (.*) has a different language linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of %0 has a different language linkage
err_different_pass_object_size_params:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting pass_object_size attributes on parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting pass_object_size attributes on parameters
err_different_return_type_for_overriding_virtual_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: virtual function (.*) has a different return type (?:\(\$\) than the function it overrides \(which has return type \$\)|than the function it overrides)
  SFINAE: SFINAE_SubstitutionFailure
  Text: virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
err_digit_separator_not_between_digits:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: digit separator cannot appear at (?:start|end) of digit sequence
  SFINAE: SFINAE_SubstitutionFailure
  Text: digit separator cannot appear at %select{start|end}0 of digit sequence
err_dimension_expr_not_constant_integer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dimension expression does not evaluate to a constant unsigned int
  SFINAE: SFINAE_SubstitutionFailure
  Text: dimension expression does not evaluate to a constant unsigned int
err_direct_selector_expression:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@selector expression formed with direct selector (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@selector expression formed with direct selector %0'
err_disallowed_duplicate_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) cannot appear more than once on a declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 cannot appear more than once on a declaration
err_distant_exception_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specifications are not allowed beyond a single level of indirection
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specifications are not allowed beyond a single level of indirection
err_downcast_from_inaccessible_base:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast (?:private|protected) base class (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast %select{private|protected}2 base class %1 to %0
err_drv_I_dash_not_supported:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' not supported, please use -iquote instead'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' not supported, please use -iquote instead'
err_drv_Xopenmp_target_missing_triple:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
err_drv_alignment_not_power_of_two:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: alignment is not a power of 2 in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: alignment is not a power of 2 in '%0'
err_drv_amdgpu_ieee_without_no_honor_nans:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument '-mno-amdgpu-ieee' only allowed with relaxed NaN handling
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument '-mno-amdgpu-ieee' only allowed with relaxed NaN handling
err_drv_arg_requires_bitcode_input:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: option '(.*)' requires input to be LLVM bitcode
  SFINAE: SFINAE_SubstitutionFailure
  Text: option '%0' requires input to be LLVM bitcode
err_drv_argument_not_allowed_with:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument '(.*)' not allowed with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument '%0' not allowed with '%1'
err_drv_argument_only_allowed_with:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument '(.*)' only allowed with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument '%0' only allowed with '%1'
err_drv_bad_offload_arch_combo:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid offload arch combinations: ''(.*)'' and ''(.*)'' \(for a specific processor, a feature should either exist in all offload archs, or not exist in any offload archs\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid offload arch combinations: ''%0'' and ''%1'' (for a specific processor, a feature should either exist in all offload archs, or not exist in any offload archs)'
err_drv_bad_target_id:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid target ID '(.*)'; format is a processor name followed by an optional colon-delimited list of features followed by an enable/disable sign \(e\.g\., 'gfx908:sramecc\+:xnack-'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid target ID '%0'; format is a processor name followed by an optional colon-delimited list of features followed by an enable/disable sign (e.g., 'gfx908:sramecc+:xnack-')
err_drv_bitcode_unsupported_on_toolchain:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -fembed-bitcode is not supported on versions of iOS prior to 6\.0
  SFINAE: SFINAE_SubstitutionFailure
  Text: -fembed-bitcode is not supported on versions of iOS prior to 6.0
err_drv_cannot_mix_options:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specify '(.*)' along with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specify '%1' along with '%0'
err_drv_cannot_read_config_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot read configuration file '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot read configuration file '%0'
err_drv_cc_print_options_failure:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to open CC_PRINT_OPTIONS file: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to open CC_PRINT_OPTIONS file: %0'
err_drv_clang_unsupported:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the clang compiler does not support '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: the clang compiler does not support '%0'
err_drv_clang_unsupported_opt_cxx_darwin_i386:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the clang compiler does not support '(.*)' for C\+\+ on Darwin/i386
  SFINAE: SFINAE_SubstitutionFailure
  Text: the clang compiler does not support '%0' for C++ on Darwin/i386
err_drv_clang_unsupported_opt_faltivec:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the clang compiler does not support '(.*)', (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: the clang compiler does not support '%0', %1
err_drv_clang_unsupported_opt_pg_darwin:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the clang compiler does not support -pg option on (?:Darwin|versions of OS X 10\.9 and later)
  SFINAE: SFINAE_SubstitutionFailure
  Text: the clang compiler does not support -pg option on %select{Darwin|versions of OS X 10.9 and later}0
err_drv_command_failed:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) command failed with exit code (.*) \(use -v to see invocation\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 command failed with exit code %1 (use -v to see invocation)'
err_drv_command_failure:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to execute command: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to execute command: %0'
err_drv_command_signalled:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) command failed due to signal \(use -v to see invocation\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 command failed due to signal (use -v to see invocation)'
err_drv_compilationdatabase:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'compilation database ''(.*)'' could not be opened: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'compilation database ''%0'' could not be opened: %1'
err_drv_config_file_not_exist:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: configuration file '(.*)' does not exist
  SFINAE: SFINAE_SubstitutionFailure
  Text: configuration file '%0' does not exist
err_drv_config_file_not_found:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: configuration file '(.*)' cannot be found
  SFINAE: SFINAE_SubstitutionFailure
  Text: configuration file '%0' cannot be found
err_drv_conflicting_deployment_targets:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting deployment targets, both '(.*)' and '(.*)' are present in environment
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting deployment targets, both '%0' and '%1' are present in environment
err_drv_cuda_bad_gpu_arch:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unsupported CUDA gpu architecture: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unsupported CUDA gpu architecture: %0'
err_drv_cuda_host_arch:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported architecture '(.*)' for host compilation
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported architecture '%0' for host compilation
err_drv_cuda_offload_only_emit_bc:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CUDA offload target is supported only along with --emit-llvm
  SFINAE: SFINAE_SubstitutionFailure
  Text: CUDA offload target is supported only along with --emit-llvm
err_drv_cuda_version_unsupported:
  ArgsCount: 5
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: GPU arch (.*) is supported by CUDA versions between (.*) and (.*) \(inclusive\), but installation at (.*) is (.*); use '--cuda-path' to specify a different CUDA install, pass a different GPU arch with '--cuda-gpu-arch', or pass '--no-cuda-version-check'
  SFINAE: SFINAE_SubstitutionFailure
  Text: GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4; use '--cuda-path' to specify a different CUDA install, pass a different GPU arch with '--cuda-gpu-arch', or pass '--no-cuda-version-check'
err_drv_debug_no_new_runtime:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OpenMP target device debugging enabled with incompatible runtime
  SFINAE: SFINAE_SubstitutionFailure
  Text: OpenMP target device debugging enabled with incompatible runtime
err_drv_defsym_invalid_format:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'defsym must be of the form: sym=value: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'defsym must be of the form: sym=value: %0'
err_drv_defsym_invalid_symval:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'value is not an integer: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'value is not an integer: %0'
err_drv_duplicate_config:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no more than one option '--config' is allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: no more than one option '--config' is allowed
err_drv_emit_llvm_link:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -emit-llvm cannot be used when linking
  SFINAE: SFINAE_SubstitutionFailure
  Text: -emit-llvm cannot be used when linking
err_drv_expecting_fopenmp_with_fopenmp_targets:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''-fopenmp-targets'' must be used in conjunction with a ''-fopenmp'' option compatible with offloading; e\.g\., ''-fopenmp=libomp'' or ''-fopenmp=libiomp5'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''-fopenmp-targets'' must be used in conjunction with a ''-fopenmp'' option compatible with offloading; e.g., ''-fopenmp=libomp'' or ''-fopenmp=libiomp5'''
err_drv_force_crash:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: failing because (?:environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used)
  SFINAE: SFINAE_SubstitutionFailure
  Text: failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
err_drv_gnustep_objc_runtime_incompatible_binary:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: GNUstep Objective-C runtime version (.*) incompatible with target binary format
  SFINAE: SFINAE_SubstitutionFailure
  Text: GNUstep Objective-C runtime version %0 incompatible with target binary format
err_drv_hipspv_no_hip_path:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''--hip-path'' must be specified when offloading to SPIR-V(?:| unless (.*) is given)\.'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''--hip-path'' must be specified when offloading to SPIR-V%select{| unless %1 is given}0.'
err_drv_incompatible_omp_arch:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OpenMP target architecture '(.*)' pointer size is incompatible with host '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: OpenMP target architecture '%0' pointer size is incompatible with host '%1'
err_drv_incompatible_unwindlib:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: --rtlib=libgcc requires --unwindlib=libgcc
  SFINAE: SFINAE_SubstitutionFailure
  Text: --rtlib=libgcc requires --unwindlib=libgcc
err_drv_invalid_Xarch_argument_with_args:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid Xarch argument: ''(.*)'', options requiring arguments are unsupported'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid Xarch argument: ''%0'', options requiring arguments are unsupported'
err_drv_invalid_Xopenmp_target_with_args:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid -Xopenmp-target argument: ''(.*)'', options requiring arguments are unsupported'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid -Xopenmp-target argument: ''%0'', options requiring arguments are unsupported'
err_drv_invalid_arch_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid arch name '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid arch name '%0'
err_drv_invalid_argument_to_option:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument '(.*)' to -(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument '%0' to -%1
err_drv_invalid_cf_runtime_abi:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid CoreFoundation Runtime ABI '(.*)'; must be one of 'objc', 'standalone', 'swift', 'swift-5\.0', 'swift-4\.2', 'swift-4\.1'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
err_drv_invalid_darwin_version:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid Darwin version number: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid Darwin version number: %0'
err_drv_invalid_diagnotics_hotness_threshold:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument in '(.*)', only integer or 'auto' is supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument in '%0', only integer or 'auto' is supported
err_drv_invalid_gcc_output_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid output type '(.*)' for use with gcc tool
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid output type '%0' for use with gcc tool
err_drv_invalid_int_value:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid integral value '(.*)' in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid integral value '%1' in '%0'
err_drv_invalid_libcxx_deployment:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid deployment target for -stdlib=libc\+\+ \(requires (.*) or later\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid deployment target for -stdlib=libc++ (requires %0 or later)
err_drv_invalid_linker_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid linker name in argument '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid linker name in argument '%0'
err_drv_invalid_malign_branch_EQ:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid argument ''(.*)'' to -malign-branch=; each element must be one of: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid argument ''%0'' to -malign-branch=; each element must be one of: %1'
err_drv_invalid_mfloat_abi:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid float ABI '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid float ABI '%0'
err_drv_invalid_mtp:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid thread pointer reading mode '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid thread pointer reading mode '%0'
err_drv_invalid_object_mode:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OBJECT_MODE setting (.*) is not recognized and is not a valid setting
  SFINAE: SFINAE_SubstitutionFailure
  Text: OBJECT_MODE setting %0 is not recognized and is not a valid setting
err_drv_invalid_omp_target:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'OpenMP target is invalid: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'OpenMP target is invalid: ''%0'''
err_drv_invalid_or_unsupported_offload_target:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid or unsupported offload target: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid or unsupported offload target: ''%0'''
err_drv_invalid_os_in_arg:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid OS value '(.*)' in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid OS value '%0' in '%1'
err_drv_invalid_output_with_multiple_archs:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use '(.*)' output with multiple -arch options
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use '%0' output with multiple -arch options
err_drv_invalid_remap_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid option '(.*)' not of the form <from-file>;<to-file>
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid option '%0' not of the form <from-file>;<to-file>
err_drv_invalid_riscv_arch_name:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid arch name '(.*)', (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid arch name '%0', %1
err_drv_invalid_riscv_ext_arch_name:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid arch name '(.*)', (.*) '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid arch name '%0', %1 '%2'
err_drv_invalid_rtlib_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid runtime library name in argument '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid runtime library name in argument '%0'
err_drv_invalid_stdlib_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid library name in argument '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid library name in argument '%0'
err_drv_invalid_thread_model_for_target:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid thread model '(.*)' in '(.*)' for this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid thread model '%0' in '%1' for this target
err_drv_invalid_unwindlib_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid unwind library name in argument '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid unwind library name in argument '%0'
err_drv_invalid_value:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid value '(.*)' in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid value '%1' in '%0'
err_drv_invalid_value_with_suggestion:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid value ''(.*)'' in ''(.*)'', expected one of: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid value ''%1'' in ''%0'', expected one of: %2'
err_drv_invalid_version_number:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid version number in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid version number in '%0'
err_drv_lto_without_lld:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: LTO requires -fuse-ld=lld
  SFINAE: SFINAE_SubstitutionFailure
  Text: LTO requires -fuse-ld=lld
err_drv_malformed_sanitizer_coverage_allowlist:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'malformed sanitizer coverage allowlist: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'malformed sanitizer coverage allowlist: ''%0'''
err_drv_malformed_sanitizer_coverage_ignorelist:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'malformed sanitizer coverage ignorelist: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'malformed sanitizer coverage ignorelist: ''%0'''
err_drv_malformed_sanitizer_ignorelist:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'malformed sanitizer ignorelist: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'malformed sanitizer ignorelist: ''%0'''
err_drv_mg_requires_m_or_mm:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: option '-MG' requires '-M' or '-MM'
  SFINAE: SFINAE_SubstitutionFailure
  Text: option '-MG' requires '-M' or '-MM'
err_drv_minws_unsupported_input_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''-fminimize-whitespace'' invalid for input of type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''-fminimize-whitespace'' invalid for input of type %0'
err_drv_missing_arg_mtp:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing argument to '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing argument to '%0'
err_drv_missing_argument:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument to '(.*)' is missing \(expected (.*) values?\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument to '%0' is missing (expected %1 value%s1)
err_drv_mix_cuda_hip:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mixed CUDA and HIP compilation is not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: mixed CUDA and HIP compilation is not supported
err_drv_module_header_wrong_kind:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: header file '(.*)' input type '(.*)' does not match type of prior input in module compilation; use '-x (.*)' to override
  SFINAE: SFINAE_SubstitutionFailure
  Text: header file '%0' input type '%1' does not match type of prior input in module compilation; use '-x %2' to override
err_drv_modules_validate_once_requires_timestamp:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
  SFINAE: SFINAE_SubstitutionFailure
  Text: option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
err_drv_needs_hvx:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) requires HVX, use -mhvx/-mhvx= to enable it
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 requires HVX, use -mhvx/-mhvx= to enable it'
err_drv_needs_hvx_version:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not supported on HVX (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not supported on HVX %1'
err_drv_negative_columns:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid value '(.*)' in '(.*)', value must be 'none' or a positive integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid value '%1' in '%0', value must be 'none' or a positive integer
err_drv_nested_config_file:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: option '--config' is not allowed inside configuration file
  SFINAE: SFINAE_SubstitutionFailure
  Text: option '--config' is not allowed inside configuration file
err_drv_no_ast_support:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'': unable to use AST files with this tool'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'': unable to use AST files with this tool'
err_drv_no_cuda_installation:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find CUDA installation; provide its path via '--cuda-path', or pass '-nocudainc' to build without CUDA includes
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find CUDA installation; provide its path via '--cuda-path', or pass '-nocudainc' to build without CUDA includes
err_drv_no_cuda_libdevice:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find libdevice for (.*); provide path to different CUDA installation via '--cuda-path', or pass '-nocudalib' to build without linking with libdevice
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find libdevice for %0; provide path to different CUDA installation via '--cuda-path', or pass '-nocudalib' to build without linking with libdevice
err_drv_no_hip_runtime:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find HIP runtime; provide its path via '--rocm-path', or pass '-nogpuinc' to build without HIP runtime
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find HIP runtime; provide its path via '--rocm-path', or pass '-nogpuinc' to build without HIP runtime
err_drv_no_hipspv_device_lib:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find HIP device library(?:| for (.*)); provide its path via '--hip-path' or '--hip-device-lib-path', or pass '-nogpulib' to build without HIP device library
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find HIP device library%select{| for %1}0; provide its path via '--hip-path' or '--hip-device-lib-path', or pass '-nogpulib' to build without HIP device library
err_drv_no_input_files:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no input files
  SFINAE: SFINAE_SubstitutionFailure
  Text: no input files
err_drv_no_linker_llvm_support:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'': unable to pass LLVM bit-code files to linker'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'': unable to pass LLVM bit-code files to linker'
err_drv_no_module_support:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'': unable to use module files with this tool'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'': unable to use module files with this tool'
err_drv_no_neon_modifier:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: \[no\]neon is not accepted as modifier, please use \[no\]simd instead
  SFINAE: SFINAE_SubstitutionFailure
  Text: '[no]neon is not accepted as modifier, please use [no]simd instead'
err_drv_no_rocm_device_lib:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find ROCm device library(?:| for (.*)|for ABI version (.*)); provide its path via '--rocm-path' or '--rocm-device-lib-path', or pass '-nogpulib' to build without ROCm device library
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find ROCm device library%select{| for %1|for ABI version %1}0; provide its path via '--rocm-path' or '--rocm-device-lib-path', or pass '-nogpulib' to build without ROCm device library
err_drv_no_such_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'no such file or directory: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'no such file or directory: ''%0'''
err_drv_no_such_file_with_suggestion:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'no such file or directory: ''(.*)''; did you mean ''(.*)''\?'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'no such file or directory: ''%0''; did you mean ''%1''?'
err_drv_omp_host_ir_file_not_found:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: provided host compiler IR file '(.*)' is required to generate code for OpenMP target regions but cannot be found
  SFINAE: SFINAE_SubstitutionFailure
  Text: provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found
err_drv_omp_host_target_not_supported:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: target '(.*)' is not a supported OpenMP host target
  SFINAE: SFINAE_SubstitutionFailure
  Text: target '%0' is not a supported OpenMP host target
err_drv_omp_offload_target_bcruntime_not_found:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: bitcode library '(.*)' does not exist
  SFINAE: SFINAE_SubstitutionFailure
  Text: bitcode library '%0' does not exist
err_drv_omp_offload_target_cuda_version_not_support:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: NVPTX target requires CUDA 9\.2 or above; CUDA (.*) detected
  SFINAE: SFINAE_SubstitutionFailure
  Text: NVPTX target requires CUDA 9.2 or above; CUDA %0 detected
err_drv_omp_offload_target_missingbcruntime:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no library '(.*)' found in the default clang lib directory or in LIBRARY_PATH; use '--libomptarget-(.*)-bc-path' to specify (.*) bitcode library
  SFINAE: SFINAE_SubstitutionFailure
  Text: no library '%0' found in the default clang lib directory or in LIBRARY_PATH; use '--libomptarget-%1-bc-path' to specify %1 bitcode library
err_drv_only_one_offload_target_supported:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only one offload target is supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: only one offload target is supported
err_drv_optimization_remark_format:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unknown remark serializer format: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unknown remark serializer format: ''%0'''
err_drv_optimization_remark_pattern:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'in pattern ''(.*)'': (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'in pattern ''%1'': %0'
err_drv_out_file_argument_with_multiple_sources:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specify '(.*)(.*)' when compiling multiple source files
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specify '%0%1' when compiling multiple source files
err_drv_output_argument_with_multiple_files:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specify -o when generating multiple output files
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specify -o when generating multiple output files
err_drv_preamble_format:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incorrect format for -preamble-bytes=N,END
  SFINAE: SFINAE_SubstitutionFailure
  Text: incorrect format for -preamble-bytes=N,END
err_drv_ropi_incompatible_with_cxx:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ROPI is not compatible with c\+\+
  SFINAE: SFINAE_SubstitutionFailure
  Text: ROPI is not compatible with c++
err_drv_ropi_rwpi_incompatible_with_pic:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: embedded and GOT-based position independence are incompatible
  SFINAE: SFINAE_SubstitutionFailure
  Text: embedded and GOT-based position independence are incompatible
err_drv_small_columns:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid value '(.*)' in '(.*)', value must be '(.*)' or greater
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid value '%1' in '%0', value must be '%2' or greater
err_drv_ssp_missing_offset_argument:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' is used without ''-mstack-protector-guard-offset'', and there is no default'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' is used without ''-mstack-protector-guard-offset'', and there is no default'
err_drv_trivial_auto_var_init_stop_after_invalid_value:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''-ftrivial-auto-var-init-stop-after=\*'' only accepts positive integers'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''-ftrivial-auto-var-init-stop-after=*'' only accepts positive integers'
err_drv_trivial_auto_var_init_stop_after_missing_dependency:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''-ftrivial-auto-var-init-stop-after=\*'' is used without ''-ftrivial-auto-var-init=zero'' or ''-ftrivial-auto-var-init=pattern'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''-ftrivial-auto-var-init-stop-after=*'' is used without ''-ftrivial-auto-var-init=zero'' or ''-ftrivial-auto-var-init=pattern'''
err_drv_trivial_auto_var_init_zero_disabled:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''-ftrivial-auto-var-init=zero'' hasn''t been enabled; enable it at your own peril for benchmarking purpose only with ''-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''-ftrivial-auto-var-init=zero'' hasn''t been enabled; enable it at your own peril for benchmarking purpose only with ''-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang'''
err_drv_unable_to_remove_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to remove file: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to remove file: %0'
err_drv_unable_to_set_working_directory:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to set working directory: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to set working directory: %0'
err_drv_undetermined_amdgpu_arch:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'cannot determine AMDGPU architecture: (.*); consider passing it via ''--march'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot determine AMDGPU architecture: %0; consider passing it via ''--march'''
err_drv_unknown_argument:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unknown argument: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unknown argument: ''%0'''
err_drv_unknown_argument_with_suggestion:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown argument '(.*)'; did you mean '(.*)'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown argument '%0'; did you mean '%1'?
err_drv_unknown_indirect_jump_opt:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown '-mindirect-jump=' option '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown '-mindirect-jump=' option '%0'
err_drv_unknown_language:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'language not recognized: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'language not recognized: ''%0'''
err_drv_unknown_objc_runtime:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown or ill-formed Objective-C runtime '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown or ill-formed Objective-C runtime '%0'
err_drv_unknown_stdin_type:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -E or -x required when input is from standard input
  SFINAE: SFINAE_SubstitutionFailure
  Text: -E or -x required when input is from standard input
err_drv_unknown_stdin_type_clang_cl:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use /Tc or /Tp to set input type for standard input
  SFINAE: SFINAE_SubstitutionFailure
  Text: use /Tc or /Tp to set input type for standard input
err_drv_unsupported_embed_bitcode:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not supported with -fembed-bitcode
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not supported with -fembed-bitcode'
err_drv_unsupported_fpatchable_function_entry_argument:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the second argument of '-fpatchable-function-entry' must be smaller than the first argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: the second argument of '-fpatchable-function-entry' must be smaller than the first argument
err_drv_unsupported_indirect_jump_opt:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''-mindirect-jump=(.*)'' is unsupported with the ''(.*)'' architecture'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''-mindirect-jump=%0'' is unsupported with the ''%1'' architecture'
err_drv_unsupported_linker:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported value '(.*)' for -linker option
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported value '%0' for -linker option
err_drv_unsupported_noabicalls_pic:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: position-independent code requires '-mabicalls'
  SFINAE: SFINAE_SubstitutionFailure
  Text: position-independent code requires '-mabicalls'
err_drv_unsupported_opt:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported option '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported option '%0'
err_drv_unsupported_opt_for_language_mode:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported option '(.*)' for language mode '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported option '%0' for language mode '%1'
err_drv_unsupported_opt_for_target:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported option '(.*)' for target '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported option '%0' for target '%1'
err_drv_unsupported_opt_with_suggestion:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported option '(.*)'; did you mean '(.*)'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported option '%0'; did you mean '%1'?
err_drv_unsupported_option_argument:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported argument '(.*)' to option '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported argument '%1' to option '%0'
err_drv_unsupported_rtlib_for_platform:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported runtime library '(.*)' for platform '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported runtime library '%0' for platform '%1'
err_drv_use_of_Z_option:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported use of internal gcc -Z option '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported use of internal gcc -Z option '%0'
err_dtor_expr_without_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to (?:destructor|pseudo-destructor) must be called(?:|; did you mean to call it with no arguments\?)
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
err_dup_implementation_category:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reimplementation of category (.*) for class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: reimplementation of category %1 for class %0
err_dup_implementation_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reimplementation of class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: reimplementation of class %0
err_dup_virtual:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate 'virtual' in base specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate 'virtual' in base specifier
err_duplicate_base_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base class (.*) specified more than once as a direct base class
  SFINAE: SFINAE_SubstitutionFailure
  Text: base class %0 specified more than once as a direct base class
err_duplicate_case:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate case value '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate case value '%0'
err_duplicate_case_differing_expr:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'duplicate case value: ''(.*)'' and ''(.*)'' both equal ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'duplicate case value: ''%0'' and ''%1'' both equal ''%2'''
err_duplicate_class_def:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate interface definition for class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate interface definition for class %0
err_duplicate_class_virt_specifier:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class already marked '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: class already marked '%0'
err_duplicate_declspec:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate '(.*)' declaration specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%sub{duplicate_declspec}0'
err_duplicate_default_assoc:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate default generic association
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate default generic association
err_duplicate_ivar_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variable is already declared
  SFINAE: SFINAE_SubstitutionFailure
  Text: instance variable is already declared
err_duplicate_ivar_use:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: synthesized properties (.*) and (.*) both claim instance variable (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: synthesized properties %0 and %1 both claim instance variable %2
err_duplicate_mangled_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition with same mangled name '(.*)' as another definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition with same mangled name '%0' as another definition
err_duplicate_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate member %0
err_duplicate_method_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate declaration of method (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate declaration of method %0
err_duplicate_property:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property has a previous declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: property has a previous declaration
err_duplicate_virt_specifier:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class member already marked '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: class member already marked '%0'
err_dynamic_and_noexcept_specification:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot have both throw\(\) and noexcept\(\) clause on the same function
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot have both throw() and noexcept() clause on the same function
err_dynamic_property_ivar_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dynamic property cannot have instance variable specification
  SFINAE: SFINAE_SubstitutionFailure
  Text: dynamic property cannot have instance variable specification
err_dynamic_var_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dynamic initialization is not supported for __device__, __constant__, __shared__, and __managed__ variables\.
  SFINAE: SFINAE_SubstitutionFailure
  Text: dynamic initialization is not supported for __device__, __constant__, __shared__, and __managed__ variables.
err_early_catch_all:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: catch-all handler must come last
  SFINAE: SFINAE_SubstitutionFailure
  Text: catch-all handler must come last
err_ellipsis_first_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ISO C requires a named parameter before '\.\.\.'
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C requires a named parameter before '...'
err_ellipsis_in_declarator_not_parameter:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only function and template parameters can be parameter packs
  SFINAE: SFINAE_SubstitutionFailure
  Text: only function and template parameters can be parameter packs
err_embedded_directive:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'embedding a #(.*) directive within macro arguments is not supported'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'embedding a #%0 directive within macro arguments is not supported'
err_empty_enum:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of empty enum
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of empty enum
err_empty_requires_expr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a requires expression must contain at least one requirement
  SFINAE: SFINAE_SubstitutionFailure
  Text: a requires expression must contain at least one requirement
err_empty_scalar_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: scalar initializer cannot be empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: scalar initializer cannot be empty
err_empty_sizeless_initializer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer for sizeless type (.*) cannot be empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer for sizeless type %0 cannot be empty
err_enum_invalid_underlying:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-integral type (.*) is an invalid underlying type
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-integral type %0 is an invalid underlying type
err_enum_mode_vector_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mode (.*) is not supported for enumeration types
  SFINAE: SFINAE_SubstitutionFailure
  Text: mode %0 is not supported for enumeration types
err_enum_redeclare_fixed_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumeration previously declared with (?:non|)fixed underlying type
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumeration previously declared with %select{non|}0fixed underlying type
err_enum_redeclare_scoped_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumeration previously declared as (?:un|)scoped
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumeration previously declared as %select{un|}0scoped
err_enum_redeclare_type_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumeration redeclared with different underlying type (.*) \(was (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumeration redeclared with different underlying type %0 (was %1)
err_enum_template:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumeration cannot be a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumeration cannot be a template
err_enumerator_does_not_exist:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumerator (.*) does not exist in instantiation of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumerator %0 does not exist in instantiation of %1
err_enumerator_list_missing_comma:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing ',' between enumerators
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing ',' between enumerators
err_enumerator_too_large:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumerator value is not representable in the underlying type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumerator value is not representable in the underlying type %0
err_enumerator_unnamed_no_def:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unnamed enumeration must be a definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: unnamed enumeration must be a definition
err_enumerator_wrapped:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumerator value (.*) is not representable in the underlying type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumerator value %0 is not representable in the underlying type %1
err_escape_too_large:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:hex|octal) escape sequence out of range
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{hex|octal}0 escape sequence out of range'
err_event_t_addr_space_qual:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the event_t type can only be used with __private address space qualifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: the event_t type can only be used with __private address space qualifier
err_except_spec_unparsed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected end of exception specification
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected end of exception specification
err_exception_spec_cycle:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specification of (.*) uses itself
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specification of %0 uses itself
err_exception_spec_in_typedef:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specifications are not allowed in (?:typedefs|type aliases)
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specifications are not allowed in %select{typedefs|type aliases}0
err_exception_spec_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specification needed for member of incomplete class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specification needed for member of incomplete class %0
err_exception_spec_not_parsed:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specification is not available until end of class definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specification is not available until end of class definition
err_exceptions_disabled:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use '(.*)' with exceptions disabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use '%0' with exceptions disabled
err_excess_initializers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: excess elements in (?:array|vector|scalar|union|struct) initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: excess elements in %select{array|vector|scalar|union|struct}0 initializer
err_excess_initializers_for_sizeless_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: excess elements in initializer for indivisible sizeless type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: excess elements in initializer for indivisible sizeless type %0
err_excess_initializers_in_char_array_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: excess elements in char array initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: excess elements in char array initializer
err_expected:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %0
err_expected_after:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (.*) after (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %1 after %0
err_expected_allocator_clause:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an 'allocator' clause inside of the target region; provide an 'allocator' clause or use 'requires' directive with the 'dynamic_allocators' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an 'allocator' clause inside of the target region; provide an 'allocator' clause or use 'requires' directive with the 'dynamic_allocators' clause
err_expected_allocator_expression:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an allocator expression inside of the target region; provide an allocator expression or use 'requires' directive with the 'dynamic_allocators' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an allocator expression inside of the target region; provide an allocator expression or use 'requires' directive with the 'dynamic_allocators' clause
err_expected_begin_assumes:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp end assumes'' with no matching ''#pragma omp begin assumes'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp end assumes'' with no matching ''#pragma omp begin assumes'''
err_expected_begin_declare_variant:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp end declare variant'' with no matching ''#pragma omp begin declare variant'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp end declare variant'' with no matching ''#pragma omp begin declare variant'''
err_expected_capture:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected variable name or 'this' in lambda capture list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected variable name or 'this' in lambda capture list
err_expected_case_before_expression:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'case' keyword before expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'case' keyword before expression
err_expected_catch:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected catch
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected catch
err_expected_class_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected class name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected class name
err_expected_class_name_not_template:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''typename'' is redundant; base classes are implicitly types'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''typename'' is redundant; base classes are implicitly types'
err_expected_class_or_namespace:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*) is not a class(?: or namespace|, namespace, or enumeration)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not a class%select{ or namespace|, namespace, or enumeration}1'
err_expected_colon_after_setter_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method name referenced in property setter attribute must end with ':'
  SFINAE: SFINAE_SubstitutionFailure
  Text: method name referenced in property setter attribute must end with ':'
err_expected_coloncolon_after_super:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '::' after '__super'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '::' after '__super'
err_expected_comma_greater:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ',' or '>' in template-parameter-list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ',' or '>' in template-parameter-list
err_expected_comma_or_rsquare:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ',' or '\]' in lambda capture list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ',' or ']' in lambda capture list
err_expected_either:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (.*) or (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %0 or %1
err_expected_end_declare_target_or_variant:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '#pragma omp end declare (?:target|variant)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '#pragma omp end declare %select{target|variant}0'
err_expected_end_of_enumerator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '= constant-expression' or end of enumerator definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '= constant-expression' or end of enumerator definition
err_expected_equal_designator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '=' or another designator
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '=' or another designator
err_expected_expression:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected expression
err_expected_external_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected external declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected external declaration
err_expected_field_designator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a field designator, such as '\.field = 4'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a field designator, such as '.field = 4'
err_expected_fn_body:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected function body after function declarator
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected function body after function declarator
err_expected_fold_operator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a foldable binary operator in fold expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a foldable binary operator in fold expression
err_expected_id_building_module:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a module name in '__building_module' expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a module name in '__building_module' expression
err_expected_init_in_condition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable declaration in condition must have an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable declaration in condition must have an initializer
err_expected_init_in_condition_lparen:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable declaration in condition cannot have a parenthesized initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable declaration in condition cannot have a parenthesized initializer
err_expected_kernel_void_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel must have void return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel must have void return type
err_expected_lambda_body:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected body of lambda expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected body of lambda expression
err_expected_lbrace_after_base_specifiers:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\{' after base class list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '{' after base class list
err_expected_lbrace_in_compound_literal:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\{' in compound literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '{' in compound literal
err_expected_less_after:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '<' after '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '<' after '%0'
err_expected_lparen_after:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\(' after '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '(' after '%0'
err_expected_lparen_after_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\(' for function-style cast or type construction
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '(' for function-style cast or type construction
err_expected_member_name_or_semi:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected member name or ';' after declaration specifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected member name or ';' after declaration specifiers
err_expected_member_name_or_semi_objcxx_keyword:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected member name or ';' after declaration specifiers; (.*) is a keyword in Objective-C\+\+
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
err_expected_member_or_base_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected class member or base class name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected class member or base class name
err_expected_method_body:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected method body
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected method body
err_expected_minus_or_plus:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method type specifier must start with '-' or '\+'
  SFINAE: SFINAE_SubstitutionFailure
  Text: method type specifier must start with '-' or '+'
err_expected_namespace_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected namespace name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected namespace name
err_expected_objc_container:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''@end'' must appear in an Objective-C context'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''@end'' must appear in an Objective-C context'
err_expected_parameter_pack:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected the name of a parameter pack
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected the name of a parameter pack
err_expected_parentheses_around_typename:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected parentheses around type name in (.*) expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected parentheses around type name in %0 expression
err_expected_property_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected property name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected property name
err_expected_punc:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\)' or ',' after '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ')' or ',' after '%0'
err_expected_qualified_after_typename:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a qualified name after 'typename'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a qualified name after 'typename'
err_expected_rparen_after:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\)' after '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ')' after '%0'
err_expected_selector_for_method:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected selector for Objective-C method
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected selector for Objective-C method
err_expected_semi_after_attribute_list:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after attribute list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after attribute list
err_expected_semi_after_expr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after expression
err_expected_semi_after_method_proto:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after method prototype
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after method prototype
err_expected_semi_after_namespace_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after namespace name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after namespace name
err_expected_semi_after_static_assert:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after static_assert
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after static_assert
err_expected_semi_after_stmt:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after (.*) statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after %0 statement
err_expected_semi_decl_list:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' at end of declaration list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' at end of declaration list
err_expected_semi_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' at end of declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' at end of declaration
err_expected_semi_for:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' in 'for' statement specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' in 'for' statement specifier
err_expected_semi_requirement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' at end of requirement
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' at end of requirement
err_expected_sequence_or_directive:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an OpenMP 'directive' or 'sequence' attribute argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an OpenMP 'directive' or 'sequence' attribute argument
err_expected_star_this_capture:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'this' following '\*' in lambda capture list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'this' following '*' in lambda capture list
err_expected_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected statement
err_expected_string_literal:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected string literal (?:in (.*)|for diagnostic message in static_assert|for optional message in 'availability' attribute|for (?:language|source container) name in 'external_source_symbol' attribute)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language|source container}1 name in 'external_source_symbol' attribute}0
err_expected_template:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected template
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected template
err_expected_template_parameter:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected template parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected template parameter
err_expected_token_instead_of_objcxx_keyword:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (.*); (.*) is a keyword in Objective-C\+\+
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %0; %1 is a keyword in Objective-C++
err_expected_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a type
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a type
err_expected_type_name_after_typename:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an identifier or template-id after '::'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an identifier or template-id after '::'
err_expected_unqualified_id:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (?:identifier|unqualified-id)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %select{identifier|unqualified-id}0
err_expected_version:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a version of the form 'major\[\.minor\[\.subminor\]\]'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a version of the form 'major[.minor[.subminor]]'
err_expected_while:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'while' in do/while loop
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'while' in do/while loop
err_experimental_clang_interp_failed:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the experimental clang interpreter failed to evaluate an expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: the experimental clang interpreter failed to evaluate an expression
err_explicit_instantiation_ambiguous:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: partial ordering for explicit instantiation of (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: partial ordering for explicit instantiation of %0 is ambiguous
err_explicit_instantiation_constexpr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation cannot be 'constexpr'
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation cannot be 'constexpr'
err_explicit_instantiation_data_member_not_instantiated:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation refers to static data member (.*) that is not an instantiation
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation refers to static data member %q0 that is not an instantiation
err_explicit_instantiation_declaration_after_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation declaration \(with 'extern'\) follows explicit instantiation definition \(without 'extern'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
err_explicit_instantiation_dependent:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation has dependent template arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation has dependent template arguments
err_explicit_instantiation_duplicate:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate explicit instantiation of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate explicit instantiation of %0
err_explicit_instantiation_enum:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumerations cannot be explicitly instantiated
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumerations cannot be explicitly instantiated
err_explicit_instantiation_in_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of (.*) in class scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of %0 in class scope
err_explicit_instantiation_inline:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation cannot be 'inline'
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation cannot be 'inline'
err_explicit_instantiation_internal_linkage:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation declaration of (.*) with internal linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation declaration of %0 with internal linkage
err_explicit_instantiation_member_function_not_instantiated:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation refers to member function (.*) that is not an instantiation
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation refers to member function %q0 that is not an instantiation
err_explicit_instantiation_must_be_global:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of (.*) must occur at global scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of %0 must occur at global scope
err_explicit_instantiation_nontemplate_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of non-templated type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of non-templated type %0
err_explicit_instantiation_not_known:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of (.*) does not refer to a function template, variable template, member function, member class, or static data member
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
err_explicit_instantiation_of_typedef:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of typedef (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of typedef %0
err_explicit_instantiation_out_of_scope:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of (.*) not in a namespace enclosing (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of %0 not in a namespace enclosing %1
err_explicit_instantiation_requires_name:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation declaration requires a name
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation declaration requires a name
err_explicit_instantiation_storage_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation cannot have a storage class
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation cannot have a storage class
err_explicit_instantiation_undefined_func_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of undefined function template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of undefined function template %0
err_explicit_instantiation_undefined_member:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of undefined (?:member class|member function|static data member) (.*) of class template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
err_explicit_instantiation_undefined_var_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of undefined variable template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of undefined variable template %q0
err_explicit_instantiation_unqualified_wrong_namespace:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of (.*) must occur in namespace (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of %q0 must occur in namespace %1
err_explicit_instantiation_with_definition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
err_explicit_instantiation_without_template_id:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit instantiation of (.*) must specify a template argument list
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit instantiation of %q0 must specify a template argument list
err_explicit_non_ctor_or_conv_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''explicit'' can only be applied to a constructor or conversion function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''explicit'' can only be applied to a constructor or conversion function'
err_explicit_non_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''explicit'' can only appear on non-static member functions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''explicit'' can only appear on non-static member functions'
err_explicit_out_of_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''explicit'' can only be specified inside the class definition'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''explicit'' can only be specified inside the class definition'
err_explicit_spec_non_template:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit (?:specialization|instantiation) of (?:non-|undeclared )template (.*) (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit %select{specialization|instantiation}0 of %select{non-|undeclared }3template %1 %2
err_explicit_specialization_inconsistent_storage_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit specialization has extraneous, inconsistent storage class '(?:none|extern|static|__private_extern__|auto|register)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
err_exponent_has_no_digits:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exponent has no digits
  SFINAE: SFINAE_SubstitutionFailure
  Text: exponent has no digits
err_export_empty:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: export declaration cannot be empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: export declaration cannot be empty
err_export_in_private_module_fragment:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: export declaration cannot be used in a private module fragment
  SFINAE: SFINAE_SubstitutionFailure
  Text: export declaration cannot be used in a private module fragment
err_export_internal:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of (.*) with internal linkage cannot be exported
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of %0 with internal linkage cannot be exported
err_export_no_name:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:empty|static_assert|asm) declaration cannot be exported
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{empty|static_assert|asm}0 declaration cannot be exported'
err_export_non_namespace_scope_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot export (.*) as it is not at namespace scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot export %0 as it is not at namespace scope
err_export_not_in_module_interface:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'export declaration can only be used within a module interface unit(?: after the module declaration|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: export declaration can only be used within a module interface unit%select{ after the module declaration|}0
err_export_using_internal:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration referring to (.*) with internal linkage cannot be exported
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration referring to %0 with internal linkage cannot be exported
err_export_within_anonymous_namespace:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: export declaration appears within anonymous namespace
  SFINAE: SFINAE_SubstitutionFailure
  Text: export declaration appears within anonymous namespace
err_export_within_export:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: export declaration appears within another export declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: export declaration appears within another export declaration
err_expr_not_cce:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument) is not a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 is not a constant expression'
err_expr_not_ice:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression is not an (?:integer|integral) constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression is not an %select{integer|integral}0 constant expression
err_expr_not_string_literal:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression is not a string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression is not a string literal
err_ext_vector_component_exceeds_length:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vector component access exceeds type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: vector component access exceeds type %0
err_ext_vector_component_name_illegal:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal vector component name '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal vector component name '%0'
err_extdefmap_parsing:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: CrossTU
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'error parsing index file: ''(.*)'' line: (.*) ''UniqueID filename'' format expected'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'error parsing index file: ''%0'' line: %1 ''UniqueID filename'' format expected'
err_extern_c_global_conflict:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of (.*) (?:with C language linkage|in global scope) conflicts with declaration (?:in global scope|with C language linkage)
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
err_extern_non_extern:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extern declaration of (.*) follows non-extern declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: extern declaration of %0 follows non-extern declaration
err_external_source_symbol_duplicate_clause:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate (.*) clause in an 'external_source_symbol' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate %0 clause in an 'external_source_symbol' attribute
err_external_source_symbol_expected_keyword:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'language', 'defined_in', or 'generated_declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'language', 'defined_in', or 'generated_declaration'
err_extraneous_closing_brace:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous closing brace \('\}'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous closing brace ('}')
err_extraneous_rparen_in_condition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous '\)' after condition, expected a statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous ')' after condition, expected a statement
err_extraneous_token_before_semi:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous '(.*)' before ';'
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous '%0' before ';'
err_falloff_nonvoid_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-void block does not return a value
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-void block does not return a value
err_fallthrough_attr_invalid_placement:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: fallthrough annotation does not directly precede switch label
  SFINAE: SFINAE_SubstitutionFailure
  Text: fallthrough annotation does not directly precede switch label
err_fallthrough_attr_outside_switch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: fallthrough annotation is outside switch statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: fallthrough annotation is outside switch statement
err_fallthrough_attr_wrong_target:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute is only allowed on empty statements
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute is only allowed on empty statements'
err_fe_action_not_available:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: action (.*) not compiled in
  SFINAE: SFINAE_SubstitutionFailure
  Text: action %0 not compiled in
err_fe_ast_file_modified:
  ArgsCount: 4
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'file ''(.*)'' has been modified since the (?:precompiled header|module file|AST file) ''(.*)'' was built: (?:size|mtime|content) changed(?:| \(was (.*), now (.*)\))'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'file ''%0'' has been modified since the %select{precompiled header|module file|AST file}1 ''%2'' was built: %select{size|mtime|content}3 changed%select{| (was %5, now %6)}4'
err_fe_backend_error_attr:
  ArgsCount: 2
  CategoryName: Backend Issue
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'call to (.*) declared with ''error'' attribute: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'call to %0 declared with ''error'' attribute: %1'
err_fe_dependency_file_requires_MT:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -dependency-file requires at least one -MT or -MQ option
  SFINAE: SFINAE_SubstitutionFailure
  Text: -dependency-file requires at least one -MT or -MQ option
err_fe_error_backend:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'error in backend: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'error in backend: %0'
err_fe_error_opening:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'error opening ''(.*)'': (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'error opening ''%0'': %1'
err_fe_error_reading:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: error reading '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: error reading '%0'
err_fe_error_reading_stdin:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'error reading stdin: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'error reading stdin: %0'
err_fe_expected_clang_command:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a clang compiler command
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a clang compiler command
err_fe_expected_compiler_job:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unable to handle compilation, expected exactly one compiler job in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unable to handle compilation, expected exactly one compiler job in '%0'
err_fe_invalid_alignment:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid value '(.*)' in '(.*)'; alignment must be a power of 2
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid value '%1' in '%0'; alignment must be a power of 2
err_fe_invalid_code_complete_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot locate code-completion file (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot locate code-completion file %0
err_fe_invalid_exception_model:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid exception model '(?:none|sjlj|seh|dwarf|wasm)' for target '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid exception model '%select{none|sjlj|seh|dwarf|wasm}0' for target '%1'
err_fe_invalid_plugin_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unable to find plugin '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unable to find plugin '%0'
err_fe_linking_module:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'cannot link module ''(.*)'': (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot link module ''%0'': %1'
err_fe_no_pch_in_dir:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no suitable precompiled header file found in directory '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no suitable precompiled header file found in directory '%0'
err_fe_not_a_pch_file:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'input is not a PCH file: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'input is not a PCH file: ''%0'''
err_fe_pch_file_overridden:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: file '(.*)' from the precompiled header has been overridden
  SFINAE: SFINAE_SubstitutionFailure
  Text: file '%0' from the precompiled header has been overridden
err_fe_pch_malformed:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'malformed or corrupted AST file: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'malformed or corrupted AST file: ''%0'''
err_fe_pch_malformed_block:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'malformed block record in PCH file: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'malformed block record in PCH file: ''%0'''
err_fe_remap_missing_from_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: could not remap from missing file '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: could not remap from missing file '%0'
err_fe_remap_missing_to_file:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: could not remap file '(.*)' to the contents of file '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: could not remap file '%0' to the contents of file '%1'
err_fe_unable_to_create_target:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to create target: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to create target: ''%0'''
err_fe_unable_to_interface_with_target:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unable to interface with target machine
  SFINAE: SFINAE_SubstitutionFailure
  Text: unable to interface with target machine
err_fe_unable_to_load_basic_block_sections_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to load basic block sections function list: ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to load basic block sections function list: ''%0'''
err_fe_unable_to_load_pch:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unable to load PCH file
  SFINAE: SFINAE_SubstitutionFailure
  Text: unable to load PCH file
err_fe_unable_to_load_plugin:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to load plugin ''(.*)'': ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to load plugin ''%0'': ''%1'''
err_fe_unable_to_open_output:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to open output file ''(.*)'': ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to open output file ''%0'': ''%1'''
err_fe_unable_to_read_pch_file:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to read PCH file (.*): ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to read PCH file %0: ''%1'''
err_feature_check_malformed:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: builtin feature check macro requires a parenthesized identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: builtin feature check macro requires a parenthesized identifier
err_field_declared_as_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field (.*) declared as a function
  SFINAE: SFINAE_SubstitutionFailure
  Text: field %0 declared as a function
err_field_designator_non_aggr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field designator cannot initialize a (?:non-struct, non-union|non-class) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
err_field_designator_nonfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field designator (.*) does not refer to a non-static data member
  SFINAE: SFINAE_SubstitutionFailure
  Text: field designator %0 does not refer to a non-static data member
err_field_designator_unknown:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field designator (.*) does not refer to any field in type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: field designator %0 does not refer to any field in type %1
err_field_designator_unknown_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field designator (.*) does not refer to any field in type (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: field designator %0 does not refer to any field in type %1; did you mean %2?
err_field_incomplete_or_sizeless:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field has (?:incomplete|sizeless) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: field has %select{incomplete|sizeless}0 type %1
err_field_instantiates_to_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: data member instantiated with function type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: data member instantiated with function type %0
err_field_with_address_space:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field may not be qualified with an address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: field may not be qualified with an address space
err_file_modified:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: file '(.*)' modified since it was first processed
  SFINAE: SFINAE_SubstitutionFailure
  Text: file '%0' modified since it was first processed
err_file_too_large:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'sorry, unsupported: file ''(.*)'' is too large for Clang to process'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'sorry, unsupported: file ''%0'' is too large for Clang to process'
err_filter_expression_integral:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: filter expression has non-integral type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: filter expression has non-integral type %0
err_final_function_overridden:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of (.*) overrides a '(?:final|sealed)' function
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of %0 overrides a '%select{final|sealed}1' function
err_first_argument_to_cwsc_block_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to __builtin_call_with_static_chain must not be a block call
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to __builtin_call_with_static_chain must not be a block call
err_first_argument_to_cwsc_builtin_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to __builtin_call_with_static_chain must not be a builtin call
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to __builtin_call_with_static_chain must not be a builtin call
err_first_argument_to_cwsc_not_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to __builtin_call_with_static_chain must be a non-member call expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to __builtin_call_with_static_chain must be a non-member call expression
err_first_argument_to_cwsc_pdtor_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
err_first_argument_to_va_arg_not_of_type_va_list:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to 'va_arg' is of type (.*) and not 'va_list'
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to 'va_arg' is of type %0 and not 'va_list'
err_fixed_point_not_enabled:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: compile with '-ffixed-point' to enable fixed point types
  SFINAE: SFINAE_SubstitutionFailure
  Text: compile with '-ffixed-point' to enable fixed point types
err_flexible_array_arc_retainable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ARC forbids flexible array members with retainable object type
  SFINAE: SFINAE_SubstitutionFailure
  Text: ARC forbids flexible array members with retainable object type
err_flexible_array_empty_aggregate:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: flexible array member (.*) not allowed in otherwise empty (?:struct|interface|union|class|enum)
  SFINAE: SFINAE_SubstitutionFailure
  Text: flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
err_flexible_array_has_nontrivial_dtor:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: flexible array member (.*) of type (.*) with non-trivial destruction
  SFINAE: SFINAE_SubstitutionFailure
  Text: flexible array member %0 of type %1 with non-trivial destruction
err_flexible_array_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initialization of flexible array member is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: initialization of flexible array member is not allowed
err_flexible_array_init_needs_braces:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: flexible array requires brace-enclosed initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: flexible array requires brace-enclosed initializer
err_flexible_array_not_at_end:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: flexible array member (.*) with type (.*) is not at the end of (?:struct|interface|union|class|enum)
  SFINAE: SFINAE_SubstitutionFailure
  Text: flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
err_flexible_array_union:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: flexible array member (.*) in a union is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: flexible array member %0 in a union is not allowed
err_flexible_array_virtual_base:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: flexible array member (.*) not allowed in (?:struct|interface|union|class|enum) which has a virtual base class
  SFINAE: SFINAE_SubstitutionFailure
  Text: flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
err_fold_expression_bad_operand:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression not permitted as operand of fold expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression not permitted as operand of fold expression
err_fold_expression_empty:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unary fold expression has empty expansion for operator '(.*)' with no fallback value
  SFINAE: SFINAE_SubstitutionFailure
  Text: unary fold expression has empty expansion for operator '%0' with no fallback value
err_fold_expression_limit_exceeded:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: instantiating fold expression with (.*) arguments exceeded expression nesting limit of (.*)
  SFINAE: SFINAE_Report
  Text: instantiating fold expression with %0 arguments exceeded expression nesting limit of %1
err_fold_expression_packs_both_sides:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: binary fold expression has unexpanded parameter packs in both operands
  SFINAE: SFINAE_SubstitutionFailure
  Text: binary fold expression has unexpanded parameter packs in both operands
err_fold_operator_mismatch:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: operators in fold expression must be the same
  SFINAE: SFINAE_SubstitutionFailure
  Text: operators in fold expression must be the same
err_for_co_await_not_range_for:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''co_await'' modifier can only be applied to range-based for loop'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''co_await'' modifier can only be applied to range-based for loop'
err_for_range_decl_must_be_var:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: for range declaration must declare a variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: for range declaration must declare a variable
err_for_range_deduction_failure:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use type (.*) as a range
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use type %0 as a range
err_for_range_dereference:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid range expression of type (.*); did you mean to dereference it with '\*'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid range expression of type %0; did you mean to dereference it with '*'?
err_for_range_expected_decl:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: for range declaration must declare a variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: for range declaration must declare a variable
err_for_range_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: range-based for loop requires type for loop variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: range-based for loop requires type for loop variable
err_for_range_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use incomplete type (.*) as a range
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use incomplete type %0 as a range
err_for_range_invalid:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid range expression of type (.*); no viable '(?:begin|end)' function available
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid range expression of type %0; no viable '%select{begin|end}1' function available
err_for_range_iter_deduction_failure:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use type (.*) as an iterator
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use type %0 as an iterator
err_for_range_storage_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: loop variable (.*) may not be declared (?:'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'|'thread_local')
  SFINAE: SFINAE_SubstitutionFailure
  Text: loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'|'thread_local'}1
err_format_attribute_implicit_this_format_string:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: format attribute cannot specify the implicit this argument as the format string
  SFINAE: SFINAE_SubstitutionFailure
  Text: format attribute cannot specify the implicit this argument as the format string
err_format_attribute_not:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: format argument not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: format argument not %0
err_format_attribute_requires_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: format attribute requires variadic function
  SFINAE: SFINAE_SubstitutionFailure
  Text: format attribute requires variadic function
err_format_attribute_result_not:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function does not return (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: function does not return %0
err_format_strftime_third_parameter:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: strftime format attribute requires 3rd parameter to be 0
  SFINAE: SFINAE_SubstitutionFailure
  Text: strftime format attribute requires 3rd parameter to be 0
err_forward_ref_enum:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ISO C\+\+ forbids forward references to 'enum' types
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++ forbids forward references to 'enum' types
err_forward_superclass:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attempting to use the forward class (.*) as superclass of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: attempting to use the forward class %0 as superclass of %1
err_found_in_dependent_base:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit qualification required to use member (.*) from dependent base class
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit qualification required to use member %0 from dependent base class
err_found_later_in_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member (.*) used before its declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: member %0 used before its declaration
err_friend_decl_defines_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot define a type in a friend declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot define a type in a friend declaration
err_friend_decl_does_not_match:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend declaration of (.*) does not match any declaration in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend declaration of %0 does not match any declaration in %1
err_friend_decl_spec:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' is invalid in friend declarations'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' is invalid in friend declarations'
err_friend_decl_with_def_arg_must_be_def:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend declaration specifying a default argument must be a definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend declaration specifying a default argument must be a definition
err_friend_decl_with_def_arg_redeclared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend declaration specifying a default argument must be the only declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend declaration specifying a default argument must be the only declaration
err_friend_def_in_local_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend function cannot be defined in a local class
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend function cannot be defined in a local class
err_friend_explicit_instantiation:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
err_friend_invalid_in_context:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''friend'' used outside of class'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''friend'' used outside of class'
err_friend_is_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friends cannot be members of the declaring class
  SFINAE: SFINAE_SubstitutionFailure
  Text: friends cannot be members of the declaring class
err_friend_not_first_in_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''friend'' must appear first in a non-function declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''friend'' must appear first in a non-function declaration'
err_func_def_incomplete_result:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete result type (.*) in function definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete result type %0 in function definition
err_func_def_no_params:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function definition does not declare parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: function definition does not declare parameters
err_func_returning_array_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function cannot return (?:array|function) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: function cannot return %select{array|function}0 type %1
err_func_returning_qualified_void:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: qualified-void-return-type
  Regex: function cannot return qualified void type (.*)
  SFINAE: SFINAE_Suppress
  Text: function cannot return qualified void type %0
err_function_attribute_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declared with (.*) attribute was previously declared without the (.*) attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declared with %0 attribute was previously declared without the %0 attribute
err_function_decl_cmse_ns_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: functions may not be declared with 'cmse_nonsecure_call' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: functions may not be declared with 'cmse_nonsecure_call' attribute
err_function_declared_typedef:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function definition declared 'typedef'
  SFINAE: SFINAE_SubstitutionFailure
  Text: function definition declared 'typedef'
err_function_definition_not_allowed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function definition is not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: function definition is not allowed here
err_function_is_not_record:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected (.*) in function call; perhaps remove the (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected %0 in function call; perhaps remove the %0?
err_function_marked_override_not_overriding:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) marked 'override' but does not override any member functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 marked ''override'' but does not override any member functions'
err_function_needs_feature:
  ArgsCount: 4
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: always_inline function (.*) requires target feature '(.*)', but would be inlined into function (.*) that is compiled without support for '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
err_function_parameter_pack_without_parameter_packs:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) of function parameter pack does not contain any unexpanded parameter packs
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 of function parameter pack does not contain any unexpanded parameter packs
err_function_scope_depth_exceeded:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: function scope depth exceeded maximum of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: function scope depth exceeded maximum of %0
err_function_start_invalid_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument must be a function
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument must be a function
err_function_template_partial_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function template partial specialization is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: function template partial specialization is not allowed
err_function_template_spec_ambiguous:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function template specialization (.*) ambiguously refers to more than one function template; explicitly specify(?:| additional) template arguments to identify a particular function template
  SFINAE: SFINAE_SubstitutionFailure
  Text: function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
err_function_template_spec_no_match:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no function template matches function template specialization (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no function template matches function template specialization %0
err_gc_weak_property_strong_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: weak attribute declared on a __strong type property in GC mode
  SFINAE: SFINAE_SubstitutionFailure
  Text: weak attribute declared on a __strong type property in GC mode
err_generic_sel_multi_match:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: controlling expression type (.*) compatible with (.*) generic association types
  SFINAE: SFINAE_SubstitutionFailure
  Text: controlling expression type %0 compatible with %1 generic association types
err_generic_sel_no_match:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: controlling expression type (.*) not compatible with any generic association type
  SFINAE: SFINAE_SubstitutionFailure
  Text: controlling expression type %0 not compatible with any generic association type
err_getter_not_found:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no getter method for read from property
  SFINAE: SFINAE_SubstitutionFailure
  Text: no getter method for read from property
err_global_asm_qualifier_ignored:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: meaningless '(.*)' on asm outside function
  SFINAE: SFINAE_SubstitutionFailure
  Text: meaningless '%0' on asm outside function
err_global_call_not_config:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to global function (.*) not configured
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to global function %0 not configured
err_global_module_introducer_not_at_start:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''module;'' introducing a global module fragment can appear only at the start of the translation unit'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''module;'' introducing a global module fragment can appear only at the start of the translation unit'
err_gnu_inline_asm_disabled:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: GNU-style inline assembly is disabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: GNU-style inline assembly is disabled
err_goto_into_protected_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot jump from this goto statement to its label
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot jump from this goto statement to its label
err_goto_ms_asm_label:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot jump from this goto statement to label (.*) inside an inline assembly block
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot jump from this goto statement to label %0 inside an inline assembly block
err_half_const_requires_fp16:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: half precision constant requires cl_khr_fp16
  SFINAE: SFINAE_SubstitutionFailure
  Text: half precision constant requires cl_khr_fp16
err_header_import_not_header_unit:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: header file (.*) \(aka '(.*)'\) cannot be imported because it is not known to be a header unit
  SFINAE: SFINAE_SubstitutionFailure
  Text: header file %0 (aka '%1') cannot be imported because it is not known to be a header unit
err_header_import_semi_in_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: semicolon terminating header import declaration cannot be produced by a macro
  SFINAE: SFINAE_SubstitutionFailure
  Text: semicolon terminating header import declaration cannot be produced by a macro
err_header_module_requires_modules:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: header module compilation requires '-fmodules', '-std=c\+\+20', or '-fmodules-ts'
  SFINAE: SFINAE_SubstitutionFailure
  Text: header module compilation requires '-fmodules', '-std=c++20', or '-fmodules-ts'
err_hex_constant_requires:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: hexadecimal floating (?:constant|literal) requires (?:an exponent|a significand)
  SFINAE: SFINAE_SubstitutionFailure
  Text: hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
err_hex_escape_no_digits:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: \\(.*) used with no following hex digits
  SFINAE: SFINAE_SubstitutionFailure
  Text: \%0 used with no following hex digits
err_hip_invalid_args_builtin_mangled_name:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid argument: symbol must be a device-side function or global variable'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid argument: symbol must be a device-side function or global variable'
err_iboutletcollection_builtintype:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type argument of iboutletcollection attribute cannot be a builtin type
  SFINAE: SFINAE_SubstitutionFailure
  Text: type argument of iboutletcollection attribute cannot be a builtin type
err_iboutletcollection_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid type (.*) as argument of iboutletcollection attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid type %0 as argument of iboutletcollection attribute
err_ice_ambiguous_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous conversion from type (.*) to an integral or unscoped enumeration type
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous conversion from type %0 to an integral or unscoped enumeration type
err_ice_explicit_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: integral constant expression requires explicit conversion from (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: integral constant expression requires explicit conversion from %0 to %1
err_ice_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: integral constant expression has incomplete class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: integral constant expression has incomplete class type %0
err_ice_not_integral:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:integer|integral) constant expression must have (?:integer|integral or unscoped enumeration) type, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{integer|integral}1 constant expression must have %select{integer|integral or unscoped enumeration}1 type, not %0'
err_ice_too_large:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: integer constant expression evaluates to value (.*) that cannot be represented in a (.*)-bit (?:signed|unsigned) integer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
err_id_after_template_in_nested_name_spec:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected template name after 'template' keyword in nested name specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected template name after 'template' keyword in nested name specifier
err_ident_list_in_fn_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a parameter list without types is only allowed in a function definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: a parameter list without types is only allowed in a function definition
err_ifunc_resolver_return:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ifunc resolver function must return a pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: ifunc resolver function must return a pointer
err_illegal_container_subscripting_op:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal operation on Objective-C container subscripting
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal operation on Objective-C container subscripting
err_illegal_decl_array_of_auto:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' declared as array of (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' declared as array of %1'
err_illegal_decl_array_of_functions:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' declared as array of functions of type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' declared as array of functions of type %1'
err_illegal_decl_array_of_references:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' declared as array of references of type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' declared as array of references of type %1'
err_illegal_decl_mempointer_in_nonclass:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' does not point into a class'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' does not point into a class'
err_illegal_decl_mempointer_to_reference:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' declared as a member pointer to a reference of type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' declared as a member pointer to a reference of type %1'
err_illegal_decl_mempointer_to_void:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' declared as a member pointer to void'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' declared as a member pointer to void'
err_illegal_decl_pointer_to_reference:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' declared as a pointer to a reference of type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' declared as a pointer to a reference of type %1'
err_illegal_decl_reference_to_reference:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) declared as a reference to a reference
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 declared as a reference to a reference'
err_illegal_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal initializer \(only variables can be initialized\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal initializer (only variables can be initialized)
err_illegal_initializer_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal initializer type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal initializer type %0
err_illegal_message_expr_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Objective-C message has incomplete result type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: Objective-C message has incomplete result type %0
err_illegal_qualifiers_on_catch_parm:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal qualifiers on @catch parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal qualifiers on @catch parameter
err_illegal_super_cast:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast 'super' \(it isn't an expression\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast 'super' (it isn't an expression)
err_illegal_union_or_anon_struct_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:anonymous struct|union) member (.*) has a non-trivial (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{anonymous struct|union}0 member %1 has a non-trivial %sub{select_special_member_kind}2'
err_imaginary_not_supported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: imaginary types are not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: imaginary types are not supported
err_impcast_complex_scalar:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: implicit conversion from (.*) to (.*) is not permitted in C\+\+
  SFINAE: SFINAE_SubstitutionFailure
  Text: implicit conversion from %0 to %1 is not permitted in C++
err_implementation_of_class_stub:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot declare implementation of a class declared with the 'objc_class_stub' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot declare implementation of a class declared with the 'objc_class_stub' attribute
err_implicit_coroutine_std_nothrow_type_not_found:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure\(\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
err_implicit_empty_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer for aggregate with no elements requires explicit braces
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer for aggregate with no elements requires explicit braces
err_implicit_instantiate_member_undefined:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: implicit instantiation of undefined member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: implicit instantiation of undefined member %0
err_implied_comparison_category_type_not_found:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:use builtin operator '<=>'|default 'operator<=>') because type '(.*)' was not found; include <compare>
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{use builtin operator '<=>'|default 'operator<=>'}1 because type '%0' was not found; include <compare>
err_implied_coroutine_type_not_found:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) type was not found; include <coroutine> before defining a coroutine; include <experimental/coroutine> if your version of libcxx is less than 14\.0
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 type was not found; include <coroutine> before defining a coroutine; include <experimental/coroutine> if your version of libcxx is less than 14.0'
err_implied_std_coroutine_traits_promise_type_not_class:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'this function cannot be a coroutine: (.*) is not a class'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'this function cannot be a coroutine: %0 is not a class'
err_implied_std_coroutine_traits_promise_type_not_found:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'this function cannot be a coroutine: (.*) has no member named ''promise_type'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'this function cannot be a coroutine: %q0 has no member named ''promise_type'''
err_implied_std_initializer_list_not_found:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
err_imported_module_modmap_changed:
  ArgsCount: 4
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module '(.*)' (?:in|imported by) AST file '(.*)' found in a different module map file \((.*)\) than when the importing AST file was built \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' %select{in|imported by}4 AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
err_imported_module_not_found:
  ArgsCount: 4
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module '(.*)' in AST file '(.*)' (?:\(imported by AST file '(.*)'\) |)is not defined in any loaded module map file; maybe you need to load '(.*)'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' in AST file '%1' %select{(imported by AST file '%2') |}4is not defined in any loaded module map file; maybe you need to load '%3'?
err_imported_module_relocated:
  ArgsCount: 3
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module '(.*)' was built in directory '(.*)' but now resides in directory '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' was built in directory '%1' but now resides in directory '%2'
err_in_class_initializer_bad_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static data member of type (.*) must be initialized out of line
  SFINAE: SFINAE_SubstitutionFailure
  Text: static data member of type %0 must be initialized out of line
err_in_class_initializer_literal_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: in-class initializer for static data member of type (.*) requires 'constexpr' specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: in-class initializer for static data member of type %0 requires 'constexpr' specifier
err_in_class_initializer_non_const:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-const static data member must be initialized out of line
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-const static data member must be initialized out of line
err_in_class_initializer_non_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: in-class initializer for static data member is not a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: in-class initializer for static data member is not a constant expression
err_in_class_initializer_volatile:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static const volatile data member must be initialized out of line
  SFINAE: SFINAE_SubstitutionFailure
  Text: static const volatile data member must be initialized out of line
err_include_too_large:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: sorry, this include generates a translation unit too large for Clang to process\.
  SFINAE: SFINAE_SubstitutionFailure
  Text: sorry, this include generates a translation unit too large for Clang to process.
err_incompatible_exception_specs:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: target exception specification is not superset of source
  SFINAE: SFINAE_SubstitutionFailure
  Text: target exception specification is not superset of source
err_incompatible_qualified_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning to \$ from incompatible type \$|assigning to type from incompatible type)|(?:passing \$ to parameter of incompatible type \$|passing type to parameter of incompatible type)|(?:returning \$ from a function with incompatible result type \$|returning type from a function with incompatible result type)|(?:converting \$ to incompatible type \$|converting type to incompatible type)|(?:initializing \$ with an expression of incompatible type \$|initializing type with an expression of incompatible type)|(?:sending \$ to parameter of incompatible type \$|sending type to parameter of incompatible type)|(?:casting \$ to incompatible type \$|casting type to incompatible type))
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2'
err_incompatible_vectors:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible vector types (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
err_incomplete_array_member_init:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array bound cannot be deduced from a default member initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: array bound cannot be deduced from a default member initializer
err_incomplete_base_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base class has incomplete type
  SFINAE: SFINAE_SubstitutionFailure
  Text: base class has incomplete type
err_incomplete_enum:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: enumeration (.*) is incomplete
  SFINAE: SFINAE_SubstitutionFailure
  Text: enumeration %0 is incomplete
err_incomplete_in_exception_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|pointer to |reference to )incomplete type (.*) is not allowed in exception specification
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification'
err_incomplete_member_access:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member access into incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: member access into incomplete type %0
err_incomplete_nested_name_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete type (.*) named in nested name specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete type %0 named in nested name specifier
err_incomplete_object_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete type in call to object of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete type in call to object of type %0
err_incomplete_receiver_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete receiver type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete receiver type %0
err_incomplete_synthesized_property:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot synthesize property (.*) with incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot synthesize property %0 with incomplete type %1
err_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete type (.*) where a complete type is required
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete type %0 where a complete type is required
err_incomplete_type_objc_at_encode:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''@encode'' of incomplete type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''@encode'' of incomplete type %0'
err_incomplete_type_used_in_type_trait_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete type (.*) used in type trait expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete type %0 used in type trait expression
err_incomplete_typeid:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''typeid'' of incomplete type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''typeid'' of incomplete type %0'
err_inconsistent_ivar_count:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inconsistent number of instance variables specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: inconsistent number of instance variables specified
err_incorrect_defaulted_comparison_constexpr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: defaulted definition of (?:(?:<ERROR>|equality|three-way|equality|relational) comparison operator|three-way comparison operator) cannot be declared (?:constexpr|consteval) because (?:it|the corresponding implicit 'operator==') invokes a non-constexpr comparison function
  SFINAE: SFINAE_SubstitutionFailure
  Text: defaulted definition of %select{%sub{select_defaulted_comparison_kind}1|three-way comparison operator}0 cannot be declared %select{constexpr|consteval}2 because %select{it|the corresponding implicit 'operator=='}0 invokes a non-constexpr comparison function
err_incorrect_defaulted_consteval:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: defaulted declaration of (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) cannot be consteval because implicit definition is not constexpr
  SFINAE: SFINAE_SubstitutionFailure
  Text: defaulted declaration of %sub{select_special_member_kind}0 cannot be consteval because implicit definition is not constexpr
err_incorrect_defaulted_constexpr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: defaulted definition of (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) is not constexpr
  SFINAE: SFINAE_SubstitutionFailure
  Text: defaulted definition of %sub{select_special_member_kind}0 is not constexpr
err_incorrect_number_of_vector_initializers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: number of elements must be either one or match the size of the vector
  SFINAE: SFINAE_SubstitutionFailure
  Text: number of elements must be either one or match the size of the vector
err_increment_decrement_enum:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:decrement|increment) expression of enum type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{decrement|increment}0 expression of enum type %1
err_indirect_goto_in_protected_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot jump from this (?:indirect|asm) goto statement to one of its possible targets
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot jump from this %select{indirect|asm}0 goto statement to one of its possible targets
err_indirect_goto_without_addrlabel:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: indirect goto in function with no address-of-label expressions
  SFINAE: SFINAE_SubstitutionFailure
  Text: indirect goto in function with no address-of-label expressions
err_init_capture_deduction_failure:
  ArgsCount: 2
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce type for lambda capture (.*) from initializer of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce type for lambda capture %0 from initializer of type %2
err_init_capture_deduction_failure_from_init_list:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce type for lambda capture (.*) from initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce type for lambda capture %0 from initializer list
err_init_capture_multiple_expressions:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer for lambda capture (.*) contains multiple expressions
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer for lambda capture %0 contains multiple expressions
err_init_capture_no_expression:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer missing for lambda capture (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer missing for lambda capture %0
err_init_capture_paren_braces:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce type for lambda capture (.*) from (?:parenthesized|nested) initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
err_init_conversion_failed:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'cannot initialize (?:a variable|a parameter|template parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function) (?:of type \$ with an (?:rvalue|lvalue) of type \$|with an (?:rvalue|lvalue) of incompatible type)(?:|: different classes(?: \(\$ vs \$\)|)|: different number of parameters \((.*) vs (.*)\)|: type mismatch at \d+(?:st|nd|rd|th) parameter(?: \(\$ vs \$\)|)|: different return type(?: \(\$ vs \$\)|)|: different qualifiers \((.*) vs (.*)\)|: different exception specifications)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot initialize %select{a variable|a parameter|template parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4'
err_init_element_not_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer element is not a compile-time constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer element is not a compile-time constant
err_init_for_function_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot create object of function type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot create object of function type %0
err_init_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initialization of incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: initialization of incomplete type %0
err_init_list_bad_dest_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|non-aggregate )type (.*) cannot be initialized with an initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|non-aggregate }0type %1 cannot be initialized with an initializer list'
err_init_list_bin_op:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer list cannot be used on the (?:left|right) hand side of operator '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
err_init_method_bad_return_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: init methods must return an object pointer type, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: init methods must return an object pointer type, not %0
err_init_non_aggr_init_list:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initialization of non-aggregate type (.*) with an initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: initialization of non-aggregate type %0 with an initializer list
err_init_objc_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot initialize Objective-C class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot initialize Objective-C class type %0
err_init_priority_object_attr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: can only use 'init_priority' attribute on file-scope definitions of objects of class type
  SFINAE: SFINAE_SubstitutionFailure
  Text: can only use 'init_priority' attribute on file-scope definitions of objects of class type
err_init_reference_member_uninitialized:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference member of type (.*) uninitialized
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference member of type %0 uninitialized
err_initializer_overrides_destructed:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer would partially override prior initialization of object of type (.*) with non-trivial destruction
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer would partially override prior initialization of object of type %1 with non-trivial destruction
err_initializer_string_for_char_array_too_long:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer-string for char array is too long
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer-string for char array is too long
err_inline_decl_follows_def:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inline declaration of (.*) follows non-inline definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: inline declaration of %0 follows non-inline definition
err_inline_declaration_block_scope:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inline declaration of (.*) not allowed in block scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: inline declaration of %0 not allowed in block scope
err_inline_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''main'' is not allowed to be declared inline'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''main'' is not allowed to be declared inline'
err_inline_namespace_alias:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: namespace alias cannot be inline
  SFINAE: SFINAE_SubstitutionFailure
  Text: namespace alias cannot be inline
err_inline_namespace_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-inline namespace cannot be reopened as inline
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-inline namespace cannot be reopened as inline
err_inline_nested_namespace_definition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nested namespace definition cannot be 'inline'
  SFINAE: SFINAE_SubstitutionFailure
  Text: nested namespace definition cannot be 'inline'
err_inline_non_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''inline'' can only appear on functions(?:| and non-local variables)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''inline'' can only appear on functions%select{| and non-local variables}0'
err_int_to_block_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid block pointer conversion (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
err_integer_literal_too_large:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: integer literal is too large to be represented in any (?:signed |)integer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: integer literal is too large to be represented in any %select{signed |}0integer type
err_integer_sequence_integral_element_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: integer sequences must have integral element type
  SFINAE: SFINAE_SubstitutionFailure
  Text: integer sequences must have integral element type
err_integer_sequence_negative_length:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: integer sequences must have non-negative sequence length
  SFINAE: SFINAE_SubstitutionFailure
  Text: integer sequences must have non-negative sequence length
err_introducing_special_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:must use a qualified name when declaring|cannot declare) a (?:constructor|destructor|conversion operator|deduction guide) as a friend
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend'
err_invalid_asm_cast_lvalue:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid use of a cast in a inline asm context requiring an lvalue: remove the cast or build with -fheinous-gnu-extensions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid use of a cast in a inline asm context requiring an lvalue: remove the cast or build with -fheinous-gnu-extensions'
err_invalid_asm_value_for_constraint:
  ArgsCount: 2
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: value '(.*)' out of range for constraint '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: value '%0' out of range for constraint '%1'
err_invalid_astype_of_different_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid reinterpretation: sizes of (.*) and (.*) must match'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid reinterpretation: sizes of %0 and %1 must match'
err_invalid_attribute_on_virtual_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to virtual functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to virtual functions'
err_invalid_base_in_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: interface type cannot inherit from (?:struct|non-public interface|class) (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: interface type cannot inherit from %select{struct|non-public interface|class}0 %1
err_invalid_branch_protection:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid branch protection option '(.*)' in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid branch protection option '%0' in '%1'
err_invalid_branch_protection_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid or misplaced branch protection specification '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid or misplaced branch protection specification '%0'
err_invalid_char_raw_delim:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid character '(.*)' character in raw string delimiter; use PREFIX\( \)PREFIX to delimit raw string
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
err_invalid_character_to_charify:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument to convert to character
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument to convert to character
err_invalid_character_udl:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: character literal with user-defined suffix cannot be used here
  SFINAE: SFINAE_SubstitutionFailure
  Text: character literal with user-defined suffix cannot be used here
err_invalid_collection_element:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: collection element of type (.*) is not an Objective-C object
  SFINAE: SFINAE_SubstitutionFailure
  Text: collection element of type %0 is not an Objective-C object
err_invalid_complex_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''_Complex (.*)'' is invalid'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''_Complex %0'' is invalid'
err_invalid_consteval_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to consteval function (.*) is not a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to consteval function %q0 is not a constant expression
err_invalid_consteval_decl_kind:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be declared consteval
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be declared consteval'
err_invalid_consteval_take_address:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot take address of consteval function (.*) outside of an immediate invocation
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot take address of consteval function %0 outside of an immediate invocation
err_invalid_constexpr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:function parameter|typedef) cannot be (?:<ERROR>|constexpr|consteval|constinit)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{function parameter|typedef}0 cannot be %sub{select_constexpr_spec_kind}1'
err_invalid_constexpr_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-static data member cannot be constexpr(?:; did you intend to make it (?:const|static)\?|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
err_invalid_constexpr_var_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constexpr variable declaration must be a definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: constexpr variable declaration must be a definition
err_invalid_conversion_between_ext_vectors:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid conversion between ext-vector type (.*) and (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid conversion between ext-vector type %0 and %1
err_invalid_conversion_between_matrix_and_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion between matrix type (.*) and incompatible type (.*) is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion between matrix type %0 and incompatible type %1 is not allowed
err_invalid_conversion_between_matrixes:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'conversion between matrix types(?: \$ and \$|) of different size is not allowed'
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion between matrix types%diff{ $ and $|}0,1 of different size is not allowed
err_invalid_conversion_between_vector_and_integer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid conversion between vector type (.*) and integer type (.*) of different size
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid conversion between vector type %0 and integer type %1 of different size
err_invalid_conversion_between_vector_and_scalar:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid conversion between vector type (.*) and scalar type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid conversion between vector type %0 and scalar type %1
err_invalid_conversion_between_vectors:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid conversion between vector type(?: \$ and \$|) of different size'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid conversion between vector type%diff{ $ and $|}0,1 of different size
err_invalid_cpu_is:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid cpu name for builtin
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid cpu name for builtin
err_invalid_cpu_specific_dispatch_value:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid option '(.*)' for (?:cpu_specific|cpu_dispatch)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
err_invalid_cpu_supports:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid cpu feature string for builtin
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid cpu feature string for builtin
err_invalid_cxx_abi:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid C\+\+ ABI name '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid C++ ABI name '%0'
err_invalid_decl_spec_combination:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot combine with previous '(.*)' declaration specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot combine with previous '%0' declaration specifier
err_invalid_decl_specifier_in_nontype_parm:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid declaration specifier in template non-type parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid declaration specifier in template non-type parameter
err_invalid_declarator_global_scope:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition or redeclaration of (.*) cannot name the global scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition or redeclaration of %0 cannot name the global scope
err_invalid_declarator_in_block:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition or redeclaration of (.*) not allowed inside a block
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition or redeclaration of %0 not allowed inside a block
err_invalid_declarator_in_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition or redeclaration of (.*) not allowed inside a function
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition or redeclaration of %0 not allowed inside a function
err_invalid_declarator_scope:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot define or redeclare (.*) here because namespace (.*) does not enclose namespace (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
err_invalid_digit:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid digit '(.*)' in (?:decimal|octal|binary) constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid digit '%0' in %select{decimal|octal|binary}1 constant
err_invalid_feature_combination:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid feature combination: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid feature combination: %0'
err_invalid_form_pointer_member_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot create a non-constant pointer to member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot create a non-constant pointer to member function
err_invalid_incomplete_type_use:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of incomplete type %0
err_invalid_macos_32bit_deployment_target:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 32-bit targets are not supported when building for Mac Catalyst
  SFINAE: SFINAE_SubstitutionFailure
  Text: 32-bit targets are not supported when building for Mac Catalyst
err_invalid_mask_type_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mask type size must be between 1-byte and 8-bytes
  SFINAE: SFINAE_SubstitutionFailure
  Text: mask type size must be between 1-byte and 8-bytes
err_invalid_member_in_interface:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class )(.*) is not permitted within an interface type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type'
err_invalid_member_use_in_static_method:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of member (.*) in static member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of member %0 in static member function
err_invalid_neon_type_code:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible constant for this __builtin_neon function
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible constant for this __builtin_neon function
err_invalid_non_static_member_use:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of non-static data member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of non-static data member %0
err_invalid_nsnumber_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not a valid literal type for NSNumber
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not a valid literal type for NSNumber'
err_invalid_numeric_udl:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: numeric literal with user-defined suffix cannot be used here
  SFINAE: SFINAE_SubstitutionFailure
  Text: numeric literal with user-defined suffix cannot be used here
err_invalid_operator_on_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use (?:dot|arrow) operator on a type
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use %select{dot|arrow}0 operator on a type
err_invalid_pcs:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid PCS type
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid PCS type
err_invalid_pixel_decl_spec_combination:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__pixel'' must be preceded by ''__vector''\.  ''(.*)'' declaration specifier not allowed here'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__pixel'' must be preceded by ''__vector''.  ''%0'' declaration specifier not allowed here'
err_invalid_property_name:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not a valid property name \(accessing an object of type (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not a valid property name (accessing an object of type %1)'
err_invalid_protocol_qualifiers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid protocol qualifiers on non-ObjC type
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid protocol qualifiers on non-ObjC type
err_invalid_qualified_constructor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' qualifier is not allowed on a constructor'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' qualifier is not allowed on a constructor'
err_invalid_qualified_destructor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' qualifier is not allowed on a destructor'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' qualifier is not allowed on a destructor'
err_invalid_qualified_function_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-member function|static member function|deduction guide) (?:of type (.*) |)cannot have '(.*)' qualifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have ''%3'' qualifier'
err_invalid_receiver_class_message:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: receiver type (.*) is not an Objective-C class
  SFINAE: SFINAE_SubstitutionFailure
  Text: receiver type %0 is not an Objective-C class
err_invalid_receiver_to_message_super:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''super'' is only valid in a method body'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''super'' is only valid in a method body'
err_invalid_reference_qualifier_application:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' qualifier may not be applied to a reference'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' qualifier may not be applied to a reference'
err_invalid_saturation_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''_Sat'' specifier is only valid on ''_Fract'' or ''_Accum'', not ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''_Sat'' specifier is only valid on ''_Fract'' or ''_Accum'', not ''%0'''
err_invalid_sign_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' cannot be signed or unsigned'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' cannot be signed or unsigned'
err_invalid_sls_hardening:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid sls hardening option '(.*)' in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid sls hardening option '%0' in '%1'
err_invalid_storage_class_in_func_decl:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid storage class specifier in function declarator
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid storage class specifier in function declarator
err_invalid_string_udl:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: string literal with user-defined suffix cannot be used here
  SFINAE: SFINAE_SubstitutionFailure
  Text: string literal with user-defined suffix cannot be used here
err_invalid_suffix_constant:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid suffix '(.*)' on (?:integer|floating|fixed-point) constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid suffix '%0' on %select{integer|floating|fixed-point}1 constant
err_invalid_super_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of '__super', this keyword can only be used inside class or member function scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of '__super', this keyword can only be used inside class or member function scope
err_invalid_this_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of 'this' outside of a non-static member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of 'this' outside of a non-static member function
err_invalid_thread:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' is only allowed on variable declarations'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' is only allowed on variable declarations'
err_invalid_token_after_declarator_suggest_equal:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid (.*) at end of declaration; did you mean '='\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid %0 at end of declaration; did you mean '='?
err_invalid_token_after_toplevel_declarator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after top level declarator
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after top level declarator
err_invalid_type_for_program_scope_var:
  ArgsCount: 1
  CategoryName: Related Result Type Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the (.*) type cannot be used to declare a program scope variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: the %0 type cannot be used to declare a program scope variable
err_invalid_use_of_array_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: an array type is not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: an array type is not allowed here
err_invalid_use_of_function_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a function type is not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: a function type is not allowed here
err_invalid_utf8:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: source file is not valid UTF-8
  SFINAE: SFINAE_SubstitutionFailure
  Text: source file is not valid UTF-8
err_invalid_var_template_spec_type:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) of (?:explicit instantiation|explicit specialization|partial specialization|redeclaration) of (.*) does not match expected type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
err_invalid_vector_bool_decl_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use '(.*)' with '__vector bool'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use '%0' with '__vector bool'
err_invalid_vector_bool_int128_decl_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of '__int128' with '__vector bool' requires VSX support enabled \(on POWER10 or later\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of '__int128' with '__vector bool' requires VSX support enabled (on POWER10 or later)
err_invalid_vector_decl_spec_combination:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot combine with previous '(.*)' declaration specifier\. '__vector' must be first
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot combine with previous '%0' declaration specifier. '__vector' must be first
err_invalid_vector_double_decl_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of 'double' with '__vector' requires VSX support to be enabled \(available on POWER7 or later\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
err_invalid_vector_float_decl_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use 'float' with '__vector'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use 'float' with '__vector'
err_invalid_vector_int128_decl_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of '__int128' with '__vector' requires extended Altivec support \(available on POWER8 or later\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of '__int128' with '__vector' requires extended Altivec support (available on POWER8 or later)
err_invalid_vector_long_decl_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use 'long' with '__vector'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use 'long' with '__vector'
err_invalid_vector_long_double_decl_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use 'long double' with '__vector'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use 'long double' with '__vector'
err_invalid_vector_long_long_decl_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of 'long long' with '__vector' requires VSX support \(available on POWER7 or later\) to be enabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of 'long long' with '__vector' requires VSX support (available on POWER7 or later) to be enabled
err_invalid_vfs_overlay:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: invalid virtual filesystem overlay file '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid virtual filesystem overlay file '%0'
err_invalid_width_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(?:|short|long|long long) (.*)'' is invalid'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%select{|short|long|long long}0 %1'' is invalid'
err_ivar_access_using_property_syntax_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) not found on object of type (.*); did you mean to access instance variable (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 not found on object of type %1; did you mean to access instance variable %2?
err_ivar_in_superclass_use:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) attempting to use instance variable (.*) declared in super class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 attempting to use instance variable %1 declared in super class %2
err_ivar_reference_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variables cannot be of reference type
  SFINAE: SFINAE_SubstitutionFailure
  Text: instance variables cannot be of reference type
err_ivar_use_in_class_method:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variable (.*) accessed in class method
  SFINAE: SFINAE_SubstitutionFailure
  Text: instance variable %0 accessed in class method
err_kern_call_not_global_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel call to non-global function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel call to non-global function %0
err_kern_is_nonstatic_method:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel function (.*) must be a free function or static member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel function %0 must be a free function or static member function
err_kern_type_not_void_return:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel function type (.*) must have void return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel function type %0 must have void return type
err_kernel_arg_address_space:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
err_keyword_as_parameter:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid parameter name: ''(.*)'' is a keyword'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid parameter name: ''%0'' is a keyword'
err_l_square_l_square_not_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: C\+\+11 only allows consecutive left square brackets when introducing an attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: C++11 only allows consecutive left square brackets when introducing an attribute
err_label_end_of_compound_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'label at end of compound statement: expected statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'label at end of compound statement: expected statement'
err_lambda_after_delete:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''\[\]'' after delete interpreted as ''delete\[\]''; add parentheses to treat this as a lambda-expression'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''[]'' after delete interpreted as ''delete[]''; add parentheses to treat this as a lambda-expression'
err_lambda_capture_anonymous_var:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unnamed variable cannot be implicitly captured in a lambda expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: unnamed variable cannot be implicitly captured in a lambda expression
err_lambda_capture_default_arg:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: lambda expression in default argument cannot capture any entity
  SFINAE: SFINAE_SubstitutionFailure
  Text: lambda expression in default argument cannot capture any entity
err_lambda_capture_flexarray_type:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) with flexible array member cannot be captured in a lambda expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 with flexible array member cannot be captured in a lambda expression
err_lambda_capture_misplaced_ellipsis:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ellipsis in pack (?:|init-)capture must appear (?:after|before) the name of the capture
  SFINAE: SFINAE_SubstitutionFailure
  Text: ellipsis in pack %select{|init-}0capture must appear %select{after|before}0 the name of the capture
err_lambda_capture_multiple_ellipses:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple ellipses in pack capture
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple ellipses in pack capture
err_lambda_decl_ref_not_modifiable_lvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot assign to a variable captured by copy in a non-mutable lambda
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot assign to a variable captured by copy in a non-mutable lambda
err_lambda_decl_specifier_repeated:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:'mutable'|'constexpr'|'consteval') cannot appear multiple times in a lambda declarator
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{''mutable''|''constexpr''|''consteval''}0 cannot appear multiple times in a lambda declarator'
err_lambda_impcap:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) cannot be implicitly captured in a lambda with no capture-default specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 cannot be implicitly captured in a lambda with no capture-default specified
err_lambda_in_constant_expression:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a lambda expression may not appear inside of a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: a lambda expression may not appear inside of a constant expression
err_lambda_in_invalid_context:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a lambda expression cannot appear in this context
  SFINAE: SFINAE_SubstitutionFailure
  Text: a lambda expression cannot appear in this context
err_lambda_incomplete_result:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete result type (.*) in lambda expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete result type %0 in lambda expression
err_lambda_return_init_list:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot deduce lambda return type from initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot deduce lambda return type from initializer list
err_lambda_template_parameter_list_empty:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: lambda template parameter list cannot be empty
  SFINAE: SFINAE_SubstitutionFailure
  Text: lambda template parameter list cannot be empty
err_lambda_unevaluated_operand:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: lambda expression in an unevaluated operand
  SFINAE: SFINAE_SubstitutionFailure
  Text: lambda expression in an unevaluated operand
err_language_linkage_spec_not_ascii:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: string literal in language linkage specifier cannot have an encoding-prefix
  SFINAE: SFINAE_SubstitutionFailure
  Text: string literal in language linkage specifier cannot have an encoding-prefix
err_language_linkage_spec_unknown:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown linkage language
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown linkage language
err_late_asm_label_name:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot apply asm label to (?:variable|function) after its first use
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot apply asm label to %select{variable|function}0 after its first use
err_lexing_char:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: failure when lexing a character literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: failure when lexing a character literal
err_lexing_numeric:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: failure when lexing a numeric literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: failure when lexing a numeric literal
err_lexing_string:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: failure when lexing a string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: failure when lexing a string literal
err_lifetimebound_ctor_dtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''lifetimebound'' attribute cannot be applied to a (?:constructor|destructor)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''lifetimebound'' attribute cannot be applied to a %select{constructor|destructor}0'
err_lifetimebound_no_object_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''lifetimebound'' attribute cannot be applied; (?:static |non-)member function has no implicit object parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''lifetimebound'' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter'
err_list_init_in_parens:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot initialize (?:non-class|reference) type (.*) with a parenthesized initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
err_literal_operator_bad_param_count:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-template literal operator must have one or two parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-template literal operator must have one or two parameters
err_literal_operator_default_argument:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: literal operator cannot have a default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: literal operator cannot have a default argument
err_literal_operator_extern_c:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: literal operator must have C\+\+ linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: literal operator must have C++ linkage
err_literal_operator_id_outside_namespace:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-namespace scope '(.*)' cannot have a literal operator member
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-namespace scope '%0' cannot have a literal operator member
err_literal_operator_invalid_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char \*'
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
err_literal_operator_outside_namespace:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: literal operator (.*) must be in a namespace or global scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: literal operator %0 must be in a namespace or global scope
err_literal_operator_param:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid literal operator parameter type (.*), did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid literal operator parameter type %0, did you mean %1?
err_literal_operator_string_not_empty:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: string literal after 'operator' must be '""'
  SFINAE: SFINAE_SubstitutionFailure
  Text: string literal after 'operator' must be '""'
err_literal_operator_string_prefix:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: string literal after 'operator' cannot have an encoding prefix
  SFINAE: SFINAE_SubstitutionFailure
  Text: string literal after 'operator' cannot have an encoding prefix
err_literal_operator_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter list for literal operator must be either 'char\.\.\.' or 'typename T, T\.\.\.'
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter list for literal operator must be either 'char...' or 'typename T, T...'
err_literal_operator_template_with_params:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: literal operator template cannot have any parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: literal operator template cannot have any parameters
err_loader_uninitialized_cant_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable with 'loader_uninitialized' attribute cannot have an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable with 'loader_uninitialized' attribute cannot have an initializer
err_loader_uninitialized_extern_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) cannot be declared both 'extern' and with the 'loader_uninitialized' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 cannot be declared both 'extern' and with the 'loader_uninitialized' attribute
err_loader_uninitialized_redeclaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration cannot add 'loader_uninitialized' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration cannot add 'loader_uninitialized' attribute
err_loader_uninitialized_trivial_ctor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable with 'loader_uninitialized' attribute must have a trivial default constructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable with 'loader_uninitialized' attribute must have a trivial default constructor
err_local_cant_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__local'' variable cannot have an initializer'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__local'' variable cannot have an initializer'
err_lvalue_reference_bind_to_initlist:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-const|volatile) lvalue reference to type (.*) cannot bind to an initializer list temporary
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary'
err_lvalue_reference_bind_to_temporary:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-const|volatile) lvalue reference (?:to type \$ cannot bind to a temporary of type \$|cannot bind to incompatible temporary)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2'
err_lvalue_reference_bind_to_unrelated:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-const|volatile) lvalue reference (?:to type \$ cannot bind to a value of unrelated type \$|cannot bind to a value of unrelated type)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2'
err_lvalue_to_rvalue_ref:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: rvalue reference (?:to type \$ cannot bind to lvalue of type \$|cannot bind to incompatible lvalue)
  SFINAE: SFINAE_SubstitutionFailure
  Text: rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
err_machine_mode:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:unknown|unsupported) machine mode (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{unknown|unsupported}0 machine mode %1'
err_main_arg_wrong:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:first|second|third|fourth) parameter of 'main' \((?:argument count|argument array|environment|platform-specific data)\) must be of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{first|second|third|fourth}0 parameter of ''main'' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1'
err_main_global_variable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: main cannot be declared as global variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: main cannot be declared as global variable
err_main_returns_nonint:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''main'' must return ''int'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''main'' must return ''int'''
err_main_surplus_args:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'too many parameters \((.*)\) for ''main'': must be 0, 2, or 3'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'too many parameters (%0) for ''main'': must be 0, 2, or 3'
err_mainlike_template_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be a template'
err_malformed_std_coroutine_handle:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: std::coroutine_handle isn't a class template
  SFINAE: SFINAE_SubstitutionFailure
  Text: std::coroutine_handle isn't a class template
err_malformed_std_coroutine_traits:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: std::coroutine_traits isn't a class template
  SFINAE: SFINAE_SubstitutionFailure
  Text: std::coroutine_traits isn't a class template
err_malformed_std_initializer_list:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: std::initializer_list must be a class template with a single type parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: std::initializer_list must be a class template with a single type parameter
err_malformed_std_nothrow:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: std::nothrow must be a valid variable declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: std::nothrow must be a valid variable declaration
err_matrix_incomplete_index:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: single subscript expressions are not allowed for matrix values
  SFINAE: SFINAE_SubstitutionFailure
  Text: single subscript expressions are not allowed for matrix values
err_matrix_index_not_integer:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: matrix (?:row|column) index is not an integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: matrix %select{row|column}0 index is not an integer
err_matrix_index_outside_range:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: matrix (?:row|column) index is outside the allowed range \[0, (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: matrix %select{row|column}0 index is outside the allowed range [0, %1)
err_matrix_separate_incomplete_index:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: matrix row and column subscripts cannot be separated by any expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: matrix row and column subscripts cannot be separated by any expression
err_matrix_subscript_comma:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: comma expressions are not allowed as indices in matrix subscript expressions
  SFINAE: SFINAE_SubstitutionFailure
  Text: comma expressions are not allowed as indices in matrix subscript expressions
err_maybe_falloff_nonvoid_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-void block does not return a value in all control paths
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-void block does not return a value in all control paths
err_mem_init_not_member_or_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member initializer (.*) does not name a non-static data member or base class
  SFINAE: SFINAE_SubstitutionFailure
  Text: member initializer %0 does not name a non-static data member or base class
err_mem_init_not_member_or_class_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer (.*) does not name a non-static data member or base class; did you mean the (?:base class|member) (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
err_member_call_without_object:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to non-static member function without an object argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to non-static member function without an object argument
err_member_decl_does_not_match:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: out-of-line (?:declaration|definition) of (.*) does not match any declaration in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
err_member_decl_does_not_match_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: out-of-line (?:declaration|definition) of (.*) does not match any declaration in (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
err_member_def_does_not_match_ret_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type of out-of-line definition of (.*) differs from that in the declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type of out-of-line definition of %q0 differs from that in the declaration
err_member_def_undefined_record:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: out-of-line definition of (.*) from class (.*) without definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: out-of-line definition of %0 from class %1 without definition
err_member_extra_qualification:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extra qualification on member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: extra qualification on member %0
err_member_function_call_bad_cvr:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''this'' argument to member function (.*) has type (.*), but function is not marked (?:const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''this'' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2'
err_member_function_call_bad_ref:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''this'' argument to member function (.*) is an (?:lvalue|rvalue), but function has (?:non-const lvalue|rvalue) ref-qualifier'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''this'' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier'
err_member_function_call_bad_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot initialize object parameter of type (.*) with an expression of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot initialize object parameter of type %0 with an expression of type %1
err_member_function_initialization:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer on function does not look like a pure-specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer on function does not look like a pure-specifier
err_member_name_of_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member (.*) has the same name as its class
  SFINAE: SFINAE_SubstitutionFailure
  Text: member %0 has the same name as its class
err_member_not_yet_instantiated:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no member (.*) in (.*); it has not yet been instantiated
  SFINAE: SFINAE_SubstitutionFailure
  Text: no member %0 in %1; it has not yet been instantiated
err_member_qualification:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-friend class member (.*) cannot have a qualified name
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-friend class member %0 cannot have a qualified name
err_member_redeclared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class member cannot be redeclared
  SFINAE: SFINAE_SubstitutionFailure
  Text: class member cannot be redeclared
err_member_redeclared_in_instantiation:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple overloads of (.*) instantiate to the same signature (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple overloads of %0 instantiate to the same signature %1
err_member_reference_needs_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: base of member reference is a function; perhaps you meant to call it(?:| with no arguments)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
err_mempointer_in_nonclass_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member pointer refers into non-class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: member pointer refers into non-class type %0
err_memptr_conv_via_virtual:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion from pointer to member of class (.*) to pointer to member of class (.*) via virtual base (.*) is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
err_memptr_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member pointer has incomplete base type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: member pointer has incomplete base type %0
err_memtag_any2arg_pointer:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: at least one argument of MTE builtin function must be a pointer \((.*), (.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: at least one argument of MTE builtin function must be a pointer (%0, %1 invalid)
err_memtag_arg_must_be_integer:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) argument of MTE builtin function must be an integer type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 argument of MTE builtin function must be an integer type (%1 invalid)'
err_memtag_arg_must_be_pointer:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) argument of MTE builtin function must be a pointer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 argument of MTE builtin function must be a pointer (%1 invalid)'
err_memtag_arg_null_or_pointer:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) argument of MTE builtin function must be a null or a pointer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 argument of MTE builtin function must be a null or a pointer (%1 invalid)'
err_messaging_class_with_direct_method:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: messaging a Class with a method that is possibly direct
  SFINAE: SFINAE_SubstitutionFailure
  Text: messaging a Class with a method that is possibly direct
err_messaging_super_with_direct_method:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: messaging super with a direct method
  SFINAE: SFINAE_SubstitutionFailure
  Text: messaging super with a direct method
err_messaging_unqualified_id_with_direct_method:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: messaging unqualified id with a method that is possibly direct
  SFINAE: SFINAE_SubstitutionFailure
  Text: messaging unqualified id with a method that is possibly direct
err_method_kernel:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel functions cannot be class members
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel functions cannot be class members
err_method_not_found_with_typo:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:instance|class) method (.*) not found ; did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{instance|class}1 method %0 not found ; did you mean %2?'
err_mips_builtin_requires_dsp:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin requires 'dsp' ASE, please use -mdsp
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin requires 'dsp' ASE, please use -mdsp
err_mips_builtin_requires_dspr2:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin requires 'dsp r2' ASE, please use -mdspr2
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin requires 'dsp r2' ASE, please use -mdspr2
err_mips_builtin_requires_msa:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin requires 'msa' ASE, please use -mmsa
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin requires 'msa' ASE, please use -mmsa
err_mips_fp64_req:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' can only be used if the target supports the mfhc1 and mthc1 instructions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' can only be used if the target supports the mfhc1 and mthc1 instructions'
err_mismatched_code_seg_base:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: derived class must specify the same code segment as its base classes
  SFINAE: SFINAE_SubstitutionFailure
  Text: derived class must specify the same code segment as its base classes
err_mismatched_code_seg_override:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overriding virtual function must specify the same code segment as its overridden function
  SFINAE: SFINAE_SubstitutionFailure
  Text: overriding virtual function must specify the same code segment as its overridden function
err_mismatched_exception_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specification in declaration does not match previous declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specification in declaration does not match previous declaration
err_mismatched_exception_spec_explicit_instantiation:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specification in explicit instantiation does not match instantiated one
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specification in explicit instantiation does not match instantiated one
err_mismatched_ms_inheritance:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inheritance model does not match (?:definition|previous declaration)
  SFINAE: SFINAE_SubstitutionFailure
  Text: inheritance model does not match %select{definition|previous declaration}0
err_mismatched_owning_module:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of (.*) in (?:the global module|module (.*)) follows declaration in (?:the global module|module (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
err_mismatched_uuid:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: uuid does not match previous declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: uuid does not match previous declaration
err_mismatched_visibility:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: visibility does not match previous declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: visibility does not match previous declaration
err_misplaced_ellipsis_in_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''\.\.\.'' must (?:immediately precede declared identifier|be innermost component of anonymous pack declaration)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''...'' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0'
err_misplaced_ivar:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variables may not be placed in (?:categories|class extension)
  SFINAE: SFINAE_SubstitutionFailure
  Text: instance variables may not be placed in %select{categories|class extension}0
err_missing_actual_pipe_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing actual type specifier for pipe
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing actual type specifier for pipe
err_missing_atsign_prefix:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:string|numeric) literal must be prefixed by '@'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{string|numeric}0 literal must be prefixed by ''@'''
err_missing_before_module_end:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (.*) at end of module
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %0 at end of module
err_missing_catch_finally:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@try statement without a @catch and @finally clause'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@try statement without a @catch and @finally clause'
err_missing_comma_before_ellipsis:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: C requires a comma prior to the ellipsis in a variadic function type
  SFINAE: SFINAE_SubstitutionFailure
  Text: C requires a comma prior to the ellipsis in a variadic function type
err_missing_default_ctor:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:constructor for (.*) must explicitly initialize the|implicit default constructor for (.*) must explicitly initialize the|cannot use constructor inherited from base class (.*);) (?:base class|member) (.*) (?:which|which|of (.*)) does not have a default constructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor'
err_missing_dependent_template_keyword:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use 'template' keyword to treat '(.*)' as a dependent template name
  SFINAE: SFINAE_SubstitutionFailure
  Text: use 'template' keyword to treat '%0' as a dependent template name
err_missing_end_of_definition:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing '\}' at end of definition of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing '}' at end of definition of %q0
err_missing_exception_specification:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is missing exception specification '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is missing exception specification ''%1'''
err_missing_method_context:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing context for method declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing context for method declaration
err_missing_module:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no module named '(.*)' declared in module map file '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no module named '%0' declared in module map file '%1'
err_missing_module_name:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no module name provided; specify one with -fmodule-name=
  SFINAE: SFINAE_SubstitutionFailure
  Text: no module name provided; specify one with -fmodule-name=
err_missing_open_square_message_send:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing '\[' at start of message send expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing '[' at start of message send expression
err_missing_param:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected parameter declarator
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected parameter declarator
err_missing_property_context:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing context for property implementation declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing context for property implementation declaration
err_missing_property_interface:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property implementation in a category with no category declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: property implementation in a category with no category declaration
err_missing_property_ivar_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: synthesized property (.*) must either be named the same as a compatible instance variable or must explicitly name an instance variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
err_missing_type_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: C\+\+ requires a type specifier for all declarations
  SFINAE: SFINAE_SubstitutionFailure
  Text: C++ requires a type specifier for all declarations
err_missing_vfs_overlay_file:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: virtual filesystem overlay file '(.*)' not found
  SFINAE: SFINAE_SubstitutionFailure
  Text: virtual filesystem overlay file '%0' not found
err_missing_whitespace_digraph:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: found '<::' after a (?:template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast) which forms the digraph '<:' \(aka '\['\) and a ':', did you mean '< ::'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: found '<::' after a %select{template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
err_mixed_use_std_and_experimental_namespace_for_coroutine:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting mixed use of std and std::experimental namespaces for coroutine components
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting mixed use of std and std::experimental namespaces for coroutine components
err_mixing_cxx_try_seh_try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use (?:C\+\+ 'try'|Objective-C '@try') in the same function as SEH '__try'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use %select{C++ 'try'|Objective-C '@try'}0 in the same function as SEH '__try'
err_mmap_config_macro_submodule:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: configuration macros are only allowed in top-level modules
  SFINAE: SFINAE_SubstitutionFailure
  Text: configuration macros are only allowed in top-level modules
err_mmap_conflicting_export_as:
  ArgsCount: 3
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conflicting re-export of module '(.*)' as '(.*)' or '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: conflicting re-export of module '%0' as '%1' or '%2'
err_mmap_duplicate_header_attribute:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: header attribute '(.*)' specified multiple times
  SFINAE: SFINAE_SubstitutionFailure
  Text: header attribute '%0' specified multiple times
err_mmap_expected_attribute:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an attribute name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an attribute name
err_mmap_expected_config_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected configuration macro name after ','
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected configuration macro name after ','
err_mmap_expected_conflicts_comma:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ',' after conflicting module name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ',' after conflicting module name
err_mmap_expected_conflicts_message:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a message describing the conflict with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a message describing the conflict with '%0'
err_mmap_expected_export_wildcard:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only '\*' can be exported from an inferred submodule
  SFINAE: SFINAE_SubstitutionFailure
  Text: only '*' can be exported from an inferred submodule
err_mmap_expected_feature:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a feature name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a feature name
err_mmap_expected_header:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a header name after '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a header name after '%0'
err_mmap_expected_header_attribute:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a header attribute name \('size' or 'mtime'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a header attribute name ('size' or 'mtime')
err_mmap_expected_inferred_member:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (?:module exclusion with 'exclude'|'export \*')
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %select{module exclusion with 'exclude'|'export *'}0
err_mmap_expected_lbrace:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\{' to start module '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '{' to start module '%0'
err_mmap_expected_lbrace_wildcard:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\{' to start inferred submodule
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '{' to start inferred submodule
err_mmap_expected_library_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (?:library|framework) name as a string
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %select{library|framework}0 name as a string
err_mmap_expected_member:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected umbrella, header, submodule, or module export
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected umbrella, header, submodule, or module export
err_mmap_expected_mmap_file:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a module map file name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a module map file name
err_mmap_expected_module:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected module declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected module declaration
err_mmap_expected_module_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected module name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected module name
err_mmap_expected_rbrace:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\}'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '}'
err_mmap_expected_rsquare:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\]' to close attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ']' to close attribute
err_mmap_explicit_inferred_framework:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inferred framework modules cannot be 'explicit'
  SFINAE: SFINAE_SubstitutionFailure
  Text: inferred framework modules cannot be 'explicit'
err_mmap_explicit_top_level:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''explicit'' is not permitted on top-level modules'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''explicit'' is not permitted on top-level modules'
err_mmap_inferred_framework_submodule:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inferred submodule cannot be a framework submodule
  SFINAE: SFINAE_SubstitutionFailure
  Text: inferred submodule cannot be a framework submodule
err_mmap_inferred_no_umbrella:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inferred submodules require a module with an umbrella
  SFINAE: SFINAE_SubstitutionFailure
  Text: inferred submodules require a module with an umbrella
err_mmap_inferred_redef:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of inferred submodule
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of inferred submodule
err_mmap_invalid_header_attribute_value:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected integer literal as value for header attribute '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected integer literal as value for header attribute '%0'
err_mmap_missing_exclude_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected excluded module name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected excluded module name
err_mmap_missing_module_qualified:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no module named '(.*)' in '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no module named '%0' in '%1'
err_mmap_missing_module_unqualified:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no module named '(.*)' visible from '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no module named '%0' visible from '%1'
err_mmap_missing_parent_module:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no module named '(.*)' (?:found|in '(.*)'), parent module must be defined before the submodule
  SFINAE: SFINAE_SubstitutionFailure
  Text: no module named '%0' %select{found|in '%2'}1, parent module must be defined before the submodule
err_mmap_module_id:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a module name or '\*'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a module name or '*'
err_mmap_module_redefinition:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of module '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of module '%0'
err_mmap_nested_submodule_id:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: qualified module name can only be used to define modules at the top level
  SFINAE: SFINAE_SubstitutionFailure
  Text: qualified module name can only be used to define modules at the top level
err_mmap_submodule_export_as:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only top-level modules can be re-exported as public
  SFINAE: SFINAE_SubstitutionFailure
  Text: only top-level modules can be re-exported as public
err_mmap_top_level_inferred_submodule:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only submodules and framework modules may be inferred with wildcard syntax
  SFINAE: SFINAE_SubstitutionFailure
  Text: only submodules and framework modules may be inferred with wildcard syntax
err_mmap_umbrella_clash:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: umbrella for module '(.*)' already covers this directory
  SFINAE: SFINAE_SubstitutionFailure
  Text: umbrella for module '%0' already covers this directory
err_mmap_unknown_token:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: skipping stray token
  SFINAE: SFINAE_SubstitutionFailure
  Text: skipping stray token
err_mmap_use_decl_submodule:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use declarations are only allowed in top-level modules
  SFINAE: SFINAE_SubstitutionFailure
  Text: use declarations are only allowed in top-level modules
err_mode_not_primitive:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mode attribute only supported for integer and floating-point types
  SFINAE: SFINAE_SubstitutionFailure
  Text: mode attribute only supported for integer and floating-point types
err_mode_wrong_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of machine mode does not match type of base type
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of machine mode does not match type of base type
err_module_build_disabled:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module '(.*)' is needed but has not been provided, and implicit use of module files is disabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' is needed but has not been provided, and implicit use of module files is disabled
err_module_build_requires_fmodules:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module compilation requires '-fmodules'
  SFINAE: SFINAE_SubstitutionFailure
  Text: module compilation requires '-fmodules'
err_module_build_shadowed_submodule:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: build a shadowed submodule '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: build a shadowed submodule '%0'
err_module_cannot_create_includes:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'cannot create includes file for module (.*): (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot create includes file for module %0: %1'
err_module_cycle:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'cyclic dependency in module ''(.*)'': (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cyclic dependency in module ''%0'': %1'
err_module_decl_in_header_module:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''module'' declaration found while building header unit'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''module'' declaration found while building header unit'
err_module_decl_in_module_map_module:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''module'' declaration found while building module from module map'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''module'' declaration found while building module from module map'
err_module_decl_not_at_start:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module declaration must occur at the start of the translation unit
  SFINAE: SFINAE_SubstitutionFailure
  Text: module declaration must occur at the start of the translation unit
err_module_declaration_missing:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing 'export module' declaration in module interface unit
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing 'export module' declaration in module interface unit
err_module_declaration_missing_after_global_module_introducer:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing 'module' declaration at end of global module fragment introduced here
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing 'module' declaration at end of global module fragment introduced here
err_module_different_modmap:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module '(.*)' (?:uses|does not use) additional module map '(.*)'(?:| not) used when the module was built
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
err_module_expected_ident:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a module name after '(?:module|import)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a module name after '%select{module|import}0'
err_module_expected_semi:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after module name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after module name
err_module_file_conflict:
  ArgsCount: 3
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module '(.*)' is defined in both '(.*)' and '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' is defined in both '%1' and '%2'
err_module_file_missing_top_level_submodule:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module file '(.*)' is missing its top-level submodule
  SFINAE: SFINAE_SubstitutionFailure
  Text: module file '%0' is missing its top-level submodule
err_module_file_not_module:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: AST file '(.*)' was not built as a module
  SFINAE: SFINAE_SubstitutionFailure
  Text: AST file '%0' was not built as a module
err_module_format_unhandled:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no handler registered for module format '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no handler registered for module format '%0'
err_module_fragment_exported:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:global|private) module fragment cannot be exported
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{global|private}0 module fragment cannot be exported'
err_module_header_file_not_found:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module header file '(.*)' not found
  SFINAE: SFINAE_SubstitutionFailure
  Text: module header file '%0' not found
err_module_header_missing:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|umbrella )header '(.*)' not found
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|umbrella }0header ''%1'' not found'
err_module_import_in_implementation:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@import of module ''(.*)'' in implementation of ''(.*)''; use #import'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@import of module ''%0'' in implementation of ''%1''; use #import'
err_module_import_not_at_top_level_fatal:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: import of module '(.*)' appears within (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: import of module '%0' appears within %1
err_module_interface_implementation_mismatch:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing 'export' specifier in module declaration while building module interface
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing 'export' specifier in module declaration while building module interface
err_module_interface_requires_cpp_modules:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module interface compilation requires '-std=c\+\+20' or '-fmodules-ts'
  SFINAE: SFINAE_SubstitutionFailure
  Text: module interface compilation requires '-std=c++20' or '-fmodules-ts'
err_module_map_not_found:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module map file '(.*)' not found
  SFINAE: SFINAE_SubstitutionFailure
  Text: module map file '%0' not found
err_module_no_size_mtime_for_header:
  ArgsCount: 2
  CategoryName: AST Serialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'cannot emit module (.*): (?:size|mtime) must be explicitly specified for missing header file "(.*)"'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"'
err_module_not_built:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: could not build module '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: could not build module '%0'
err_module_not_defined:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of module '(.*)' is not available; use -fmodule-file= to specify path to precompiled module interface
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
err_module_not_found:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module '(.*)' not found
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' not found
err_module_odr_violation_definition_data:
  ArgsCount: 7
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has different definitions in different modules; first difference is (?:definition in module '(.*)'|defined here) found (?:(.*) base (?:class|classes)|(.*) virtual base (?:class|classes)|\d+(?:st|nd|rd|th) base class with type (.*)|\d+(?:st|nd|rd|th) (?:non-virtual|virtual) base class (.*)|\d+(?:st|nd|rd|th) base class (.*) with (?:public|protected|private|no) access specifier)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 has different definitions in different modules; first difference is %select{definition in module ''%2''|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3'
err_module_odr_violation_different_definitions:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has different definitions in different modules; (?:definition in module '(.*)' is here|defined here)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 has different definitions in different modules; %select{definition in module ''%2'' is here|defined here}1'
err_module_odr_violation_different_instantiations:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instantiation of (.*) is different in different modules
  SFINAE: SFINAE_SubstitutionFailure
  Text: instantiation of %q0 is different in different modules
err_module_odr_violation_enum:
  ArgsCount: 7
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has different definitions in different modules; (?:definition in module '(.*)'|defined here) first difference is (?:enum that is (?:not scoped|scoped)|enum scoped with keyword (?:struct|class)|enum (?:without|with) specified type|enum with specified type (.*)|enum with (.*) elements?|\d+(?:st|nd|rd|th) element has name (.*)|\d+(?:st|nd|rd|th) element (.*) (?:has|does not have) an initilizer|\d+(?:st|nd|rd|th) element (.*) has an initializer|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 has different definitions in different modules; %select{definition in module ''%2''|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initilizer|%ordinal4 element %5 has an initializer|}3'
err_module_odr_violation_function:
  ArgsCount: 6
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has different definitions in different modules; (?:definition in module '(.*)'|defined here) first difference is (?:return type is (.*)|\d+(?:st|nd|rd|th) parameter with name (.*)|\d+(?:st|nd|rd|th) parameter with type (.*)(?:| decayed from (.*))|\d+(?:st|nd|rd|th) parameter with(?:out|) a default argument|\d+(?:st|nd|rd|th) parameter with a default argument|function body)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 has different definitions in different modules; %select{definition in module ''%2''|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3'
err_module_odr_violation_mismatch_decl:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has different definitions in different modules; first difference is (?:definition in module '(.*)'|defined here) found (?:end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 has different definitions in different modules; first difference is %select{definition in module ''%2''|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template}3'
err_module_odr_violation_mismatch_decl_diff:
  ArgsCount: 55
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has different definitions in different modules; first difference is (?:definition in module '(.*)'|defined here) found (?:static assert with condition|static assert with message|static assert with (?:|no )message|field (.*)|field (.*) with type (.*)|(?:non-|)bitfield (.*)|bitfield (.*) with one width expression|(?:non-|)mutable field (.*)|field (.*) with (?:no|an) initalizer|field (.*) with an initializer|(?:method (.*)|constructor|destructor)|(?:method (.*)|constructor|destructor) is (?:not deleted|deleted)|(?:method (.*)|constructor|destructor) is (?:not defaulted|defaulted)|(?:method (.*)|constructor|destructor) is (?:|pure )(?:not virtual|virtual)|(?:method (.*)|constructor|destructor) is (?:not static|static)|(?:method (.*)|constructor|destructor) is (?:not volatile|volatile)|(?:method (.*)|constructor|destructor) is (?:not const|const)|(?:method (.*)|constructor|destructor) is (?:not inline|inline)|(?:method (.*)|constructor|destructor) that has (.*) parameters?|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter of type (.*)(?:| decayed from (.*))|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter named (.*)|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter with(?:out|) a default argument|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter with a default argument|(?:method (.*)|constructor|destructor) with (?:no |)template arguments|(?:method (.*)|constructor|destructor) with (.*) template arguments?|(?:method (.*)|constructor|destructor) with (.*) for \d+(?:st|nd|rd|th) template argument|(?:method (.*)|constructor|destructor) with (?:no body|body)|(?:method (.*)|constructor|destructor) with body|(?:typedef|type alias) name (.*)|(?:typedef|type alias) (.*) with underlying type (.*)|data member with name (.*)|data member (.*) with type (.*)|data member (.*) with(?:out|) an initializer|data member (.*) with an initializer|data member (.*) (?:is constexpr|is not constexpr)|friend (?:class|function)|friend (.*)|friend function (.*)|function template (.*) with (.*) template parameters?|function template (.*) with \d+(?:st|nd|rd|th) template parameter being a (?:type|non-type|template) template parameter|function template (.*) with \d+(?:st|nd|rd|th) template parameter (?:with no name|named (.*))|function template (.*) with \d+(?:st|nd|rd|th) template parameter with (?:no |)default argument|function template (.*) with \d+(?:st|nd|rd|th) template parameter with default argument (.*)|function template (.*) with \d+(?:st|nd|rd|th) template parameter with one type|function template (.*) with \d+(?:st|nd|rd|th) template parameter (?:not |)being a template parameter pack|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 has different definitions in different modules; first difference is %select{definition in module ''%2''|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6|data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|}3'
err_module_odr_violation_mismatch_decl_unknown:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) (?:with definition in module '(.*)'|defined here) has different definitions in different modules; first difference is this (?:||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 %select{with definition in module ''%2''|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl}3'
err_module_odr_violation_missing_decl:
  ArgsCount: 4
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*) from module ''(.*)'' is not present in definition of (.*)(?: in module ''(.*)''| provided earlier)'
  SFINAE: SFINAE_Report
  Text: '%q0 from module ''%1'' is not present in definition of %q2%select{ in module ''%4''| provided earlier}3'
err_module_odr_violation_template_parameter:
  ArgsCount: 3
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has different definitions in different modules; first difference is (?:definition in module '(.*)'|defined here) found (?:unnamed template parameter|template parameter (.*)|template parameter with (?:no |)default argument|template parameter with default argument)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 has different definitions in different modules; first difference is %select{definition in module ''%2''|defined here}1 found %select{unnamed template parameter|template parameter %5|template parameter with %select{no |}4default argument|template parameter with default argument}3'
err_module_prebuilt:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: error in loading module '(.*)' from prebuilt module path
  SFINAE: SFINAE_SubstitutionFailure
  Text: error in loading module '%0' from prebuilt module path
err_module_private_local:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:local variable|parameter|typedef) (.*) cannot be declared __module_private__
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__'
err_module_private_local_class:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: local (?:struct|interface|union|class|enum) cannot be declared __module_private__
  SFINAE: SFINAE_SubstitutionFailure
  Text: local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
err_module_private_specialization:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:template|partial|member) specialization cannot be declared __module_private__
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{template|partial|member}0 specialization cannot be declared __module_private__'
err_module_rebuild_finalized:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot rebuild module '(.*)' as it is already finalized
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot rebuild module '%0' as it is already finalized
err_module_redeclaration:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: translation unit contains multiple module declarations
  SFINAE: SFINAE_SubstitutionFailure
  Text: translation unit contains multiple module declarations
err_module_redefinition:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of module '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of module '%0'
err_module_self_import:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: import of module '(.*)' appears within same top-level module '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: import of module '%0' appears within same top-level module '%1'
err_module_shadowed:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: import of shadowed module '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: import of shadowed module '%0'
err_module_unable_to_hash_content:
  ArgsCount: 1
  CategoryName: AST Serialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: failed to hash content for '(.*)' because memory buffer cannot be retrieved
  SFINAE: SFINAE_SubstitutionFailure
  Text: failed to hash content for '%0' because memory buffer cannot be retrieved
err_module_unavailable:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module '(.*)' (?:is incompatible with|requires) feature '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: module '%0' %select{is incompatible with|requires}1 feature '%2'
err_module_unimported_use:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:declaration|definition|default argument|explicit specialization|partial specialization) of (.*) must be imported from module '(.*)' before it is required
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module ''%2'' before it is required'
err_module_unimported_use_header:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:missing '#include'|missing '#include (.*)'); (?:||default argument of |explicit specialization of |partial specialization of )(.*) must be (?:declared|defined|defined|declared|declared) before it is used
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{missing ''#include''|missing ''#include %3''}2; %select{||default argument of |explicit specialization of |partial specialization of }0%1 must be %select{declared|defined|defined|declared|declared}0 before it is used'
err_module_unimported_use_multiple:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:declaration|definition|default argument|explicit specialization|partial specialization) of (.*) must be imported from one of the following modules before it is required:(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2'
err_modules_embed_file_not_found:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: file '(.*)' specified by '-fmodules-embed-file=' not found
  SFINAE: SFINAE_SubstitutionFailure
  Text: file '%0' specified by '-fmodules-embed-file=' not found
err_ms___leave_not_in___try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__leave'' statement not in __try block'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__leave'' statement not in __try block'
err_ms_attributes_not_enabled:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__declspec'' attributes are not enabled; use ''-fdeclspec'' or ''-fms-extensions'' to enable support for __declspec attributes'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__declspec'' attributes are not enabled; use ''-fdeclspec'' or ''-fms-extensions'' to enable support for __declspec attributes'
err_ms_declspec_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __declspec attributes must be an identifier or string literal
  SFINAE: SFINAE_SubstitutionFailure
  Text: __declspec attributes must be an identifier or string literal
err_ms_property_duplicate_accessor:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property declaration specifies '(.*)' accessor twice
  SFINAE: SFINAE_SubstitutionFailure
  Text: property declaration specifies '%0' accessor twice
err_ms_property_expected_accessor_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected name of accessor method
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected name of accessor method
err_ms_property_expected_comma_or_rparen:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ',' or '\)' at end of property accessor list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ',' or ')' at end of property accessor list
err_ms_property_expected_equal:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '=' after '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '=' after '%0'
err_ms_property_has_set_accessor:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: putter for property must be specified as 'put', not 'set'
  SFINAE: SFINAE_SubstitutionFailure
  Text: putter for property must be specified as 'put', not 'set'
err_ms_property_initializer:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property declaration cannot have a default member initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: property declaration cannot have a default member initializer
err_ms_property_missing_accessor_kind:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing 'get=' or 'put='
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing 'get=' or 'put='
err_ms_property_no_getter_or_putter:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property does not specify a getter or a putter
  SFINAE: SFINAE_SubstitutionFailure
  Text: property does not specify a getter or a putter
err_ms_property_unknown_accessor:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'get' or 'put' in property declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'get' or 'put' in property declaration
err_ms_va_start_used_in_sysv_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__builtin_ms_va_start'' used in System V ABI function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__builtin_ms_va_start'' used in System V ABI function'
err_msasm_unable_to_create_target:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'MS-style inline assembly is not available: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'MS-style inline assembly is not available: %0'
err_msasm_unsupported_arch:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported architecture '(.*)' for MS-style inline assembly
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported architecture '%0' for MS-style inline assembly
err_msvc_annotation_wide_str:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arguments to __annotation must be wide string constants
  SFINAE: SFINAE_SubstitutionFailure
  Text: arguments to __annotation must be wide string constants
err_mt_message:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: \[rewriter\] (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '[rewriter] %0'
err_multichar_character_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:wide|Unicode) character literals may not contain multiple characters
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{wide|Unicode}0 character literals may not contain multiple characters'
err_multiple_base_initialization:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple initializations given for base (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple initializations given for base %0
err_multiple_def_index:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: CrossTU
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'multiple definitions are found for the same key in index '
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'multiple definitions are found for the same key in index '
err_multiple_default_labels_defined:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple default labels in one switch
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple default labels in one switch
err_multiple_final_overriders:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: virtual function (.*) has more than one final overrider in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: virtual function %q0 has more than one final overrider in %1
err_multiple_mem_initialization:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple initializations given for non-static member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple initializations given for non-static member %0
err_multiple_mem_union_initialization:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializing multiple members of union
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializing multiple members of union
err_multiple_template_declarators:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|a template declaration|an explicit template specialization|an explicit template instantiation) can only (?:|declare|declare|instantiate) a single entity
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity'
err_multiversion_after_used:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declaration cannot become a multiversioned function after first usage
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declaration cannot become a multiversioned function after first usage
err_multiversion_diff:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiversioned function declaration has a different (?:calling convention|return type|constexpr specification|inline specification|linkage|language linkage)
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|linkage|language linkage}0
err_multiversion_disallowed_other_attr:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute '(?:|target|cpu_specific|cpu_dispatch|target_clones)' multiversioning cannot be combined with attribute (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute '%select{|target|cpu_specific|cpu_dispatch|target_clones}0' multiversioning cannot be combined with attribute %1
err_multiversion_doesnt_support:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute '(?:|target|cpu_specific|cpu_dispatch|target_clones)' multiversioned functions do not yet support (?:function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function|lambdas)
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute '%select{|target|cpu_specific|cpu_dispatch|target_clones}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function|lambdas}1
err_multiversion_duplicate:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiversioned function redeclarations require identical target attributes
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiversioned function redeclarations require identical target attributes
err_multiversion_mismatched_attrs:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attributes on multiversioned functions must all match, attribute (.*) (?:is missing|has different arguments)
  SFINAE: SFINAE_SubstitutionFailure
  Text: attributes on multiversioned functions must all match, attribute %0 %select{is missing|has different arguments}1
err_multiversion_noproto:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiversioned function must have a prototype
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiversioned function must have a prototype
err_multiversion_not_allowed_on_main:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''main'' cannot be a multiversioned function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''main'' cannot be a multiversioned function'
err_multiversion_not_supported:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function multiversioning is not supported on the current target
  SFINAE: SFINAE_SubstitutionFailure
  Text: function multiversioning is not supported on the current target
err_multiversion_required_in_redecl:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declaration is missing (?:'target'|'cpu_specific' or 'cpu_dispatch') attribute in a multiversioned function
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
err_multiversion_types_mixed:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiversioning attributes cannot be combined
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiversioning attributes cannot be combined
err_musttail_callconv_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot perform a tail call to function(?:| (.*)) because it uses an incompatible calling convention
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot perform a tail call to function%select{| %1}0 because it uses an incompatible calling convention
err_musttail_forbidden_from_this_context:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be used from (?:a block|an Objective-C function|this context)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be used from %select{a block|an Objective-C function|this context}1'
err_musttail_member_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-member|static member|non-static member) function cannot perform a tail call to (?:non-member|static member|non-static member|pointer-to-member) function(?:| (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-member|static member|non-static member}0 function cannot perform a tail call to %select{non-member|static member|non-static member|pointer-to-member}1 function%select{| %3}2'
err_musttail_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot perform a tail call to function(?:| (.*)) because its signature is incompatible with the calling function
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot perform a tail call to function%select{| %1}0 because its signature is incompatible with the calling function
err_musttail_needs_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute requires that the return value is the result of a function call
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute requires that the return value is the result of a function call'
err_musttail_needs_prototype:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute requires that both caller and callee functions have a prototype
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute requires that both caller and callee functions have a prototype'
err_musttail_needs_trivial_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: tail call requires that the return value, all parameters, and any temporaries created by the expression are trivially destructible
  SFINAE: SFINAE_SubstitutionFailure
  Text: tail call requires that the return value, all parameters, and any temporaries created by the expression are trivially destructible
err_musttail_no_variadic:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute may not be used with variadic functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute may not be used with variadic functions'
err_musttail_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot perform a tail call from this return statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot perform a tail call from this return statement
err_musttail_structors_forbidden:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot perform a tail call (?:from|to) a (?:constructor|destructor)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot perform a tail call %select{from|to}0 a %select{constructor|destructor}1
err_mutable_const:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''mutable'' and ''const'' cannot be mixed'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''mutable'' and ''const'' cannot be mixed'
err_mutable_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''mutable'' cannot be applied to functions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''mutable'' cannot be applied to functions'
err_mutable_nonmember:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''mutable'' can only be applied to member variables'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''mutable'' can only be applied to member variables'
err_mutable_reference:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''mutable'' cannot be applied to references'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''mutable'' cannot be applied to references'
err_namespace_nonnamespace_scope:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: namespaces can only be defined in global or namespace scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: namespaces can only be defined in global or namespace scope
err_need_header_before_ms_uuidof:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: you need to include <guiddef\.h> before using the '__uuidof' operator
  SFINAE: SFINAE_SubstitutionFailure
  Text: you need to include <guiddef.h> before using the '__uuidof' operator
err_need_header_before_placement_new:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching (.*) function for non-allocating placement new expression; include <new>
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching %0 function for non-allocating placement new expression; include <new>
err_need_header_before_typeid:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: you need to include <typeinfo> before using the 'typeid' operator
  SFINAE: SFINAE_SubstitutionFailure
  Text: you need to include <typeinfo> before using the 'typeid' operator
err_nested_name_member_ref_lookup_ambiguous:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: lookup of (.*) in member access expression is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: lookup of %0 in member access expression is ambiguous
err_nested_name_spec_is_not_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*) cannot appear before ''::'' because it is not a class(?: or namespace|, namespace, or enumeration); did you mean '':''\?'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot appear before ''::'' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean '':''?'
err_nested_name_spec_non_tag:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) cannot be used prior to '::' because it has no members
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 cannot be used prior to '::' because it has no members
err_nested_non_static_member_use:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:call to non-static member function|use of non-static data member) (.*) of (.*) from nested type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3'
err_nested_pointer_qualifier_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) discards qualifiers in nested pointer types
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types'
err_nested_redefinition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nested redefinition of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: nested redefinition of %0
err_new_abi_tag_on_redeclaration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''abi_tag'' (.*) missing in original declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''abi_tag'' %0 missing in original declaration'
err_new_array_init_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array 'new' cannot have initialization arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: array 'new' cannot have initialization arguments
err_new_array_nonconst:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only the first dimension of an allocated array may have dynamic size
  SFINAE: SFINAE_SubstitutionFailure
  Text: only the first dimension of an allocated array may have dynamic size
err_new_array_of_auto:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot allocate array of 'auto'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot allocate array of 'auto'
err_new_array_size_unknown_from_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot determine allocated array size from initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot determine allocated array size from initializer
err_new_incomplete_or_sizeless_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: allocation of (?:incomplete|sizeless) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: allocation of %select{incomplete|sizeless}0 type %1
err_no_accessor_for_property:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no (?:getter|setter) defined for property (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no %select{getter|setter}0 defined for property %1
err_no_base_classes:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of '__super', (.*) has no base classes
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of '__super', %0 has no base classes
err_no_declarators:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration does not declare anything
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration does not declare anything
err_no_dynamic_cast_with_fno_rtti:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of dynamic_cast requires -frtti
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of dynamic_cast requires -frtti
err_no_external_assembler:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: there is no external assembler that can be used on this platform
  SFINAE: SFINAE_SubstitutionFailure
  Text: there is no external assembler that can be used on this platform
err_no_matching_local_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching function found in local scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching function found in local scope
err_no_matching_local_friend_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching function (.*) found in local scope; did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching function %0 found in local scope; did you mean %3?
err_no_matching_param:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter named (.*) is missing
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter named %0 is missing
err_no_member:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no member named (.*) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no member named %0 in %1
err_no_member_overloaded_arrow:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no member named (.*) in (.*); did you mean to use '->' instead of '\.'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no member named %0 in %1; did you mean to use '->' instead of '.'?
err_no_member_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no member named (.*) in (.*); did you mean (?:|simply )(.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no member named %0 in %1; did you mean %select{|simply }2%3?
err_no_member_template:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no template named (.*) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no template named %0 in %1
err_no_member_template_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no template named (.*) in (.*); did you mean (?:|simply )(.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no template named %0 in %1; did you mean %select{|simply }2%3?
err_no_nsconstant_string_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find interface declaration for (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find interface declaration for %0
err_no_submodule:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no submodule named (.*) in module '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no submodule named %0 in module '%1'
err_no_submodule_suggest:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no submodule named (.*) in module '(.*)'; did you mean '(.*)'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no submodule named %0 in module '%1'; did you mean '%2'?
err_no_subobject_property_setting:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression is not assignable
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression is not assignable
err_no_suitable_delete_member_function_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no suitable member (.*) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no suitable member %0 in %1
err_no_super_class_message:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no @interface declaration found in class messaging of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no @interface declaration found in class messaging of %0
err_no_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no template named (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no template named %0
err_no_template_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no template named (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no template named %0; did you mean %1?
err_no_typeid_with_fno_rtti:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of typeid requires -frtti
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of typeid requires -frtti
err_noexcept_needs_constant_expression:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument to noexcept specifier must be a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument to noexcept specifier must be a constant expression
err_nogetter_property_compound_assignment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a getter method is needed to perform a compound assignment on a property
  SFINAE: SFINAE_SubstitutionFailure
  Text: a getter method is needed to perform a compound assignment on a property
err_nogetter_property_incdec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no getter method (.*) for (?:increment|decrement) of property
  SFINAE: SFINAE_SubstitutionFailure
  Text: no getter method %1 for %select{increment|decrement}0 of property
err_non_asm_stmt_in_naked_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-ASM statement in naked function is not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-ASM statement in naked function is not supported
err_non_bool_atomic_constraint:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: atomic constraint must be of type 'bool' \(found (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: atomic constraint must be of type 'bool' (found %0)
err_non_c_like_anon_struct_in_typedef:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous non-C-compatible type given name for linkage purposes by (?:typedef|alias) declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
err_non_constant_constraint_expression:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: substitution into constraint expression resulted in a non-constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: substitution into constraint expression resulted in a non-constant expression
err_non_consteval_override:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-consteval function (.*) cannot override a consteval function
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-consteval function %0 cannot override a consteval function
err_non_deleted_override:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-deleted function (.*) cannot override a deleted function
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-deleted function %0 cannot override a deleted function
err_non_extern_extern:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-extern declaration of (.*) follows extern declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-extern declaration of %0 follows extern declaration
err_non_first_default_compare_deletes:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: defaulting (?:this (?:<ERROR>|equality|three-way|equality|relational) comparison operator|the corresponding implicit 'operator==' for this defaulted 'operator<=>') would delete it after its first declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: defaulting %select{this %sub{select_defaulted_comparison_kind}1|the corresponding implicit 'operator==' for this defaulted 'operator<=>'}0 would delete it after its first declaration
err_non_local_variable_decl_in_for:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of non-local variable in 'for' loop
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of non-local variable in 'for' loop
err_non_static_static:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-static declaration of (.*) follows static declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-static declaration of %0 follows static declaration
err_non_template_in_member_template_id_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member (.*) of (.*) is not a template; did you mean (?:|simply )(.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: member %0 of %1 is not a template; did you mean %select{|simply }2%3?
err_non_template_in_template_id:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not name a template but is followed by template arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not name a template but is followed by template arguments'
err_non_template_in_template_id_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not name a template but is followed by template arguments; did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not name a template but is followed by template arguments; did you mean %1?'
err_non_thread_thread:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-thread-local declaration of (.*) follows thread-local declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-thread-local declaration of %0 follows thread-local declaration
err_non_trivial_c_union_in_invalid_context:
  ArgsCount: 9
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:use type (.*) for a function/method parameter|use type (.*) for function/method return|default-initialize an object of type (.*)|declare an automatic variable of type (.*)|copy-initialize an object of type (.*)|assign to a variable of type (.*)|construct an automatic compound literal of type (.*)|capture a variable of type (.*)|cannot use volatile type (.*) where it causes an lvalue-to-rvalue conversion) since it (?:contains|is) a union that is non-trivial to (?:default-initialize|destruct|copy)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{use type %1 for a function/method parameter|use type %1 for function/method return|default-initialize an object of type %1|declare an automatic variable of type %1|copy-initialize an object of type %1|assign to a variable of type %1|construct an automatic compound literal of type %1|capture a variable of type %1|cannot use volatile type %1 where it causes an lvalue-to-rvalue conversion}3 since it %select{contains|is}2 a union that is non-trivial to %select{default-initialize|destruct|copy}0
err_non_type_template_arg_addr_label_diff:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument / label address difference / what did you expect\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument / label address difference / what did you expect?
err_non_type_template_arg_subobject:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument refers to subobject '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument refers to subobject '%0'
err_non_type_template_arg_unsupported:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: sorry, non-type template argument of type (.*) is not yet supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: sorry, non-type template argument of type %0 is not yet supported
err_non_type_template_in_nested_name_specifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: qualified name refers into a specialization of (?:function|variable) template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: qualified name refers into a specialization of %select{function|variable}0 template %1
err_non_type_template_parm_type_deduction_failure:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template parameter (.*) with type (.*) has incompatible initializer of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template parameter %0 with type %1 has incompatible initializer of type %2
err_non_variable_decl_in_for:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-variable declaration in 'for' loop
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-variable declaration in 'for' loop
err_non_virtual_pure:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not virtual and cannot be declared pure
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not virtual and cannot be declared pure'
err_nonfunction_block_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: block pointer to non-function type is invalid
  SFINAE: SFINAE_SubstitutionFailure
  Text: block pointer to non-function type is invalid
err_nonstatic_member_out_of_line:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-static data member defined out-of-line
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-static data member defined out-of-line
err_nontemporal_builtin_must_be_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to nontemporal builtin must be a pointer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to nontemporal builtin must be a pointer (%0 invalid)
err_nontemporal_builtin_must_be_pointer_intfltptr_or_vector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
err_noreturn_block_has_return_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: block declared 'noreturn' should not return
  SFINAE: SFINAE_SubstitutionFailure
  Text: block declared 'noreturn' should not return
err_noreturn_lambda_has_return_expr:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: lambda declared 'noreturn' should not return
  SFINAE: SFINAE_SubstitutionFailure
  Text: lambda declared 'noreturn' should not return
err_noreturn_non_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''_Noreturn'' can only appear on functions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''_Noreturn'' can only appear on functions'
err_nosetter_property_assignment:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:assignment to readonly property|no setter method (.*) for assignment to property)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{assignment to readonly property|no setter method %1 for assignment to property}0'
err_nosetter_property_incdec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:increment|decrement) of readonly property|no setter method (.*) for (?:increment|decrement) of property)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0'
err_not_class_template_specialization:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specialize a (?:dependent template|template template parameter)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specialize a %select{dependent template|template template parameter}0
err_not_direct_base_or_virtual:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) is not a direct or virtual base of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 is not a direct or virtual base of %1
err_not_found_by_two_phase_lookup:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to function (.*) that is neither visible in the template definition nor found by argument-dependent lookup
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
err_not_integral_type_anon_bitfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: anonymous bit-field has non-integral type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: anonymous bit-field has non-integral type %0
err_not_integral_type_bitfield:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: bit-field (.*) has non-integral type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: bit-field %0 has non-integral type %1
err_not_tag_in_scope:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no (?:struct|interface|union|class|enum) named (.*) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no %select{struct|interface|union|class|enum}0 named %1 in %2
err_ns_attribute_wrong_parameter_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute only applies to (?:Objective-C object|pointer|pointer-to-CF-pointer) parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters'
err_nsconsumed_attribute_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overriding method has mismatched ns_consumed attribute on its parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: overriding method has mismatched ns_consumed attribute on its parameter
err_nserrordomain_invalid_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: domain argument (?:|(.*) )does not refer to global constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: domain argument %select{|%1 }0does not refer to global constant
err_nserrordomain_wrong_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: domain argument (.*) does not point to an NSString or CFString constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: domain argument %0 does not point to an NSString or CFString constant
err_nsnumber_nonliteral_unary:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@(.*) must be followed by a number to form an NSNumber object'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@%0 must be followed by a number to form an NSNumber object'
err_nsobject_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''NSObject'' attribute is for pointer types only'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''NSObject'' attribute is for pointer types only'
err_nsreturns_retained_attribute_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overriding method has mismatched ns_returns_(?:not_retained|retained) attributes
  SFINAE: SFINAE_SubstitutionFailure
  Text: overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
err_nullability_conflicting:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nullability specifier (.*) conflicts with existing specifier (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: nullability specifier %0 conflicts with existing specifier %1
err_nullability_cs_multilevel:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nullability keyword (.*) cannot be applied to multi-level pointer type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: nullability keyword %0 cannot be applied to multi-level pointer type %1
err_nullability_nonpointer:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nullability specifier (.*) cannot be applied to non-pointer type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: nullability specifier %0 cannot be applied to non-pointer type %1
err_objc_array_of_interfaces:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array of interface (.*) is invalid \(probably should be an array of pointers\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array of interface %0 is invalid (probably should be an array of pointers)
err_objc_attr_not_id:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter of (.*) attribute must be a single name of an Objective-C (?:class|protocol)
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
err_objc_attr_protocol_requires_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) can only be applied to @protocol definitions, not forward declarations
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 can only be applied to @protocol definitions, not forward declarations
err_objc_attr_typedef_not_id:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter of (.*) attribute must be 'id' when used on a typedef
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter of %0 attribute must be 'id' when used on a typedef
err_objc_attr_typedef_not_void_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''objc_bridge\(id\)'' is only allowed on structs and typedefs of void pointers'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''objc_bridge(id)'' is only allowed on structs and typedefs of void pointers'
err_objc_bridged_related_invalid_class:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: could not find Objective-C class (.*) to convert (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: could not find Objective-C class %0 to convert %1 to %2
err_objc_bridged_related_invalid_class_name:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must be name of an Objective-C class to be able to convert (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 must be name of an Objective-C class to be able to convert %1 to %2'
err_objc_bridged_related_known_method:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must be explicitly converted to (.*); use (?:(.*)|(.*)) method for this conversion
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion'
err_objc_cf_bridged_not_interface:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CF object of type (.*) is bridged to (.*), which is not an Objective-C class
  SFINAE: SFINAE_SubstitutionFailure
  Text: CF object of type %0 is bridged to %1, which is not an Objective-C class
err_objc_concat_string:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected token after Objective-C string
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected token after Objective-C string
err_objc_decls_may_only_appear_in_global_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Objective-C declarations may only appear in global scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: Objective-C declarations may only appear in global scope
err_objc_direct_duplicate_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|direct )(?:method|property) declaration conflicts with previous (?:|direct )declaration of (?:method|property) (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|direct }0%select{method|property}1 declaration conflicts with previous %select{|direct }2declaration of %select{method|property}1 %3'
err_objc_direct_dynamic_property:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: direct property cannot be @dynamic
  SFINAE: SFINAE_SubstitutionFailure
  Text: direct property cannot be @dynamic
err_objc_direct_impl_decl_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: direct method was declared in (?:the primary interface|an extension|a category) but is implemented in (?:the primary interface|a category|a different category)
  SFINAE: SFINAE_SubstitutionFailure
  Text: direct method was declared in %select{the primary interface|an extension|a category}0 but is implemented in %select{the primary interface|a category|a different category}1
err_objc_direct_missing_on_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: direct method implementation was previously declared not direct
  SFINAE: SFINAE_SubstitutionFailure
  Text: direct method implementation was previously declared not direct
err_objc_direct_on_override:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: methods that (?:override superclass methods|implement protocol requirements) cannot be direct
  SFINAE: SFINAE_SubstitutionFailure
  Text: methods that %select{override superclass methods|implement protocol requirements}0 cannot be direct
err_objc_direct_on_protocol:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''objc_direct'' attribute cannot be applied to (?:methods|properties) declared in an Objective-C protocol'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''objc_direct'' attribute cannot be applied to %select{methods|properties}0 declared in an Objective-C protocol'
err_objc_direct_protocol_conformance:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:category (.*)|class extension) cannot conform to protocol (.*) because of direct members declared in interface (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{category %1|class extension}0 cannot conform to protocol %2 because of direct members declared in interface %3'
err_objc_directive_only_in_protocol:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: directive may only be specified in protocols only
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive may only be specified in protocols only
err_objc_exceptions_disabled:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use '(.*)' with Objective-C exceptions disabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use '%0' with Objective-C exceptions disabled
err_objc_expected_equal_for_getter:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '=' for Objective-C getter
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '=' for Objective-C getter
err_objc_expected_equal_for_setter:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '=' for Objective-C setter
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '=' for Objective-C setter
err_objc_expected_property_attr:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown property attribute (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown property attribute %0
err_objc_expected_selector_for_getter_setter:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected selector for Objective-C (?:setter|getter)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected selector for Objective-C %select{setter|getter}0
err_objc_expected_type_parameter:
  ArgsCount: 0
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected type parameter name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected type parameter name
err_objc_for_range_init_stmt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initialization statement is not supported when iterating over Objective-C collection
  SFINAE: SFINAE_SubstitutionFailure
  Text: initialization statement is not supported when iterating over Objective-C collection
err_objc_illegal_boxed_expression_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal type (.*) used in a boxed expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal type %0 used in a boxed expression
err_objc_illegal_interface_qual:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal interface qualifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal interface qualifier
err_objc_illegal_visibility_spec:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal visibility specification
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal visibility specification
err_objc_incomplete_boxed_expression_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete type (.*) used in a boxed expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete type %0 used in a boxed expression
err_objc_index_incomplete_class_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Objective-C index expression has incomplete class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: Objective-C index expression has incomplete class type %0
err_objc_indexing_method_result_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method for accessing (?:dictionary|array) element must have Objective-C object return type instead of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
err_objc_kindof_nonobject:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__kindof'' specifier cannot be applied to non-object type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__kindof'' specifier cannot be applied to non-object type %0'
err_objc_kindof_wrong_position:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__kindof'' type specifier must precede the declarator'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__kindof'' type specifier must precede the declarator'
err_objc_literal_method_sig:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: literal construction method (.*) has incompatible signature
  SFINAE: SFINAE_SubstitutionFailure
  Text: literal construction method %0 has incompatible signature
err_objc_method_unsupported_param_ret_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) (?:parameter|return) type is unsupported; support for vector types for this target is introduced in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2'
err_objc_missing_end:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing '@end'
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing '@end'
err_objc_multiple_subscript_type_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: indexing expression is invalid because subscript type (.*) has multiple type conversion functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: indexing expression is invalid because subscript type %0 has multiple type conversion functions
err_objc_non_runtime_protocol_in_protocol_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use a protocol declared 'objc_non_runtime_protocol' in a @protocol expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use a protocol declared 'objc_non_runtime_protocol' in a @protocol expression
err_objc_non_trivially_copyable_boxed_expression_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-trivially copyable type (.*) cannot be used in a boxed expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-trivially copyable type %0 cannot be used in a boxed expression
err_objc_ns_bridged_invalid_cfobject:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ObjectiveC object of type (.*) is bridged to (.*), which is not valid CF object
  SFINAE: SFINAE_SubstitutionFailure
  Text: ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
err_objc_object_assignment:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot assign to class object \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot assign to class object (%0 invalid)
err_objc_object_catch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot catch an Objective-C object by value
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot catch an Objective-C object by value
err_objc_override_direct_method:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot override a method that is declared direct by a superclass
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot override a method that is declared direct by a superclass
err_objc_parameterized_category_nonclass:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:extension|category) of non-parameterized class (.*) cannot have type parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{extension|category}0 of non-parameterized class %1 cannot have type parameters'
err_objc_parameterized_forward_class:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: forward declaration of non-parameterized class (.*) cannot have type parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: forward declaration of non-parameterized class %0 cannot have type parameters
err_objc_parameterized_forward_class_first:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class (.*) previously declared with type parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: class %0 previously declared with type parameters
err_objc_parameterized_implementation:
  ArgsCount: 0
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@implementation cannot have type parameters'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@implementation cannot have type parameters'
err_objc_postfix_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: postfix attributes are not allowed on Objective-C directives
  SFINAE: SFINAE_SubstitutionFailure
  Text: postfix attributes are not allowed on Objective-C directives
err_objc_postfix_attribute_hint:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: postfix attributes are not allowed on Objective-C directives, place them in front of '(?:@interface|@protocol)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
err_objc_precise_lifetime_bad_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: objc_precise_lifetime only applies to retainable types; type here is (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: objc_precise_lifetime only applies to retainable types; type here is %0
err_objc_property_attr_mutually_exclusive:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property attributes '(.*)' and '(.*)' are mutually exclusive
  SFINAE: SFINAE_SubstitutionFailure
  Text: property attributes '%0' and '%1' are mutually exclusive
err_objc_property_bitfield:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property name cannot be a bit-field
  SFINAE: SFINAE_SubstitutionFailure
  Text: property name cannot be a bit-field
err_objc_property_requires_field_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property requires fields to be named
  SFINAE: SFINAE_SubstitutionFailure
  Text: property requires fields to be named
err_objc_property_requires_object:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property with '(.*)' attribute must be of object type
  SFINAE: SFINAE_SubstitutionFailure
  Text: property with '%0' attribute must be of object type
err_objc_root_class_subclass:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: objc_root_class attribute may only be specified on a root class declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: objc_root_class attribute may only be specified on a root class declaration
err_objc_runtime_visible_category:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot implement a category for class (.*) that is only visible via the Objective-C runtime
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot implement a category for class %0 that is only visible via the Objective-C runtime
err_objc_runtime_visible_subclass:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot implement subclass (.*) of a superclass (.*) that is only visible via the Objective-C runtime
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
err_objc_subscript_base_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:dictionary|array) subscript base type (.*) is not an Objective-C object
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{dictionary|array}1 subscript base type %0 is not an Objective-C object'
err_objc_subscript_dic_object_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method object parameter type (.*) is not object type
  SFINAE: SFINAE_SubstitutionFailure
  Text: method object parameter type %0 is not object type
err_objc_subscript_index_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method index parameter type (.*) is not integral type
  SFINAE: SFINAE_SubstitutionFailure
  Text: method index parameter type %0 is not integral type
err_objc_subscript_key_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: method key parameter type (.*) is not object type
  SFINAE: SFINAE_SubstitutionFailure
  Text: method key parameter type %0 is not object type
err_objc_subscript_method_not_found:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected method to (?:read|write) (?:dictionary|array) element not found on object of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
err_objc_subscript_object_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot assign to this (?:dictionary|array) because assigning method's 2nd parameter of type (.*) is not an Objective-C pointer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
err_objc_subscript_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: indexing expression is invalid because subscript type (.*) is not an Objective-C pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: indexing expression is invalid because subscript type %0 is not an Objective-C pointer
err_objc_subscript_type_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: indexing expression is invalid because subscript type (.*) is not an integral or Objective-C pointer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
err_objc_synchronized_expects_object:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@synchronized requires an Objective-C object type \((.*) invalid\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@synchronized requires an Objective-C object type (%0 invalid)'
err_objc_throw_expects_object:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@throw requires an Objective-C object type \((.*) invalid\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@throw requires an Objective-C object type (%0 invalid)'
err_objc_type_arg_does_not_match_bound:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type argument (.*) does not satisfy the bound \((.*)\) of type parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type argument %0 does not satisfy the bound (%1) of type parameter %2
err_objc_type_arg_explicit_nullability:
  ArgsCount: 1
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type argument (.*) cannot explicitly specify nullability
  SFINAE: SFINAE_SubstitutionFailure
  Text: type argument %0 cannot explicitly specify nullability
err_objc_type_arg_missing:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no type or protocol named (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no type or protocol named %0
err_objc_type_arg_missing_star:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type argument (.*) must be a pointer \(requires a '\*'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type argument %0 must be a pointer (requires a '*')
err_objc_type_arg_not_id_compatible:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type argument (.*) is neither an Objective-C object nor a block type
  SFINAE: SFINAE_SubstitutionFailure
  Text: type argument %0 is neither an Objective-C object nor a block type
err_objc_type_arg_qualified:
  ArgsCount: 2
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type argument (.*) cannot be qualified with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: type argument %0 cannot be qualified with '%1'
err_objc_type_args_after_protocols:
  ArgsCount: 0
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: protocol qualifiers must precede type arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: protocol qualifiers must precede type arguments
err_objc_type_args_and_protocols:
  ArgsCount: 2
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: angle brackets contain both a (?:type|protocol) \((.*)\) and a (?:protocol|type) \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
err_objc_type_args_non_class:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type arguments cannot be applied to non-class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type arguments cannot be applied to non-class type %0
err_objc_type_args_non_parameterized_class:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type arguments cannot be applied to non-parameterized class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type arguments cannot be applied to non-parameterized class %0
err_objc_type_args_specialized_class:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type arguments cannot be applied to already-specialized class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type arguments cannot be applied to already-specialized class type %0
err_objc_type_args_wrong_arity:
  ArgsCount: 3
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too (?:many|few) type arguments for class (.*) \(have (.*), expected (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
err_objc_type_param_arity_mismatch:
  ArgsCount: 2
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:forward class declaration|class definition|category|extension) has too (?:few|many) type parameters \(expected (.*), have (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)'
err_objc_type_param_bound_conflict:
  ArgsCount: 4
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type bound (.*) for type parameter (.*) conflicts with (?:implicit|previous) bound (.*)(?:for type parameter (.*)|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
err_objc_type_param_bound_explicit_nullability:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type parameter (.*) bound (.*) cannot explicitly specify nullability
  SFINAE: SFINAE_SubstitutionFailure
  Text: type parameter %0 bound %1 cannot explicitly specify nullability
err_objc_type_param_bound_missing:
  ArgsCount: 2
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing type bound (.*) for type parameter (.*) in (?:@interface|@class)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing type bound %0 for type parameter %1 in %select{@interface|@class}2
err_objc_type_param_bound_missing_pointer:
  ArgsCount: 2
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing '\*' in type bound (.*) for type parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing '*' in type bound %0 for type parameter %1
err_objc_type_param_bound_nonobject:
  ArgsCount: 2
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type bound (.*) for type parameter (.*) is not an Objective-C pointer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: type bound %0 for type parameter %1 is not an Objective-C pointer type
err_objc_type_param_bound_qualified:
  ArgsCount: 3
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type bound (.*) for type parameter (.*) cannot be qualified with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: type bound %1 for type parameter %0 cannot be qualified with '%2'
err_objc_type_param_redecl:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration of type parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration of type parameter %0
err_objc_type_param_variance_conflict:
  ArgsCount: 2
  CategoryName: Generics Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:in|co|contra)variant type parameter (.*) conflicts with previous (?:in|co|contra)variant type parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3'
err_objc_unexpected_atend:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''@end'' appears where closing brace ''\}'' is expected'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''@end'' appears where closing brace ''}'' is expected'
err_objc_unexpected_attr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: prefix attribute must be followed by an interface, protocol, or implementation
  SFINAE: SFINAE_SubstitutionFailure
  Text: prefix attribute must be followed by an interface, protocol, or implementation
err_objc_unknown_at:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an Objective-C directive after '@'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an Objective-C directive after '@'
err_objc_var_decl_inclass:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot declare variable inside @interface or @protocol
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot declare variable inside @interface or @protocol
err_objc_variable_sized_type_not_at_end:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field (.*) with variable sized type (.*) is not at the end of class
  SFINAE: SFINAE_SubstitutionFailure
  Text: field %0 with variable sized type %1 is not at the end of class
err_objc_weak_unsupported:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -fobjc-weak is not supported on the current deployment target
  SFINAE: SFINAE_SubstitutionFailure
  Text: -fobjc-weak is not supported on the current deployment target
err_objc_weak_with_gc:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -fobjc-weak is not supported in Objective-C garbage collection
  SFINAE: SFINAE_SubstitutionFailure
  Text: -fobjc-weak is not supported in Objective-C garbage collection
err_objcbridge_related_expected_related_class:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a related ObjectiveC class name, e\.g\., 'NSColor'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a related ObjectiveC class name, e.g., 'NSColor'
err_objcbridge_related_selector_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a class method selector with single argument, e\.g\., 'colorWithCGColor:'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a class method selector with single argument, e.g., 'colorWithCGColor:'
err_object_cannot_be_passed_returned_by_value:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: interface type (.*) cannot be (?:returned|passed) by value; did you forget \* in (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
err_odr_different_num_template_parameters:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter lists have a different number of parameters \((.*) vs (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter lists have a different number of parameters (%0 vs %1)
err_odr_different_template_parameter_kind:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter has different kinds in different translation units
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter has different kinds in different translation units
err_odr_field_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: field (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: field %0 declared with incompatible types in different translation units (%1 vs. %2)
err_odr_function_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: external function (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: external function %0 declared with incompatible types in different translation units (%1 vs. %2)
err_odr_ivar_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variable (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
err_odr_non_type_parameter_type_inconsistent:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template parameter declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
err_odr_objc_method_num_params_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class|instance) method (.*) has a different number of parameters in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)'
err_odr_objc_method_param_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class|instance) method (.*) has a parameter with a different types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)'
err_odr_objc_method_result_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class|instance) method (.*) has incompatible result types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)'
err_odr_objc_method_variadic_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class|instance) method (.*) is variadic in one translation unit and not variadic in another
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another'
err_odr_objc_property_impl_kind_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) is implemented with (?:@synthesize|@dynamic) in one translation but (?:@dynamic|@synthesize) in another translation unit
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
err_odr_objc_property_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 declared with incompatible types in different translation units (%1 vs. %2)
err_odr_objc_superclass_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class (.*) has incompatible superclasses
  SFINAE: SFINAE_SubstitutionFailure
  Text: class %0 has incompatible superclasses
err_odr_objc_synthesize_ivar_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) is synthesized to different ivars in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
err_odr_parameter_pack_non_pack:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter kind mismatch; parameter is (?:not a|a) parameter pack
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
err_odr_tag_type_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) has incompatible definitions in different translation units
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 has incompatible definitions in different translation units
err_odr_variable_multiple_def:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: external variable (.*) defined in multiple translation units
  SFINAE: SFINAE_SubstitutionFailure
  Text: external variable %0 defined in multiple translation units
err_odr_variable_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: external variable (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
err_offsetof_array_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: offsetof requires array type, (.*) invalid
  SFINAE: SFINAE_SubstitutionFailure
  Text: offsetof requires array type, %0 invalid
err_offsetof_bitfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot compute offset of bit-field (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot compute offset of bit-field %0
err_offsetof_field_of_virtual_base:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid application of 'offsetof' to a field of a virtual base
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid application of 'offsetof' to a field of a virtual base
err_offsetof_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: offsetof of incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: offsetof of incomplete type %0
err_offsetof_record_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: offsetof requires struct, union, or class type, (.*) invalid
  SFINAE: SFINAE_SubstitutionFailure
  Text: offsetof requires struct, union, or class type, %0 invalid
err_omp_adjust_arg_multiple_clauses:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''adjust_arg'' argument (.*) used in multiple clauses'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''adjust_arg'' argument %0 used in multiple clauses'
err_omp_aligned_expected_array_or_ptr:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'argument of aligned clause should be array(?: or pointer|, pointer, reference to array or reference to pointer), not (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
err_omp_allocator_not_in_uses_allocators:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: allocator must be specified in the 'uses_allocators' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: allocator must be specified in the 'uses_allocators' clause
err_omp_allocator_used_in_clauses:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: allocators used in 'uses_allocators' clause cannot appear in other data-sharing or data-mapping attribute clauses
  SFINAE: SFINAE_SubstitutionFailure
  Text: allocators used in 'uses_allocators' clause cannot appear in other data-sharing or data-mapping attribute clauses
err_omp_ambiguous_conversion:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous conversion from type (.*) to an integral or unscoped enumeration type
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous conversion from type %0 to an integral or unscoped enumeration type
err_omp_append_args_with_varargs:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''append_args'' is not allowed with varargs functions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''append_args'' is not allowed with varargs functions'
err_omp_argument_type_isdeviceptr:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
err_omp_array_section_use:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OpenMP array section is not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: OpenMP array section is not allowed here
err_omp_array_shaping_use:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OpenMP array shaping operation is not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: OpenMP array shaping operation is not allowed here
err_omp_at_least_one_motion_clause_required:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
err_omp_atomic_capture_not_compound_statement:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for 'atomic capture' must be a compound statement of form '\{v = x; x binop= expr;\}', '\{x binop= expr; v = x;\}', '\{v = x; x = x binop expr;\}', '\{v = x; x = expr binop x;\}', '\{x = x binop expr; v = x;\}', '\{x = expr binop x; v = x;\}' or '\{v = x; x = expr;\}', '\{v = x; x\+\+;\}', '\{v = x; \+\+x;\}', '\{\+\+x; v = x;\}', '\{x\+\+; v = x;\}', '\{v = x; x--;\}', '\{v = x; --x;\}', '\{--x; v = x;\}', '\{x--; v = x;\}' where x is an lvalue expression with scalar type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an lvalue expression with scalar type
err_omp_atomic_capture_not_expression_statement:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for 'atomic capture' must be an expression statement of form 'v = \+\+x;', 'v = --x;', 'v = x\+\+;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both lvalue expressions with scalar type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both lvalue expressions with scalar type
err_omp_atomic_compare:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'the statement for ''atomic compare'' must be a compound statement of form ''\{x = expr ordop x \? expr : x;\}'', ''\{x = x ordop expr\? expr : x;\}'', ''\{x = x == e \? d : x;\}'', ''\{x = e == x \? d : x;\}'', or ''if\(expr ordop x\) \{x = expr;\}'', ''if\(x ordop expr\) \{x = expr;\}'', ''if\(x == e\) \{x = d;\}'', ''if\(e == x\) \{x = d;\}'' where ''x'' is an lvalue expression with scalar type, ''expr'', ''e'', and ''d'' are expressions with scalar type, and ''ordop'' is one of ''<'' or ''>''\.'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'the statement for ''atomic compare'' must be a compound statement of form ''{x = expr ordop x ? expr : x;}'', ''{x = x ordop expr? expr : x;}'', ''{x = x == e ? d : x;}'', ''{x = e == x ? d : x;}'', or ''if(expr ordop x) {x = expr;}'', ''if(x ordop expr) {x = expr;}'', ''if(x == e) {x = d;}'', ''if(e == x) {x = d;}'' where ''x'' is an lvalue expression with scalar type, ''expr'', ''e'', and ''d'' are expressions with scalar type, and ''ordop'' is one of ''<'' or ''>''.'
err_omp_atomic_incompatible_mem_order_clause:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'directive ''#pragma omp atomic(?: (.*)|)'' cannot be used with ''(.*)'' clause'
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive '#pragma omp atomic%select{ %0|}1' cannot be used with '%2' clause
err_omp_atomic_not_expression_statement:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for 'atomic' must be an expression statement of form '\+\+x;', '--x;', 'x\+\+;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
err_omp_atomic_read_not_expression_statement:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
err_omp_atomic_several_clauses:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update', 'capture', or 'compare' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update', 'capture', or 'compare' clause
err_omp_atomic_update_not_expression_statement:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for 'atomic update' must be an expression statement of form '\+\+x;', '--x;', 'x\+\+;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
err_omp_atomic_write_not_expression_statement:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
err_omp_begin_declare_target_unexpected_implicit_to_clause:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected '\(', only 'to', 'link' or 'device_type' clauses expected for 'begin declare target' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected '(', only 'to', 'link' or 'device_type' clauses expected for 'begin declare target' directive
err_omp_bit_fields_forbidden_in_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: bit fields cannot be used to specify storage in a '(.*)' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: bit fields cannot be used to specify storage in a '%0' clause
err_omp_clause_floating_type_arg:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arguments of OpenMP clause '(.*)' with bitwise operators cannot be of floating type
  SFINAE: SFINAE_SubstitutionFailure
  Text: arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
err_omp_clause_not_arithmetic_type_arg:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arguments of OpenMP clause '(.*)' for 'min' or 'max' must be of (?:scalar|arithmetic) type
  SFINAE: SFINAE_SubstitutionFailure
  Text: arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
err_omp_clause_requires_dispatch_construct:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' clause requires ''dispatch'' context selector'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' clause requires ''dispatch'' context selector'
err_omp_clauses_mutually_exclusive:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' and ''(.*)'' clause are mutually exclusive and may not appear on the same directive'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' and ''%1'' clause are mutually exclusive and may not appear on the same directive'
err_omp_const_list_item:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: const-qualified list item cannot be (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: const-qualified list item cannot be %0
err_omp_const_not_mutable_variable:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: const-qualified variable without mutable fields cannot be (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: const-qualified variable without mutable fields cannot be %0
err_omp_const_variable:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: const-qualified variable cannot be (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: const-qualified variable cannot be %0
err_omp_critical_with_hint:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constructs with the same name must have a 'hint' clause with the same value
  SFINAE: SFINAE_SubstitutionFailure
  Text: constructs with the same name must have a 'hint' clause with the same value
err_omp_decl_in_declare_simd_variant:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declaration is expected after 'declare (?:simd|variant)' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declaration is expected after 'declare %select{simd|variant}0' directive
err_omp_declare_mapper_redefinition:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of user-defined mapper for type (.*) with name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of user-defined mapper for type %0 with name %1
err_omp_declare_mapper_wrong_var:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only variable (.*) is allowed in map clauses of this 'omp declare mapper' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: only variable %0 is allowed in map clauses of this 'omp declare mapper' directive
err_omp_declare_reduction_redefinition:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of user-defined reduction for type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of user-defined reduction for type %0
err_omp_declare_simd_inbranch_notinbranch:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected '(.*)' clause, '(.*)' is specified already
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected '%0' clause, '%1' is specified already
err_omp_declare_target_indirect_device_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only 'device_type\(any\)' clause is allowed with indirect clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: only 'device_type(any)' clause is allowed with indirect clause
err_omp_declare_target_missing_to_or_link_clause:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected at least one (?:'to' or 'link'|'to', 'link' or 'indirect') clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected at least one %select{'to' or 'link'|'to', 'link' or 'indirect'}0 clause
err_omp_declare_target_multiple:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) appears multiple times in clauses on the same declare target directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 appears multiple times in clauses on the same declare target directive'
err_omp_declare_target_to_and_link:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must not appear in both clauses 'to' and 'link'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 must not appear in both clauses ''to'' and ''link'''
err_omp_declare_target_unexpected_clause:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected '(.*)' clause, only (?:'device_type'|'to' or 'link'|'to', 'link' or 'device_type'|'device_type', 'indirect'|'to', 'link', 'device_type' or 'indirect') clauses expected
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected '%0' clause, only %select{'device_type'|'to' or 'link'|'to', 'link' or 'device_type'|'device_type', 'indirect'|'to', 'link', 'device_type' or 'indirect'}1 clauses expected
err_omp_declare_target_unexpected_clause_after_implicit_to:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected clause after an implicit 'to' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected clause after an implicit 'to' clause
err_omp_declare_variant_diff:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function with '#pragma omp declare variant' has a different (?:calling convention|return type|constexpr specification|inline specification|storage class|linkage)
  SFINAE: SFINAE_SubstitutionFailure
  Text: function with '#pragma omp declare variant' has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
err_omp_declare_variant_doesnt_support:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp declare variant'' does not support (?:function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp declare variant'' does not support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}0'
err_omp_declare_variant_duplicate_nested_trait:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nested OpenMP context selector contains duplicated trait '(.*)' in selector '(.*)' and set '(.*)' with different score
  SFINAE: SFINAE_SubstitutionFailure
  Text: nested OpenMP context selector contains duplicated trait '%0' in selector '%1' and set '%2' with different score
err_omp_declare_variant_incompat_attributes:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp declare variant'' is not compatible with any target-specific attributes'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp declare variant'' is not compatible with any target-specific attributes'
err_omp_declare_variant_incompat_types:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variant in '#pragma omp declare variant' with type (.*) is incompatible with type (.*)(?:| with appended arguments)
  SFINAE: SFINAE_SubstitutionFailure
  Text: variant in '#pragma omp declare variant' with type %0 is incompatible with type %1%select{| with appended arguments}2
err_omp_declare_variant_nested_user_condition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nested user conditions in OpenMP context selector not supported \(yet\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: nested user conditions in OpenMP context selector not supported (yet)
err_omp_declare_variant_prototype_required:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function with '#pragma omp declare variant' must have a prototype when 'append_args' is used
  SFINAE: SFINAE_SubstitutionFailure
  Text: function with '#pragma omp declare variant' must have a prototype when 'append_args' is used
err_omp_declare_variant_user_condition_not_constant:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the user condition in the OpenMP context selector needs to be constant; (.*) is not
  SFINAE: SFINAE_SubstitutionFailure
  Text: the user condition in the OpenMP context selector needs to be constant; %0 is not
err_omp_declare_variant_wrong_clause:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (?:'match'|'match', 'adjust_args', or 'append_args') clause on 'omp declare variant' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %select{'match'|'match', 'adjust_args', or 'append_args'}0 clause on 'omp declare variant' directive
err_omp_defaultmap_no_attr_for_variable:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause
err_omp_depend_clause_thread_simd:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''depend'' clauses cannot be mixed with ''(.*)'' clause'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''depend'' clauses cannot be mixed with ''%0'' clause'
err_omp_depend_modifier_not_iterator:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected iterator specification as depend modifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected iterator specification as depend modifier
err_omp_depend_sink_expected_loop_iteration:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected(?:| (.*)) loop iteration variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected%select{| %1}0 loop iteration variable
err_omp_depend_sink_expected_plus_minus:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\+' or '-' operation
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '+' or '-' operation
err_omp_depend_sink_source_not_allowed:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''depend\((?:source|sink:vec)\)'' clause(?:|s) cannot be mixed with ''depend\((?:sink:vec|source)\)'' clause(?:s|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''depend(%select{source|sink:vec}0)'' clause%select{|s}0 cannot be mixed with ''depend(%select{sink:vec|source}0)'' clause%select{s|}0'
err_omp_depend_sink_source_with_modifier:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: depend modifier cannot be used with 'sink' or 'source' depend type
  SFINAE: SFINAE_SubstitutionFailure
  Text: depend modifier cannot be used with 'sink' or 'source' depend type
err_omp_depend_sink_unexpected_expr:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unexpected expression: number of expressions is larger than the number of associated loops'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unexpected expression: number of expressions is larger than the number of associated loops'
err_omp_depend_zero_length_array_section_not_allowed:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: zero-length array section is not allowed in 'depend' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: zero-length array section is not allowed in 'depend' clause
err_omp_depobj_expected:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected depobj expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected depobj expression
err_omp_depobj_single_clause_expected:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exactly one of 'depend', 'destroy', or 'update' clauses is expected
  SFINAE: SFINAE_SubstitutionFailure
  Text: exactly one of 'depend', 'destroy', or 'update' clauses is expected
err_omp_device_ancestor_without_requires_reverse_offload:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Device clause with ancestor device-modifier used without specifying 'requires reverse_offload'
  SFINAE: SFINAE_SubstitutionFailure
  Text: Device clause with ancestor device-modifier used without specifying 'requires reverse_offload'
err_omp_device_type_mismatch:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''device_type\((.*)\)'' does not match previously specified ''device_type\((.*)\)'' for the same declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''device_type(%0)'' does not match previously specified ''device_type(%1)'' for the same declaration'
err_omp_directive_before_requires:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' region encountered before requires directive with ''(.*)'' clause'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' region encountered before requires directive with ''%1'' clause'
err_omp_dispatch_statement_call:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: statement after '#pragma omp dispatch' must be a direct call to a target function or an assignment to one
  SFINAE: SFINAE_SubstitutionFailure
  Text: statement after '#pragma omp dispatch' must be a direct call to a target function or an assignment to one
err_omp_duplicate_map_type_modifier:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: same map type modifier has been specified more than once
  SFINAE: SFINAE_SubstitutionFailure
  Text: same map type modifier has been specified more than once
err_omp_duplicate_motion_modifier:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: same motion modifier has been specified more than once
  SFINAE: SFINAE_SubstitutionFailure
  Text: same motion modifier has been specified more than once
err_omp_expected_access_to_data_field:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected access to data field
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected access to data field
err_omp_expected_addressable_lvalue_or_array_item:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'expected addressable lvalue expression, array element(?: or array section|, array section or array shaping expression)(?:| of non ''omp_depend_t'' type)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected addressable lvalue expression, array element%select{ or array section|, array section or array shaping expression}0%select{| of non 'omp_depend_t' type}1
err_omp_expected_array_alloctraits:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected constant sized array of 'omp_alloctrait_t' elements, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected constant sized array of 'omp_alloctrait_t' elements, not %0
err_omp_expected_base_var_name:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected variable name as a base of the array (?:subscript|section)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected variable name as a base of the array %select{subscript|section}0
err_omp_expected_clause:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected at least one clause on '#pragma omp (.*)' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected at least one clause on '#pragma omp %0' directive
err_omp_expected_colon:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing ':' in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing ':' in %0
err_omp_expected_context_selector:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected valid context selector in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected valid context selector in %0
err_omp_expected_equal_in_iterator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '=' in iterator specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '=' in iterator specifier
err_omp_expected_identifier_for_critical:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected identifier specifying the name of the 'omp critical' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected identifier specifying the name of the 'omp critical' directive
err_omp_expected_int_param:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a reference to an integer-typed parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a reference to an integer-typed parameter
err_omp_expected_interop_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'expected interop type: ''target'' and/or ''targetsync'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'expected interop type: ''target'' and/or ''targetsync'''
err_omp_expected_named_var_member_or_array_expression:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected expression containing only member accesses and/or array sections based on named variables
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected expression containing only member accesses and/or array sections based on named variables
err_omp_expected_omp_depend_t_lvalue:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'expected lvalue expression(?: of ''omp_depend_t'' type, not (.*)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected lvalue expression%select{ of 'omp_depend_t' type, not %1|}0
err_omp_expected_predefined_allocator:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'expected one of the predefined allocators for the variables with the static storage: ''omp_default_mem_alloc'', ''omp_large_cap_mem_alloc'', ''omp_const_mem_alloc'', ''omp_high_bw_mem_alloc'', ''omp_low_lat_mem_alloc'', ''omp_cgroup_mem_alloc'', ''omp_pteam_mem_alloc'' or ''omp_thread_mem_alloc'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'expected one of the predefined allocators for the variables with the static storage: ''omp_default_mem_alloc'', ''omp_large_cap_mem_alloc'', ''omp_const_mem_alloc'', ''omp_high_bw_mem_alloc'', ''omp_low_lat_mem_alloc'', ''omp_cgroup_mem_alloc'', ''omp_pteam_mem_alloc'' or ''omp_thread_mem_alloc'''
err_omp_expected_private_copy_for_allocate:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the referenced item is not found in any private clause on the same directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: the referenced item is not found in any private clause on the same directive
err_omp_expected_punc:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ',' or '\)' in '(.*)' (?:clause|directive)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ',' or ')' in '%0' %select{clause|directive}1
err_omp_expected_punc_after_interop_mod:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ',' after interop modifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ',' after interop modifier
err_omp_expected_punc_after_iterator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ',' or '\)' after iterator specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ',' or ')' after iterator specifier
err_omp_expected_reduction_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'expected identifier or one of the following operators: ''\+'', ''-'', ''\*'', ''&'', ''\|'', ''\^'', ''&&'', or ''\|\|'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'expected identifier or one of the following operators: ''+'', ''-'', ''*'', ''&'', ''|'', ''^'', ''&&'', or ''||'''
err_omp_expected_uniform_param:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a reference to a parameter specified in a 'uniform' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a reference to a parameter specified in a 'uniform' clause
err_omp_expected_var_arg:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not a global variable, static local variable or static data member
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not a global variable, static local variable or static data member'
err_omp_expected_var_arg_suggest:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not a global variable, static local variable or static data member; did you mean (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not a global variable, static local variable or static data member; did you mean %1'
err_omp_expected_var_name_member_expr:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected variable name(?:| or data member of current class)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected variable name%select{| or data member of current class}0
err_omp_expected_var_name_member_expr_or_array_item:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected variable name(?:|, data member of current class), array element or array section
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected variable name%select{|, data member of current class}0, array element or array section
err_omp_explicit_conversion:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression requires explicit conversion from (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression requires explicit conversion from %0 to %1
err_omp_firstprivate_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a firstprivate variable with incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a firstprivate variable with incomplete type %0
err_omp_flush_order_clause_and_list:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''flush'' directive with memory order clause ''(.*)'' cannot have the list'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''flush'' directive with memory order clause ''%0'' cannot have the list'
err_omp_function_expected:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp declare (?:simd|variant)'' can only be applied to functions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp declare %select{simd|variant}0'' can only be applied to functions'
err_omp_function_in_link_clause:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function name is not allowed in 'link' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: function name is not allowed in 'link' clause
err_omp_global_var_arg:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arguments of '#pragma omp (.*)' must have (?:global storage|static storage duration)
  SFINAE: SFINAE_SubstitutionFailure
  Text: arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
err_omp_hint_clause_no_name:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the name of the construct must be specified in presence of 'hint' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: the name of the construct must be specified in presence of 'hint' clause
err_omp_immediate_directive:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp (.*)'' (?:|with ''(.*)'' clause )cannot be an immediate substatement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp %0'' %select{|with ''%2'' clause }1cannot be an immediate substatement'
err_omp_implied_type_not_found:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' type not found; include <omp\.h>'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' type not found; include <omp.h>'
err_omp_inclusive_exclusive_not_reduction:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the list item must appear in 'reduction' clause with the 'inscan' modifier of the parent directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: the list item must appear in 'reduction' clause with the 'inscan' modifier of the parent directive
err_omp_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression has incomplete class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression has incomplete class type %0
err_omp_inscan_reduction_expected:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'reduction' clause with the 'inscan' modifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'reduction' clause with the 'inscan' modifier
err_omp_instantiation_not_supported:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instantiation of '(.*)' not supported yet
  SFINAE: SFINAE_SubstitutionFailure
  Text: instantiation of '%0' not supported yet
err_omp_interop_bad_depend_clause:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''depend'' clause requires the ''targetsync'' interop type'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''depend'' clause requires the ''targetsync'' interop type'
err_omp_interop_prefer_type:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: prefer_list item must be a string literal or constant integral expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: prefer_list item must be a string literal or constant integral expression
err_omp_interop_type_not_found:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''omp_interop_t'' must be defined when ''append_args'' clause is used; include <omp\.h>'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''omp_interop_t'' must be defined when ''append_args'' clause is used; include <omp.h>'
err_omp_interop_var_multiple_actions:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: interop variable (.*) used in multiple action clauses
  SFINAE: SFINAE_SubstitutionFailure
  Text: interop variable %0 used in multiple action clauses
err_omp_interop_variable_expected:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected(?:| non-const) variable of type 'omp_interop_t'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected%select{| non-const}0 variable of type 'omp_interop_t'
err_omp_interop_variable_wrong_type:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: interop variable must be of type 'omp_interop_t'
  SFINAE: SFINAE_SubstitutionFailure
  Text: interop variable must be of type 'omp_interop_t'
err_omp_invalid_dsa:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: data-sharing attribute '(.*)' in '(.*)' clause requires OpenMP version (.*) or above
  SFINAE: SFINAE_SubstitutionFailure
  Text: data-sharing attribute '%0' in '%1' clause requires OpenMP version %2 or above
err_omp_invalid_map_this_expr:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid 'this' expression on 'map' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid 'this' expression on 'map' clause
err_omp_invalid_map_type_for_directive:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:map type '(.*)' is not allowed|map type must be specified) for '#pragma omp (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{map type ''%1'' is not allowed|map type must be specified}0 for ''#pragma omp %2'''
err_omp_invalid_map_type_modifier_for_directive:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: map type modifier '(.*)' is not allowed for '#pragma omp (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: map type modifier '%0' is not allowed for '#pragma omp %1'
err_omp_invalid_mapper:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find a valid user-defined mapper for type (.*) with name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find a valid user-defined mapper for type %0 with name %1
err_omp_invalid_scope:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp (.*)'' directive must appear only in file scope'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp %0'' directive must appear only in file scope'
err_omp_invalid_target_decl:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) used in declare target directive is not a variable or a function name
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 used in declare target directive is not a variable or a function name'
err_omp_invariant_dependency:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected loop invariant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected loop invariant expression
err_omp_invariant_or_linear_dependency:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected loop invariant expression or '<invariant1> \* (.*) \+ <invariant2>' kind of expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected loop invariant expression or '<invariant1> * %0 + <invariant2>' kind of expression
err_omp_iterator_not_integral_or_pointer:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected integral or pointer type as the iterator-type, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected integral or pointer type as the iterator-type, not %0
err_omp_iterator_step_constant_zero:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: iterator step expression (.*) evaluates to 0
  SFINAE: SFINAE_SubstitutionFailure
  Text: iterator step expression %0 evaluates to 0
err_omp_iterator_step_not_integral:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: iterator step expression (.*) is not the integral expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: iterator step expression %0 is not the integral expression
err_omp_iterator_use:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OpenMP iterator is not allowed here
  SFINAE: SFINAE_SubstitutionFailure
  Text: OpenMP iterator is not allowed here
err_omp_lambda_capture_in_declare_target_not_to:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable captured in declare target region must appear in a to clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable captured in declare target region must appear in a to clause
err_omp_lastprivate_conditional_non_scalar:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected list item of scalar type in 'lastprivate' clause with 'conditional' modifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected list item of scalar type in 'lastprivate' clause with 'conditional' modifier
err_omp_lastprivate_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a lastprivate variable with incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a lastprivate variable with incomplete type %0
err_omp_lastprivate_loop_var_non_loop_iteration:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only loop iteration variables are allowed in 'lastprivate' clause in 'omp loop' directives
  SFINAE: SFINAE_SubstitutionFailure
  Text: only loop iteration variables are allowed in 'lastprivate' clause in 'omp loop' directives
err_omp_linear_distribute_var_non_loop_iteration:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only loop iteration variables are allowed in 'linear' clause in distribute directives
  SFINAE: SFINAE_SubstitutionFailure
  Text: only loop iteration variables are allowed in 'linear' clause in distribute directives
err_omp_linear_expected_int_or_ptr:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument of a linear clause should be of integral or pointer type, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument of a linear clause should be of integral or pointer type, not %0
err_omp_linear_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a linear variable with incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a linear variable with incomplete type %0
err_omp_linear_ordered:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''linear'' clause cannot be specified along with ''ordered'' clause with a parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''linear'' clause cannot be specified along with ''ordered'' clause with a parameter'
err_omp_local_var_in_threadprivate_init:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable with local storage in initial value of threadprivate variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable with local storage in initial value of threadprivate variable
err_omp_loop_cannot_use_stmt:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' statement cannot be used in OpenMP for loop'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' statement cannot be used in OpenMP for loop'
err_omp_loop_diff_cxx:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
  SFINAE: SFINAE_SubstitutionFailure
  Text: could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
err_omp_loop_incr_not_compatible:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: increment expression must cause (.*) to (?:decrease|increase) on each iteration of OpenMP for loop
  SFINAE: SFINAE_SubstitutionFailure
  Text: increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
err_omp_loop_not_canonical_cond:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: condition of OpenMP for loop must be a relational comparison \('<', '<=', '>', (?:or '>='|'>=', or '!=')\) of loop variable (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', %select{or '>='|'>=', or '!='}0) of loop variable %1
err_omp_loop_not_canonical_incr:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
err_omp_loop_not_canonical_init:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initialization clause of OpenMP for loop is not in canonical form \('var = init' or 'T var = init'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
err_omp_loop_var_dsa:
  ArgsCount: 3
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: loop iteration variable in the associated loop of 'omp (.*)' directive may not be (.*), predetermined as (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
err_omp_loop_variable_type:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable must be of integer or (?:pointer|random access iterator) type
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable must be of integer or %select{pointer|random access iterator}0 type
err_omp_map_shared_storage:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable already marked as mapped in current construct
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable already marked as mapped in current construct
err_omp_map_type_missing:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing map type
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing map type
err_omp_map_type_modifier_missing:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing map type modifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing map type modifier
err_omp_mapper_expected_declarator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected declarator on 'omp declare mapper' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected declarator on 'omp declare mapper' directive
err_omp_mapper_illegal_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal OpenMP user-defined mapper identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal OpenMP user-defined mapper identifier
err_omp_mapper_wrong_type:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mapper type must be of struct, union or class type
  SFINAE: SFINAE_SubstitutionFailure
  Text: mapper type must be of struct, union or class type
err_omp_more_one_clause:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: directive '#pragma omp (.*)' cannot contain more than one '(.*)' clause(?:| with '(.*)' name modifier| with 'source' dependence)
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
err_omp_multiple_array_items_in_map_clause:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple array elements associated with the same variable are not allowed in map clauses of the same construct
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple array elements associated with the same variable are not allowed in map clauses of the same construct
err_omp_negative_expression_in_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument to '(.*)' clause must be a (?:non-negative|strictly positive) integer value
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
err_omp_no_clause_for_directive:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected at least one (.*) clause for '#pragma omp (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected at least one %0 clause for '#pragma omp %1'
err_omp_no_dsa_for_variable:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) must have explicitly specified data sharing attributes
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 must have explicitly specified data sharing attributes
err_omp_no_more_if_clause:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no more 'if' clause is allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: no more 'if' clause is allowed
err_omp_non_lvalue_in_map_or_motion_clauses:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected addressable lvalue in '(.*)' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected addressable lvalue in '%0' clause
err_omp_non_pointer_type_array_shaping_base:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected expression with a pointer to a complete type as a base of an array shaping operation
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected expression with a pointer to a complete type as a base of an array shaping operation
err_omp_nonpredefined_allocator_without_traits:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-predefined allocator must have traits specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-predefined allocator must have traits specified
err_omp_not_for:
  ArgsCount: 4
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:statement after '#pragma omp (.*)' must be a for loop|expected (.*) for loops after '#pragma omp (.*)'(?:|, but found only (.*)))
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{statement after ''#pragma omp %1'' must be a for loop|expected %2 for loops after ''#pragma omp %1''%select{|, but found only %4}3}0'
err_omp_not_integral:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression must have integral or unscoped enumeration type, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression must have integral or unscoped enumeration type, not %0
err_omp_not_resolved_reduction_identifier:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unable to resolve declare reduction construct for type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: unable to resolve declare reduction construct for type %0
err_omp_once_referenced:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable can appear only once in OpenMP '(.*)' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable can appear only once in OpenMP '%0' clause
err_omp_once_referenced_in_target_update:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable can appear only once in OpenMP 'target update' construct
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable can appear only once in OpenMP 'target update' construct
err_omp_one_defaultmap_each_category:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: at most one defaultmap clause for each variable-category can appear on the directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: at most one defaultmap clause for each variable-category can appear on the directive
err_omp_ordered_directive_with_param:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''ordered'' directive (?:without any clauses|with ''threads'' clause) cannot be closely nested inside ordered region with specified parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''ordered'' directive %select{without any clauses|with ''threads'' clause}0 cannot be closely nested inside ordered region with specified parameter'
err_omp_ordered_directive_without_param:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''ordered'' directive with ''depend'' clause cannot be closely nested inside ordered region without specified parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''ordered'' directive with ''depend'' clause cannot be closely nested inside ordered region without specified parameter'
err_omp_ordered_simd:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''ordered'' clause with a parameter can not be specified in ''#pragma omp (.*)'' directive'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''ordered'' clause with a parameter can not be specified in ''#pragma omp %0'' directive'
err_omp_original_storage_is_shared_and_does_not_contain:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
  SFINAE: SFINAE_SubstitutionFailure
  Text: original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
err_omp_orphaned_device_directive:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: orphaned 'omp (.*)' directives are prohibited; perhaps you forget to enclose the directive into a (?:|||target |teams|for, simd, for simd, parallel for, or parallel for simd )region\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams|for, simd, for simd, parallel for, or parallel for simd }1region?
err_omp_orphaned_section_directive:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:orphaned 'omp section' directives are prohibited, it|'omp section' directive) must be closely nested to a sections region(?:|, not a (.*) region)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{orphaned ''omp section'' directives are prohibited, it|''omp section'' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0'
err_omp_parallel_reduction_in_task_firstprivate:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument of a reduction clause of a (.*) construct must not appear in a firstprivate clause on a task construct
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
err_omp_parallel_sections_not_compound_stmt:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for '#pragma omp parallel sections' must be a compound statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for '#pragma omp parallel sections' must be a compound statement
err_omp_parallel_sections_substmt_not_section:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: statement in 'omp parallel sections' directive must be enclosed into a section region
  SFINAE: SFINAE_SubstitutionFailure
  Text: statement in 'omp parallel sections' directive must be enclosed into a section region
err_omp_param_or_this_in_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected reference to one of the parameters of function (.*)(?:| or 'this')
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected reference to one of the parameters of function %0%select{| or 'this'}1
err_omp_parent_cancel_region_nowait:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parent region for 'omp (?:cancellation point|cancel)' construct cannot be nowait
  SFINAE: SFINAE_SubstitutionFailure
  Text: parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
err_omp_parent_cancel_region_ordered:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parent region for 'omp (?:cancellation point|cancel)' construct cannot be ordered
  SFINAE: SFINAE_SubstitutionFailure
  Text: parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
err_omp_pointer_mapped_along_with_derived_section:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pointer cannot be mapped along with a section derived from itself
  SFINAE: SFINAE_SubstitutionFailure
  Text: pointer cannot be mapped along with a section derived from itself
err_omp_predefined_allocator_with_traits:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: predefined allocator cannot have traits specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: predefined allocator cannot have traits specified
err_omp_private_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a private variable with incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a private variable with incomplete type %0
err_omp_prohibited_region:
  ArgsCount: 6
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: region cannot be(?:| closely) nested inside '(.*)' region(?:|; perhaps you forget to enclose 'omp (.*)' directive into a parallel region\?|; perhaps you forget to enclose 'omp (.*)' directive into a for or a parallel for region with 'ordered' clause\?|; perhaps you forget to enclose 'omp (.*)' directive into a target region\?|; perhaps you forget to enclose 'omp (.*)' directive into a teams region\?|; perhaps you forget to enclose 'omp (.*)' directive into a for, simd, for simd, parallel for, or parallel for simd region\?)
  SFINAE: SFINAE_SubstitutionFailure
  Text: region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?|; perhaps you forget to enclose 'omp %3' directive into a for, simd, for simd, parallel for, or parallel for simd region?}2
err_omp_prohibited_region_atomic:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OpenMP constructs may not be nested inside an atomic region
  SFINAE: SFINAE_SubstitutionFailure
  Text: OpenMP constructs may not be nested inside an atomic region
err_omp_prohibited_region_critical_same_name:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot nest 'critical' regions having the same name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot nest 'critical' regions having the same name %0
err_omp_prohibited_region_simd:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: OpenMP constructs may not be nested inside a simd region(?:| except for ordered simd, simd, scan, or atomic directive)
  SFINAE: SFINAE_SubstitutionFailure
  Text: OpenMP constructs may not be nested inside a simd region%select{| except for ordered simd, simd, scan, or atomic directive}0
err_omp_reduction_id_not_compatible:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'list item of type (.*) is not valid for specified reduction operation: unable to provide default initialization value'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value'
err_omp_reduction_identifier_mismatch:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: in_reduction variable must have the same reduction operation as in a task_reduction clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: in_reduction variable must have the same reduction operation as in a task_reduction clause
err_omp_reduction_in_task:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reduction variables may not be accessed in an explicit task
  SFINAE: SFINAE_SubstitutionFailure
  Text: reduction variables may not be accessed in an explicit task
err_omp_reduction_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a reduction list item with incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a reduction list item with incomplete type %0
err_omp_reduction_non_addressable_expression:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected addressable reduction item for the task-based directives
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected addressable reduction item for the task-based directives
err_omp_reduction_not_inclusive_exclusive:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the inscan reduction list item must appear as a list item in an 'inclusive' or 'exclusive' clause on an inner 'omp scan' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: the inscan reduction list item must appear as a list item in an 'inclusive' or 'exclusive' clause on an inner 'omp scan' directive
err_omp_reduction_ref_type_arg:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument of OpenMP clause '(.*)' must reference the same object in all threads
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument of OpenMP clause '%0' must reference the same object in all threads
err_omp_reduction_task_not_parallel_or_worksharing:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''reduction'' clause with ''task'' modifier allowed only on non-simd parallel or worksharing constructs'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''reduction'' clause with ''task'' modifier allowed only on non-simd parallel or worksharing constructs'
err_omp_reduction_vla_unsupported:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot generate code for reduction on (?:|array section, which requires a )variable length array
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot generate code for reduction on %select{|array section, which requires a }0variable length array
err_omp_reduction_with_nogroup:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''reduction'' clause cannot be used with ''nogroup'' clause'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''reduction'' clause cannot be used with ''nogroup'' clause'
err_omp_reduction_wrong_type:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reduction type cannot be (?:qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array) type
  SFINAE: SFINAE_SubstitutionFailure
  Text: reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
err_omp_ref_type_arg:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arguments of '#pragma omp (.*)' cannot be of reference type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: arguments of '#pragma omp %0' cannot be of reference type %1
err_omp_region_not_file_context:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: directive must be at file or namespace scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive must be at file or namespace scope
err_omp_required_access:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) variable must be (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 variable must be %1'
err_omp_required_clause:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: directive '#pragma omp (.*)' requires the '(.*)' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive '#pragma omp %0' requires the '%1' clause
err_omp_requires_clause_redeclaration:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Only one (.*) clause can appear on a requires directive in a single translation unit
  SFINAE: SFINAE_SubstitutionFailure
  Text: Only one %0 clause can appear on a requires directive in a single translation unit
err_omp_same_pointer_dereferenced:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: same pointer dereferenced in multiple different ways in map clause expressions
  SFINAE: SFINAE_SubstitutionFailure
  Text: same pointer dereferenced in multiple different ways in map clause expressions
err_omp_scan_single_clause_expected:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exactly one of 'inclusive' or 'exclusive' clauses is expected
  SFINAE: SFINAE_SubstitutionFailure
  Text: exactly one of 'inclusive' or 'exclusive' clauses is expected
err_omp_schedule_nonmonotonic_static:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''nonmonotonic'' modifier can only be specified with ''dynamic'' or ''guided'' schedule kind'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''nonmonotonic'' modifier can only be specified with ''dynamic'' or ''guided'' schedule kind'
err_omp_section_function_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: section of pointer to function type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: section of pointer to function type %0
err_omp_section_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: section of pointer to incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: section of pointer to incomplete type %0
err_omp_section_length_negative:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: section length is evaluated to a negative value (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: section length is evaluated to a negative value %0
err_omp_section_length_undefined:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: section length is unspecified and cannot be inferred because subscripted value is (?:not an array|an array of unknown bound)
  SFINAE: SFINAE_SubstitutionFailure
  Text: section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
err_omp_section_not_subset_of_array:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array section must be a subset of the original array
  SFINAE: SFINAE_SubstitutionFailure
  Text: array section must be a subset of the original array
err_omp_section_stride_non_positive:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: section stride is evaluated to a non-positive value (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: section stride is evaluated to a non-positive value %0
err_omp_sections_not_compound_stmt:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the statement for '#pragma omp sections' must be a compound statement
  SFINAE: SFINAE_SubstitutionFailure
  Text: the statement for '#pragma omp sections' must be a compound statement
err_omp_sections_substmt_not_section:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: statement in 'omp sections' directive must be enclosed into a section region
  SFINAE: SFINAE_SubstitutionFailure
  Text: statement in 'omp sections' directive must be enclosed into a section region
err_omp_several_directives_in_region:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exactly one '(.*)' directive must appear in the loop body of an enclosing directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: exactly one '%0' directive must appear in the loop body of an enclosing directive
err_omp_several_mem_order_clauses:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: directive '#pragma omp (.*)' cannot contain more than one (?:'seq_cst', 'relaxed', |)'acq_rel', 'acquire' or 'release' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive '#pragma omp %0' cannot contain more than one %select{'seq_cst', 'relaxed', |}1'acq_rel', 'acquire' or 'release' clause
err_omp_shaping_dimension_not_positive:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array shaping dimension is evaluated to a non-positive value (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: array shaping dimension is evaluated to a non-positive value %0
err_omp_simd_region_cannot_use_stmt:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' statement cannot be used in OpenMP simd region'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' statement cannot be used in OpenMP simd region'
err_omp_simple_clause_incompatible_with_ordered:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' clause with ''(.*)'' modifier cannot be specified if an ''ordered'' clause is specified'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' clause with ''%1'' modifier cannot be specified if an ''ordered'' clause is specified'
err_omp_single_copyprivate_with_nowait:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the 'copyprivate' clause must not be used with the 'nowait' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: the 'copyprivate' clause must not be used with the 'nowait' clause
err_omp_single_decl_in_declare_simd_variant:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: single declaration is expected after 'declare (?:simd|variant)' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: single declaration is expected after 'declare %select{simd|variant}0' directive
err_omp_stmt_depends_on_loop_counter:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the loop (?:initializer|condition) expression depends on the current loop control variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: the loop %select{initializer|condition}0 expression depends on the current loop control variable
err_omp_target_contains_not_only_teams:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: target construct with nested teams region contains statements outside of the teams construct
  SFINAE: SFINAE_SubstitutionFailure
  Text: target construct with nested teams region contains statements outside of the teams construct
err_omp_taskwait_depend_mutexinoutset_not_allowed:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''mutexinoutset'' modifier not allowed in ''depend'' clause on ''taskwait'' directive'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''mutexinoutset'' modifier not allowed in ''depend'' clause on ''taskwait'' directive'
err_omp_threadprivate_in_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: threadprivate variables are not allowed in '(.*)' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: threadprivate variables are not allowed in '%0' clause
err_omp_threadprivate_in_target:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: threadprivate variables cannot be used in target constructs
  SFINAE: SFINAE_SubstitutionFailure
  Text: threadprivate variables cannot be used in target constructs
err_omp_threadprivate_incomplete_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: threadprivate variable with incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: threadprivate variable with incomplete type %0
err_omp_typecheck_section_not_integer:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array section (?:lower bound|length) is not an integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: array section %select{lower bound|length}0 is not an integer
err_omp_typecheck_section_value:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: subscripted value is not an array or pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: subscripted value is not an array or pointer
err_omp_typecheck_shaping_not_integer:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array shaping operation dimension is not an integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: array shaping operation dimension is not an integer
err_omp_unexpected_append_op:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected operation specified in 'append_args' clause, expected 'interop'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected operation specified in 'append_args' clause, expected 'interop'
err_omp_unexpected_clause:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected OpenMP clause '(.*)' in directive '#pragma omp (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected OpenMP clause '%0' in directive '#pragma omp %1'
err_omp_unexpected_clause_value:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (.*) in OpenMP clause '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %0 in OpenMP clause '%1'
err_omp_unexpected_directive:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected OpenMP directive (?:|'#pragma omp (.*)')
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected OpenMP directive %select{|'#pragma omp %1'}0
err_omp_unexpected_schedule_modifier:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: modifier '(.*)' cannot be used along with modifier '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: modifier '%0' cannot be used along with modifier '%1'
err_omp_union_type_not_allowed:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mapping of union members is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: mapping of union members is not allowed
err_omp_unknown_directive:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an OpenMP directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an OpenMP directive
err_omp_unknown_map_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
  SFINAE: SFINAE_SubstitutionFailure
  Text: incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
err_omp_unknown_map_type_modifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'incorrect map type modifier, expected one of: ''always'', ''close'', ''mapper''(?:|, ''present'')(?:|, ''ompx_hold'')'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'incorrect map type modifier, expected one of: ''always'', ''close'', ''mapper''%select{|, ''present''}0%select{|, ''ompx_hold''}1'
err_omp_unknown_reduction_identifier:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incorrect reduction identifier, expected one of '\+', '-', '\*', '&', '\|', '\^', '&&', '\|\|', 'min' or 'max' or declare reduction for type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
err_omp_unnamed_if_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected(?:| one of) (.*) directive name modifier(?:|s)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected%select{| one of}0 %1 directive name modifier%select{|s}0
err_omp_unroll_full_variable_trip_count:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: loop to be fully unrolled must have a constant trip count
  SFINAE: SFINAE_SubstitutionFailure
  Text: loop to be fully unrolled must have a constant trip count
err_omp_used_in_clause_twice:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:a variable|a parameter|'this') cannot appear in more than one (.*) clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{a variable|a parameter|''this''}0 cannot appear in more than one %1 clause'
err_omp_usedeviceptr_not_a_pointer:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected pointer or reference to pointer in 'use_device_ptr' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected pointer or reference to pointer in 'use_device_ptr' clause
err_omp_var_expected:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected variable of the '(.*)' type(?:|, not (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected variable of the '%0' type%select{|, not %2}1
err_omp_var_scope:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp (.*)'' must appear in the scope of the (.*) variable declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp %0'' must appear in the scope of the %q1 variable declaration'
err_omp_var_thread_local:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) cannot be threadprivate because it is (?:thread-local|a global named register variable)
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
err_omp_var_used:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma omp (.*)'' must precede all references to variable (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma omp %0'' must precede all references to variable %q1'
err_omp_variable_in_given_clause_and_dsa:
  ArgsCount: 3
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) variable cannot be in a (.*) clause in '#pragma omp (.*)' directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 variable cannot be in a %1 clause in ''#pragma omp %2'' directive'
err_omp_variably_modified_type_not_supported:
  ArgsCount: 3
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arguments of OpenMP clause '(.*)' in '#pragma omp (.*)' directive cannot be of variably-modified type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
err_omp_variant_ctx_second_match_extension:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only a single match extension allowed per OpenMP context selector
  SFINAE: SFINAE_SubstitutionFailure
  Text: only a single match extension allowed per OpenMP context selector
err_omp_wrong_cancel_region:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
  SFINAE: SFINAE_SubstitutionFailure
  Text: one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
err_omp_wrong_dependency_iterator_type:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an integer or a pointer type of the outer loop counter '(.*)' for non-rectangular nests
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an integer or a pointer type of the outer loop counter '%0' for non-rectangular nests
err_omp_wrong_device_function_call:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function with 'device_type\((.*)\)' is not available on (?:device|host)
  SFINAE: SFINAE_SubstitutionFailure
  Text: function with 'device_type(%0)' is not available on %select{device|host}1
err_omp_wrong_dsa:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) variable cannot be (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 variable cannot be %1'
err_omp_wrong_if_directive_name_modifier:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: directive name modifier '(.*)' is not allowed for '#pragma omp (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: directive name modifier '%0' is not allowed for '#pragma omp %1'
err_omp_wrong_inscan_reduction:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''inscan'' modifier can be used only in ''omp for'', ''omp simd'', ''omp for simd'', ''omp parallel for'', or ''omp parallel for simd'' directive'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''inscan'' modifier can be used only in ''omp for'', ''omp simd'', ''omp for simd'', ''omp parallel for'', or ''omp parallel for simd'' directive'
err_omp_wrong_linear_modifier:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (?:'val' modifier|one of 'ref', val' or 'uval' modifiers)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
err_omp_wrong_linear_modifier_non_reference:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable of non-reference type (.*) can be used only with 'val' modifier, but used with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
err_omp_wrong_ordered_loop_count:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
err_omp_wrong_simdlen_safelen_values:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
err_omp_wrong_var_in_declare_reduction:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only (?:'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out') variables are allowed in (?:initializer|combiner) expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
err_only_annotate_after_access_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: access specifier can only have annotation attributes
  SFINAE: SFINAE_SubstitutionFailure
  Text: access specifier can only have annotation attributes
err_only_constructors_take_base_inits:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only constructors take base initializers
  SFINAE: SFINAE_SubstitutionFailure
  Text: only constructors take base initializers
err_only_enums_have_underlying_types:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only enumeration types have underlying types
  SFINAE: SFINAE_SubstitutionFailure
  Text: only enumeration types have underlying types
err_opencl_addrspace_scope:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variables in the (.*) address space can only be declared in the outermost scope of a kernel function
  SFINAE: SFINAE_SubstitutionFailure
  Text: variables in the %0 address space can only be declared in the outermost scope of a kernel function
err_opencl_atomic_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: atomic variable can be (?:assigned|initialized) to a variable only in global address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
err_opencl_bitfields:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: bit-fields are not supported in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: bit-fields are not supported in OpenCL
err_opencl_block_ref_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot refer to a block inside block
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot refer to a block inside block
err_opencl_block_storage_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the __block storage type is not permitted
  SFINAE: SFINAE_SubstitutionFailure
  Text: the __block storage type is not permitted
err_opencl_builtin_expected_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal call to (.*), expected (.*) argument type
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal call to %0, expected %1 argument type
err_opencl_builtin_pipe_arg_num:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid number of arguments to function: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid number of arguments to function: %0'
err_opencl_builtin_pipe_first_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to (.*) must be a pipe type
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to %0 must be a pipe type
err_opencl_builtin_pipe_invalid_access_modifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid pipe access modifier \(expecting (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid pipe access modifier (expecting %0)
err_opencl_builtin_pipe_invalid_arg:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument type to function (.*) \(expecting (.*) having (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument type to function %0 (expecting %1 having %2)
err_opencl_builtin_to_addr_invalid_arg:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid argument (.*) to function: (.*), expecting a generic pointer argument'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid argument %0 to function: %1, expecting a generic pointer argument'
err_opencl_cast_non_zero_to_event_t:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast non-zero value '(.*)' to 'event_t'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast non-zero value '%0' to 'event_t'
err_opencl_cast_to_half:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: casting to type (.*) is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: casting to type %0 is not allowed
err_opencl_constant_no_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable in constant address space must be initialized
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable in constant address space must be initialized
err_opencl_enqueue_kernel_blocks_no_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: blocks with parameters are not accepted in this prototype of enqueue_kernel call
  SFINAE: SFINAE_SubstitutionFailure
  Text: blocks with parameters are not accepted in this prototype of enqueue_kernel call
err_opencl_enqueue_kernel_blocks_non_local_void_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: blocks used in enqueue_kernel call are expected to have parameters of type 'local void\*'
  SFINAE: SFINAE_SubstitutionFailure
  Text: blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
err_opencl_enqueue_kernel_incorrect_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal call to enqueue_kernel, incorrect argument types
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal call to enqueue_kernel, incorrect argument types
err_opencl_enqueue_kernel_invalid_local_size_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal call to enqueue_kernel, parameter needs to be specified as integer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal call to enqueue_kernel, parameter needs to be specified as integer type
err_opencl_enqueue_kernel_local_size_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mismatch in number of block parameters and local size arguments passed
  SFINAE: SFINAE_SubstitutionFailure
  Text: mismatch in number of block parameters and local size arguments passed
err_opencl_ext_vector_component_invalid_length:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'vector component access has invalid length (.*)\.  Supported: 1,2,3,4,8,16\.'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.'
err_opencl_extension_and_feature_differs:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: options (.*) and (.*) are set to different values
  SFINAE: SFINAE_SubstitutionFailure
  Text: options %0 and %1 are set to different values
err_opencl_extern_block_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid block variable declaration - using 'extern' storage class is disallowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid block variable declaration - using 'extern' storage class is disallowed
err_opencl_feature_requires:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: feature (.*) requires support of (.*) feature
  SFINAE: SFINAE_SubstitutionFailure
  Text: feature %0 requires support of %1 feature
err_opencl_function_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:pointers|references) to functions are not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{pointers|references}0 to functions are not allowed'
err_opencl_function_variable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-kernel function|function scope) variable cannot be declared in (.*) address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space'
err_opencl_global_invalid_addr_space:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:program scope|static local|extern) variable must reside in (.*) address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{program scope|static local|extern}0 variable must reside in %1 address space'
err_opencl_half_declaration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaring variable of type (.*) is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaring variable of type %0 is not allowed
err_opencl_half_load_store:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:loading directly from|assigning directly to) pointer to type (.*) requires cl_khr_fp16\. Use vector data (?:load|store) builtin functions instead
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead'
err_opencl_implicit_function_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: implicit declaration of function (.*) is invalid in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: implicit declaration of function %0 is invalid in OpenCL
err_opencl_implicit_vector_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: implicit conversions between vector types \((.*) and (.*)\) are not permitted
  SFINAE: SFINAE_SubstitutionFailure
  Text: implicit conversions between vector types (%0 and %1) are not permitted
err_opencl_invalid_access_qualifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: access qualifier can only be used for pipe and image type
  SFINAE: SFINAE_SubstitutionFailure
  Text: access qualifier can only be used for pipe and image type
err_opencl_invalid_block_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid block variable declaration - must be (?:const qualified|initialized)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid block variable declaration - must be %select{const qualified|initialized}0
err_opencl_invalid_param:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaring function parameter of type (.*) is not allowed(?:; did you forget \* \?|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaring function parameter of type %0 is not allowed%select{; did you forget * ?|}1
err_opencl_invalid_read_write:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: access qualifier (.*) can not be used for (.*) (?:|prior to OpenCL C version 2\.0 or in version 3\.0 and without __opencl_c_read_write_images feature)
  SFINAE: SFINAE_SubstitutionFailure
  Text: access qualifier %0 can not be used for %1 %select{|prior to OpenCL C version 2.0 or in version 3.0 and without __opencl_c_read_write_images feature}2
err_opencl_invalid_return:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaring function return value of type (.*) is not allowed (?:; did you forget \* \?|)
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
err_opencl_invalid_type_array:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array of (.*) type is invalid in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: array of %0 type is invalid in OpenCL
err_opencl_kernel_attr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) can only be applied to an OpenCL kernel function
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 can only be applied to an OpenCL kernel function
err_opencl_logical_exclusive_or:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: \^\^ is a reserved operator in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: ^^ is a reserved operator in OpenCL
err_opencl_multiple_access_qualifiers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple access qualifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple access qualifiers
err_opencl_no_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:function|kernel) cannot be called 'main'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{function|kernel}0 cannot be called ''main'''
err_opencl_nonconst_global_sampler:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: global sampler requires a const or constant address space qualifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: global sampler requires a const or constant address space qualifier
err_opencl_pointer_to_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pointer to type (.*) is invalid in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: pointer to type %0 is invalid in OpenCL
err_opencl_ptrptr_kernel_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel parameter cannot be declared as a pointer to a pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel parameter cannot be declared as a pointer to a pointer
err_opencl_requires_extension:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of (?:type|declaration) (.*) requires (.*) support
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of %select{type|declaration}0 %1 requires %2 support
err_opencl_return_value_with_address_space:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return value cannot be qualified with address space
  SFINAE: SFINAE_SubstitutionFailure
  Text: return value cannot be qualified with address space
err_opencl_scalar_type_rank_greater_than_vector_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: scalar operand type has greater rank than the type of the vector element\. \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: scalar operand type has greater rank than the type of the vector element. (%0 and %1)
err_opencl_sizeof_alignof_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid application of '(.*)' to a void type
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid application of '%0' to a void type
err_opencl_taking_address_capture:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: taking address of a capture is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: taking address of a capture is not allowed
err_opencl_taking_function_address_parser:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: taking address of function is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: taking address of function is not allowed
err_opencl_ternary_with_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: block type cannot be used as expression in ternary expression in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: block type cannot be used as expression in ternary expression in OpenCL
err_opencl_type_can_only_be_used_as_function_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) can only be used as a function parameter in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 can only be used as a function parameter in OpenCL
err_opencl_type_not_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) type (.*) not found; include the base header with -finclude-default-header
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 type %1 not found; include the base header with -finclude-default-header'
err_opencl_type_struct_or_union_field:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the (.*) type cannot be used to declare a structure or union field
  SFINAE: SFINAE_SubstitutionFailure
  Text: the %0 type cannot be used to declare a structure or union field
err_opencl_unknown_type_specifier:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not support the '(.*)' (?:type qualifier|storage class specifier)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not support the ''%1'' %select{type qualifier|storage class specifier}2'
err_opencl_variadic_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid prototype, variadic arguments are not allowed in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid prototype, variadic arguments are not allowed in OpenCL
err_opencl_vla:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable length arrays are not supported in OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable length arrays are not supported in OpenCL
err_openclcxx_not_supported:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' is not supported in C\+\+ for OpenCL'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' is not supported in C++ for OpenCL'
err_openclcxx_placement_new:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of placement new requires explicit declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of placement new requires explicit declaration
err_openclcxx_virtual_function:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: virtual functions are not supported in C\+\+ for OpenCL
  SFINAE: SFINAE_SubstitutionFailure
  Text: virtual functions are not supported in C++ for OpenCL
err_openmp_default_simd_align_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
err_operator_arrow_circular:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: circular pointer delegation detected
  SFINAE: SFINAE_SubstitutionFailure
  Text: circular pointer delegation detected
err_operator_arrow_depth_exceeded:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of 'operator->' on type (.*) would invoke a sequence of more than (.*) 'operator->' calls
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
err_operator_delete_dependent_param_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot take a dependent type as first parameter; use (.*) instead
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot take a dependent type as first parameter; use %1 instead'
err_operator_delete_param_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first parameter of (.*) must have type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: first parameter of %0 must have type %1
err_operator_new_default_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter of (.*) cannot have a default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter of %0 cannot have a default argument
err_operator_new_delete_declared_in_namespace:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be declared inside a namespace
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be declared inside a namespace'
err_operator_new_delete_declared_static:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be declared static in global scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be declared static in global scope'
err_operator_new_delete_dependent_result_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot have a dependent return type; use (.*) instead
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot have a dependent return type; use %1 instead'
err_operator_new_delete_invalid_result_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must return type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 must return type %1'
err_operator_new_delete_template_too_few_parameters:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) template must have at least two parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 template must have at least two parameters'
err_operator_new_delete_too_few_parameters:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must have at least one parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 must have at least one parameter'
err_operator_new_dependent_param_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot take a dependent type as first parameter; use size_t \((.*)\) instead
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot take a dependent type as first parameter; use size_t (%1) instead'
err_operator_new_param_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) takes type size_t \((.*)\) as first parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 takes type size_t (%1) as first parameter'
err_operator_overload_default_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter of overloaded (.*) cannot have a default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter of overloaded %0 cannot have a default argument
err_operator_overload_must_be:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overloaded (.*) must be a (?:unary|binary|unary or binary) operator \(has (.*) parameters?\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
err_operator_overload_must_be_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overloaded (.*) must be a non-static member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: overloaded %0 must be a non-static member function
err_operator_overload_needs_class_or_enum:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overloaded (.*) must have at least one parameter of class or enumeration type
  SFINAE: SFINAE_SubstitutionFailure
  Text: overloaded %0 must have at least one parameter of class or enumeration type
err_operator_overload_post_incdec_must_be_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter of overloaded post-(?:increment|decrement) operator must have type 'int' \(not (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
err_operator_overload_static:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overloaded (.*) cannot be a static member function
  SFINAE: SFINAE_SubstitutionFailure
  Text: overloaded %0 cannot be a static member function
err_operator_overload_variadic:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overloaded (.*) cannot be variadic
  SFINAE: SFINAE_SubstitutionFailure
  Text: overloaded %0 cannot be variadic
err_opt_not_valid_on_target:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: option '(.*)' cannot be specified on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: option '%0' cannot be specified on this target
err_opt_not_valid_with_opt:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: option '(.*)' cannot be specified with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: option '%0' cannot be specified with '%1'
err_opt_not_valid_without_opt:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: option '(.*)' cannot be specified without '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: option '%0' cannot be specified without '%1'
err_os_log_argument_too_big:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: os_log\(\) argument (.*) is too big \((.*) bytes, max (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: os_log() argument %0 is too big (%1 bytes, max %2)
err_os_log_format_not_string_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: os_log\(\) format argument is not a string constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: os_log() format argument is not a string constant
err_out_of_line_constructor_template_id:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: out-of-line constructor for (.*) cannot have template arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: out-of-line constructor for %0 cannot have template arguments
err_out_of_line_default_deletes:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: defaulting this (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) would delete it after its first declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: defaulting this %sub{select_special_member_kind}0 would delete it after its first declaration
err_out_of_line_qualified_id_type_names_constructor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: qualified reference to (.*) is a constructor name rather than a (?:template name|type) in this context
  SFINAE: SFINAE_SubstitutionFailure
  Text: qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
err_overflow_builtin_bit_int_max_size:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_mul_overflow does not support 'signed _BitInt' operands of more than (.*) bits
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_mul_overflow does not support 'signed _BitInt' operands of more than %0 bits
err_overflow_builtin_must_be_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: operand argument to overflow builtin must be an integer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: operand argument to overflow builtin must be an integer (%0 invalid)
err_overflow_builtin_must_be_ptr_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: result argument to overflow builtin must be a pointer to a non-const integer \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
err_override_control_interface:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' keyword not permitted with interface types'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' keyword not permitted with interface types'
err_override_exception_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception specification of overriding function is more lax than base version
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception specification of overriding function is more lax than base version
err_ovl_ambiguous_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to %0 is ambiguous
err_ovl_ambiguous_conversion_in_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous conversion for (?:|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|) from (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
err_ovl_ambiguous_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to constructor of (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to constructor of %0 is ambiguous
err_ovl_ambiguous_member_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to member function (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to member function %0 is ambiguous
err_ovl_ambiguous_object_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to object of type (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to object of type %0 is ambiguous
err_ovl_ambiguous_oper_binary:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of overloaded operator '(.*)' is ambiguous \(with operand types (.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
err_ovl_ambiguous_oper_unary:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of overloaded operator '(.*)' is ambiguous \(operand type (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of overloaded operator '%0' is ambiguous (operand type %1)
err_ovl_ambiguous_subscript_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to subscript operator of type (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to subscript operator of type %0 is ambiguous
err_ovl_deleted_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to deleted function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to deleted function %0
err_ovl_deleted_comparison:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: object of type (.*) cannot be compared because its (.*) is implicitly deleted
  SFINAE: SFINAE_SubstitutionFailure
  Text: object of type %0 cannot be compared because its %1 is implicitly deleted
err_ovl_deleted_conversion_in_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|) from (.*) to (.*) uses deleted function
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 uses deleted function'
err_ovl_deleted_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to deleted constructor of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to deleted constructor of %0
err_ovl_deleted_member_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to deleted member function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to deleted member function %0
err_ovl_deleted_object_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to deleted function call operator in type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to deleted function call operator in type %0
err_ovl_deleted_oper:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overload resolution selected deleted operator '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: overload resolution selected deleted operator '%0'
err_ovl_deleted_special_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to implicitly-deleted (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function) of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
err_ovl_deleted_special_oper:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: object of type (.*) cannot be (?:constructed|copied|moved|assigned|assigned|destroyed) because its (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) is implicitly deleted
  SFINAE: SFINAE_SubstitutionFailure
  Text: object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %sub{select_special_member_kind}1 is implicitly deleted
err_ovl_diff_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: functions that differ only in their return type cannot be overloaded
  SFINAE: SFINAE_SubstitutionFailure
  Text: functions that differ only in their return type cannot be overloaded
err_ovl_no_conversion_in_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot convert (.*) to (.*) without a conversion operator
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot convert %1 to %2 without a conversion operator
err_ovl_no_oper:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) does not provide a (?:subscript|call) operator
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 does not provide a %select{subscript|call}1 operator
err_ovl_no_viable_conversion_in_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching conversion for (?:|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|) from (.*) to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
err_ovl_no_viable_function_in_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching function for call to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching function for call to %0
err_ovl_no_viable_function_in_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching constructor for initialization of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching constructor for initialization of %0
err_ovl_no_viable_literal_operator:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching literal operator for call to (.*)(?:| with argument of type (.*)| with arguments of types (.*) and (.*))(?:| or 'const char \*')(?:|, and no matching literal operator template)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
err_ovl_no_viable_member_function_in_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching member function for call to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching member function for call to %0
err_ovl_no_viable_object_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching function for call to object of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching function for call to object of type %0
err_ovl_no_viable_oper:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no viable overloaded '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no viable overloaded '%0'
err_ovl_no_viable_subscript:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no viable overloaded operator\[\] for type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no viable overloaded operator[] for type %0
err_ovl_rewrite_equalequal_not_bool:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return type (.*) of selected 'operator==' function for rewritten '(.*)' comparison is not 'bool'
  SFINAE: SFINAE_SubstitutionFailure
  Text: return type %0 of selected 'operator==' function for rewritten '%1' comparison is not 'bool'
err_ovl_static_nonstatic_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static and non-static member functions with the same parameter types cannot be overloaded
  SFINAE: SFINAE_SubstitutionFailure
  Text: static and non-static member functions with the same parameter types cannot be overloaded
err_ovl_unresolvable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to (?:overloaded|multiversioned) function could not be resolved; did you mean to call it(?:| with no arguments)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
err_ownership_returns_index_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''ownership_returns'' attribute index does not match; here it is (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''ownership_returns'' attribute index does not match; here it is %0'
err_ownership_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute only applies to (?:pointer|integer) arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute only applies to %select{pointer|integer}1 arguments'
err_pack_expansion_length_conflict:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pack expansion contains parameter packs (.*) and (.*) that have different lengths \((.*) vs\. (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
err_pack_expansion_length_conflict_multilevel:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pack expansion contains parameter pack (.*) that has a different length \((.*) vs\. (.*)\) from outer parameter packs
  SFINAE: SFINAE_SubstitutionFailure
  Text: pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
err_pack_expansion_length_conflict_partial:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pack expansion contains parameter pack (.*) that has a different length \(at least (.*) vs\. (.*)\) from outer parameter packs
  SFINAE: SFINAE_SubstitutionFailure
  Text: pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
err_pack_expansion_member_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pack expansion for initialization of member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: pack expansion for initialization of member %0
err_pack_expansion_without_parameter_packs:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pack expansion does not contain any unexpanded parameter packs
  SFINAE: SFINAE_SubstitutionFailure
  Text: pack expansion does not contain any unexpanded parameter packs
err_param_default_argument:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: C does not support default arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: C does not support default arguments
err_param_default_argument_member_template_redecl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default arguments cannot be added to an out-of-line definition of a member of a (?:class template|class template partial specialization|nested class in a template)
  SFINAE: SFINAE_SubstitutionFailure
  Text: default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
err_param_default_argument_missing:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing default argument on parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing default argument on parameter
err_param_default_argument_missing_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing default argument on parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing default argument on parameter %0
err_param_default_argument_nonfunc:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default arguments can only be specified for parameters in a function declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: default arguments can only be specified for parameters in a function declaration
err_param_default_argument_on_parameter_pack:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter pack cannot have a default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter pack cannot have a default argument
err_param_default_argument_redefinition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of default argument
err_param_default_argument_references_local:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default argument references local variable (.*) of enclosing function
  SFINAE: SFINAE_SubstitutionFailure
  Text: default argument references local variable %0 of enclosing function
err_param_default_argument_references_param:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default argument references parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: default argument references parameter %0
err_param_default_argument_references_this:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default argument references 'this'
  SFINAE: SFINAE_SubstitutionFailure
  Text: default argument references 'this'
err_param_default_argument_template_redecl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default arguments cannot be added to a function template that has already been declared
  SFINAE: SFINAE_SubstitutionFailure
  Text: default arguments cannot be added to a function template that has already been declared
err_param_redefinition:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of parameter %0
err_param_with_void_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument may not have 'void' type
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument may not have 'void' type
err_parameter_shadow_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a lambda parameter cannot shadow an explicitly captured entity
  SFINAE: SFINAE_SubstitutionFailure
  Text: a lambda parameter cannot shadow an explicitly captured entity
err_parameters_retval_cannot_have_fp16_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:parameters|function return value) cannot have __fp16 type; did you forget \* \?
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?'
err_paren_sizeof_parameter_pack:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing parentheses around the size of parameter pack (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing parentheses around the size of parameter pack %0
err_parens_pointer_member_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot parenthesize the name of a method when forming a member pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot parenthesize the name of a method when forming a member pointer
err_partial_spec_args_match_primary_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class|variable) template partial specialization does not specialize any template argument; to (?:declare|define) the primary template, remove the template argument list
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list'
err_partial_spec_fully_specialized:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: partial specialization of (.*) does not use any of its template parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: partial specialization of %0 does not use any of its template parameters
err_partial_spec_ordering_ambiguous:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous partial specializations of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous partial specializations of %0
err_partial_spec_redeclared:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: class template partial specialization (.*) cannot be redeclared
  SFINAE: SFINAE_SubstitutionFailure
  Text: class template partial specialization %0 cannot be redeclared
err_partial_specialization_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: partial specialization cannot be declared as a friend
  SFINAE: SFINAE_SubstitutionFailure
  Text: partial specialization cannot be declared as a friend
err_pascal_string_too_long:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: Pascal string is too long
  SFINAE: SFINAE_SubstitutionFailure
  Text: Pascal string is too long
err_paste_at_end:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''##'' cannot appear at end of macro expansion'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''##'' cannot appear at end of macro expansion'
err_paste_at_start:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''##'' cannot appear at start of macro expansion'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''##'' cannot appear at start of macro expansion'
err_pch_diagopt_mismatch:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is currently enabled, but was not in the PCH file
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is currently enabled, but was not in the PCH file'
err_pch_different_branch:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: PCH file built from a different branch \((.*)\) than the compiler \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: PCH file built from a different branch (%0) than the compiler (%1)
err_pch_langopt_mismatch:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) was (?:disabled|enabled) in PCH file but is currently (?:disabled|enabled)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2'
err_pch_langopt_value_mismatch:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) differs in PCH file vs\. current file
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 differs in PCH file vs. current file'
err_pch_macro_def_conflict:
  ArgsCount: 3
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of macro '(.*)' differs between the precompiled header \('(.*)'\) and the command line \('(.*)'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
err_pch_macro_def_undef:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: macro '(.*)' was (?:defined|undef'd) in the precompiled header but (?:undef'd|defined) on the command line
  SFINAE: SFINAE_SubstitutionFailure
  Text: macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
err_pch_modulecache_mismatch:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: PCH was compiled with module cache path '(.*)', but the path is currently '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: PCH was compiled with module cache path '%0', but the path is currently '%1'
err_pch_pp_detailed_record:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:command line contains|precompiled header was built with) '-detailed-preprocessing-record' but (?:precompiled header was not built with it|it is not present on the command line)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{command line contains|precompiled header was built with}0 ''-detailed-preprocessing-record'' but %select{precompiled header was not built with it|it is not present on the command line}0'
err_pch_targetopt_feature_mismatch:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:AST file was|current translation unit is) compiled with the target feature '(.*)' but the (?:current translation unit is|AST file was) not
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{AST file was|current translation unit is}0 compiled with the target feature ''%1'' but the %select{current translation unit is|AST file was}0 not'
err_pch_targetopt_mismatch:
  ArgsCount: 3
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: PCH file was compiled for the (.*) '(.*)' but the current translation unit is being compiled for target '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
err_pch_undef:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:command line contains|precompiled header was built with) '-undef' but (?:precompiled header was not built with it|it is not present on the command line)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{command line contains|precompiled header was built with}0 ''-undef'' but %select{precompiled header was not built with it|it is not present on the command line}0'
err_pch_version_too_new:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: PCH file uses a newer PCH format that cannot be read
  SFINAE: SFINAE_SubstitutionFailure
  Text: PCH file uses a newer PCH format that cannot be read
err_pch_version_too_old:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: PCH file uses an older PCH format that is no longer supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: PCH file uses an older PCH format that is no longer supported
err_pch_with_compiler_errors:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_ERROR
  Component: Serialization
  DefaultSeverity: SEV_Error
  Group: None
  Regex: PCH file contains compiler errors
  SFINAE: SFINAE_SubstitutionFailure
  Text: PCH file contains compiler errors
err_placeholder_constraints_not_satisfied:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduced type (.*) does not satisfy (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduced type %0 does not satisfy %1
err_placeholder_expected_auto_or_decltype_auto:
  ArgsCount: 0
  CategoryName: Concepts Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'auto' or 'decltype\(auto\)' after concept name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'auto' or 'decltype(auto)' after concept name
err_placeholder_in_source:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: editor placeholder in source file
  SFINAE: SFINAE_SubstitutionFailure
  Text: editor placeholder in source file
err_placement_new_non_placement_delete:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''new'' expression with placement arguments refers to non-placement ''operator delete'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''new'' expression with placement arguments refers to non-placement ''operator delete'''
err_pointer_to_member_call_drops_quals:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to pointer to member function of type (.*) drops '(.*)' qualifiers?
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to pointer to member function of type %0 drops '%1' qualifier%s2
err_pointer_to_member_oper_value_classify:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pointer-to-member function type (.*) can only be called on an (?:rvalue|lvalue)
  SFINAE: SFINAE_SubstitutionFailure
  Text: pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
err_pointer_to_member_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of pointer to member type after (?:\.\*|->\*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of pointer to member type after %select{.*|->*}0
err_postfix_after_unary_requires_parens:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression cannot be followed by a postfix (.*) operator; add parentheses
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression cannot be followed by a postfix %0 operator; add parentheses
err_pp_arc_cf_code_audited_syntax:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'begin' or 'end'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'begin' or 'end'
err_pp_assume_nonnull_syntax:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'begin' or 'end'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'begin' or 'end'
err_pp_bad_paste:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pasting formed '(.*)', an invalid preprocessing token
  SFINAE: SFINAE_SubstitutionFailure
  Text: pasting formed '%0', an invalid preprocessing token
err_pp_colon_without_question:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ''':'' without preceding ''\?'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: ''':'' without preceding ''?'''
err_pp_directive_required:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) must be used within a preprocessing directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 must be used within a preprocessing directive'
err_pp_division_by_zero:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: division by zero in preprocessor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: division by zero in preprocessor expression
err_pp_double_begin_of_arc_cf_code_audited:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: already inside '#pragma clang arc_cf_code_audited'
  SFINAE: SFINAE_SubstitutionFailure
  Text: already inside '#pragma clang arc_cf_code_audited'
err_pp_double_begin_of_assume_nonnull:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: already inside '#pragma clang assume_nonnull'
  SFINAE: SFINAE_SubstitutionFailure
  Text: already inside '#pragma clang assume_nonnull'
err_pp_duplicate_name_in_arg_list:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate macro parameter name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate macro parameter name %0
err_pp_empty_filename:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: empty filename
  SFINAE: SFINAE_SubstitutionFailure
  Text: empty filename
err_pp_endif_without_if:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#endif without #if'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#endif without #if'
err_pp_eof_in_arc_cf_code_audited:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma clang arc_cf_code_audited'' was not ended within this file'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma clang arc_cf_code_audited'' was not ended within this file'
err_pp_eof_in_assume_nonnull:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma clang assume_nonnull'' was not ended within this file'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma clang assume_nonnull'' was not ended within this file'
err_pp_error_opening_file:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'error opening file ''(.*)'': (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'error opening file ''%0'': %1'
err_pp_expected_after:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing (.*) after (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing %1 after %0
err_pp_expected_comma_in_arg_list:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected comma in macro parameter list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected comma in macro parameter list
err_pp_expected_eol:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected end of line in preprocessor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected end of line in preprocessor expression
err_pp_expected_ident_in_arg_list:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected identifier in macro parameter list
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected identifier in macro parameter list
err_pp_expected_module_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected (?:identifier after '\.' in |)module name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected %select{identifier after '.' in |}0module name
err_pp_expected_rparen:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\)' in preprocessor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ')' in preprocessor expression
err_pp_expected_value_in_expr:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected value in expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected value in expression
err_pp_expects_filename:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected "FILENAME" or <FILENAME>
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected "FILENAME" or <FILENAME>
err_pp_expr_bad_token_binop:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: token is not a valid binary operator in a preprocessor subexpression
  SFINAE: SFINAE_SubstitutionFailure
  Text: token is not a valid binary operator in a preprocessor subexpression
err_pp_expr_bad_token_lparen:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function-like macro (.*) is not defined
  SFINAE: SFINAE_SubstitutionFailure
  Text: function-like macro %0 is not defined
err_pp_expr_bad_token_start_expr:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid token at start of a preprocessor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid token at start of a preprocessor expression
err_pp_file_not_found:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' file not found'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' file not found'
err_pp_file_not_found_angled_include_not_fatal:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' file not found with <angled> (?:include|import); use "quotes" instead'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' file not found with <angled> %select{include|import}1; use "quotes" instead'
err_pp_file_not_found_typo_not_fatal:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' file not found, did you mean ''(.*)''\?'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' file not found, did you mean ''%1''?'
err_pp_identifier_arg_not_identifier:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot convert (.*) token to an identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot convert %0 token to an identifier
err_pp_illegal_floating_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: floating point literal in preprocessor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: floating point literal in preprocessor expression
err_pp_import_directive_ms:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#import of type library is an unsupported Microsoft feature'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#import of type library is an unsupported Microsoft feature'
err_pp_include_in_arc_cf_code_audited:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:#include files|import headers) inside '#pragma clang arc_cf_code_audited'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{#include files|import headers}0 inside '#pragma clang arc_cf_code_audited'
err_pp_include_in_assume_nonnull:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:#include files|import headers) inside '#pragma clang assume_nonnull'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{#include files|import headers}0 inside '#pragma clang assume_nonnull'
err_pp_include_too_deep:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#include nested too deeply'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#include nested too deeply'
err_pp_including_mainfile_in_preamble:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: main file cannot be included recursively when building a preamble
  SFINAE: SFINAE_SubstitutionFailure
  Text: main file cannot be included recursively when building a preamble
err_pp_invalid_directive:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid preprocessing directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid preprocessing directive
err_pp_invalid_poison:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: can only poison identifier tokens
  SFINAE: SFINAE_SubstitutionFailure
  Text: can only poison identifier tokens
err_pp_invalid_tok_in_arg_list:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid token in macro parameter list
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid token in macro parameter list
err_pp_invalid_udl:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:character|integer) literal with user-defined suffix cannot be used in preprocessor constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression'
err_pp_line_digit_sequence:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:#line|GNU line marker) directive requires a simple digit sequence
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{#line|GNU line marker}0 directive requires a simple digit sequence'
err_pp_line_invalid_filename:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid filename for #line directive'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid filename for #line directive'
err_pp_line_requires_integer:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#line directive requires a positive integer argument'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#line directive requires a positive integer argument'
err_pp_linemarker_invalid_filename:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid filename for line marker directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid filename for line marker directive
err_pp_linemarker_invalid_flag:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid flag line marker directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid flag line marker directive
err_pp_linemarker_invalid_pop:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid line marker flag ''2'': cannot pop empty include stack'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid line marker flag ''2'': cannot pop empty include stack'
err_pp_linemarker_requires_integer:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: line marker directive requires a positive integer argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: line marker directive requires a positive integer argument
err_pp_macro_not_identifier:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: macro name must be an identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: macro name must be an identifier
err_pp_malformed_ident:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid #ident directive'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid #ident directive'
err_pp_missing_lparen_in_vaopt_use:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing '\(' following __VA_OPT__
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing '(' following __VA_OPT__
err_pp_missing_macro_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: macro name missing
  SFINAE: SFINAE_SubstitutionFailure
  Text: macro name missing
err_pp_missing_rparen_in_macro_def:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing '\)' in macro parameter list
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing ')' in macro parameter list
err_pp_module_begin_no_module_map:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no module map available for module (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no module map available for module %0
err_pp_module_begin_no_submodule:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: submodule (.*)\.(.*) not declared in module map
  SFINAE: SFINAE_SubstitutionFailure
  Text: submodule %0.%1 not declared in module map
err_pp_module_begin_without_module_end:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching '#pragma clang module end' for this '#pragma clang module begin'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching '#pragma clang module end' for this '#pragma clang module begin'
err_pp_module_begin_wrong_module:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'must specify ''-fmodule-name=(.*)'' to enter (?:|submodule of )this module(?: \(current module is (.*)\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
err_pp_module_build_missing_end:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching '#pragma clang module endbuild' for this '#pragma clang module build'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching '#pragma clang module endbuild' for this '#pragma clang module build'
err_pp_module_end_without_module_begin:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no matching '#pragma clang module begin' for this '#pragma clang module end'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no matching '#pragma clang module begin' for this '#pragma clang module end'
err_pp_nested_paren:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nested parentheses not permitted in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: nested parentheses not permitted in %0
err_pp_operator_used_as_macro_name:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: C\+\+ operator (.*) \(aka (.*)\) used as a macro name
  SFINAE: SFINAE_SubstitutionFailure
  Text: C++ operator %0 (aka %1) used as a macro name
err_pp_pragma_hdrstop_not_seen:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '#pragma hdrstop not seen while attempting to use precompiled header'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#pragma hdrstop not seen while attempting to use precompiled header'
err_pp_remainder_by_zero:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: remainder by zero in preprocessor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: remainder by zero in preprocessor expression
err_pp_stringize_not_parameter:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(?:#|#@)'' is not followed by a macro parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%select{#|#@}0'' is not followed by a macro parameter'
err_pp_through_header_not_found:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' required for precompiled header not found'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' required for precompiled header not found'
err_pp_through_header_not_seen:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '#include of ''(.*)'' not seen while attempting to (?:create|use) precompiled header'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#include of ''%0'' not seen while attempting to %select{create|use}1 precompiled header'
err_pp_unmatched_end_of_arc_cf_code_audited:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: not currently inside '#pragma clang arc_cf_code_audited'
  SFINAE: SFINAE_SubstitutionFailure
  Text: not currently inside '#pragma clang arc_cf_code_audited'
err_pp_unmatched_end_of_assume_nonnull:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: not currently inside '#pragma clang assume_nonnull'
  SFINAE: SFINAE_SubstitutionFailure
  Text: not currently inside '#pragma clang assume_nonnull'
err_pp_unterminated_conditional:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unterminated conditional directive
  SFINAE: SFINAE_SubstitutionFailure
  Text: unterminated conditional directive
err_pp_used_poisoned_id:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attempt to use a poisoned identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: attempt to use a poisoned identifier
err_pp_vaopt_nested_use:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __VA_OPT__ cannot be nested within its own replacement tokens
  SFINAE: SFINAE_SubstitutionFailure
  Text: __VA_OPT__ cannot be nested within its own replacement tokens
err_pp_visibility_non_macro:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no macro named (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no macro named %0
err_ppc_builtin_only_on_arch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin is only valid on POWER(.*) or later CPUs
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin is only valid on POWER%0 or later CPUs
err_ppc_builtin_requires_abi:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin requires ABI -mabi=(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin requires ABI -mabi=%0
err_ppc_builtin_requires_htm:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin requires HTM to be enabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin requires HTM to be enabled
err_ppc_builtin_requires_vsx:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this builtin requires VSX to be enabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: this builtin requires VSX to be enabled
err_ppc_invalid_test_data_class_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a 'float' or 'double' for the first argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a 'float' or 'double' for the first argument
err_ppc_invalid_use_mma_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid use of PPC MMA type
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid use of PPC MMA type
err_pragma_attr_attr_no_push:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma clang attribute'' attribute with no matching ''#pragma clang attribute push'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma clang attribute'' attribute with no matching ''#pragma clang attribute push'''
err_pragma_attribute_duplicate_subject:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate attribute subject matcher '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate attribute subject matcher '%0'
err_pragma_attribute_expected_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an attribute after '\('
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an attribute after '('
err_pragma_attribute_expected_attribute_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected identifier that represents an attribute name
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected identifier that represents an attribute name
err_pragma_attribute_expected_attribute_syntax:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an attribute that is specified using the GNU, C\+\+11 or '__declspec' syntax
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
err_pragma_attribute_expected_period:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '\.' after pragma attribute namespace (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '.' after pragma attribute namespace %0
err_pragma_attribute_expected_push_pop_paren:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected 'push', 'pop', or '\(' after '#pragma clang attribute'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected 'push', 'pop', or '(' after '#pragma clang attribute'
err_pragma_attribute_expected_subject_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an identifier that corresponds to an attribute subject rule
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an identifier that corresponds to an attribute subject rule
err_pragma_attribute_expected_subject_sub_identifier:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'expected an identifier that corresponds to an attribute subject matcher sub-rule; ''(.*)'' matcher (?:does not support sub-rules|supports the following sub-rules: (.*)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'expected an identifier that corresponds to an attribute subject matcher sub-rule; ''%0'' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1'
err_pragma_attribute_extra_tokens_after_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extra tokens after attribute in a '#pragma clang attribute push'
  SFINAE: SFINAE_SubstitutionFailure
  Text: extra tokens after attribute in a '#pragma clang attribute push'
err_pragma_attribute_invalid_argument:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected argument '(.*)' to '#pragma clang attribute'; expected 'push' or 'pop'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
err_pragma_attribute_invalid_matchers:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) can't be applied to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 can't be applied to %1
err_pragma_attribute_invalid_subject_set_specifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected attribute subject set specifier 'apply_to'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected attribute subject set specifier 'apply_to'
err_pragma_attribute_matcher_negated_subrule_contradicts_subrule:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: negated attribute subject matcher sub-rule '(.*)' contradicts sub-rule '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
err_pragma_attribute_matcher_subrule_contradicts_rule:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redundant attribute subject matcher sub-rule '(.*)'; '(.*)' already matches those declarations
  SFINAE: SFINAE_SubstitutionFailure
  Text: redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
err_pragma_attribute_multiple_attributes:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: more than one attribute specified in '#pragma clang attribute push'
  SFINAE: SFINAE_SubstitutionFailure
  Text: more than one attribute specified in '#pragma clang attribute push'
err_pragma_attribute_namespace_on_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: namespace can only apply to 'push' or 'pop' directives
  SFINAE: SFINAE_SubstitutionFailure
  Text: namespace can only apply to 'push' or 'pop' directives
err_pragma_attribute_no_pop_eof:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unterminated '#pragma clang attribute push' at end of file
  SFINAE: SFINAE_SubstitutionFailure
  Text: unterminated '#pragma clang attribute push' at end of file
err_pragma_attribute_stack_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma clang attribute (?:(.*)\.|)pop'' with no matching ''#pragma clang attribute (?:(.*)\.|)push'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma clang attribute %select{%1.|}0pop'' with no matching ''#pragma clang attribute %select{%1.|}0push'''
err_pragma_attribute_unknown_subject_rule:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown attribute subject rule '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown attribute subject rule '%0'
err_pragma_attribute_unknown_subject_sub_rule:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:invalid use of|unknown) attribute subject matcher sub-rule ''(.*)''; ''(.*)'' matcher (?:does not support sub-rules|supports the following sub-rules: (.*))'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{invalid use of|unknown}2 attribute subject matcher sub-rule ''%0''; ''%1'' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2'
err_pragma_attribute_unsupported_attribute:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute (.*) is not supported by '#pragma clang attribute'
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute %0 is not supported by '#pragma clang attribute'
err_pragma_cannot_end_force_cuda_host_device:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: force_cuda_host_device end pragma without matching force_cuda_host_device begin
  SFINAE: SFINAE_SubstitutionFailure
  Text: force_cuda_host_device end pragma without matching force_cuda_host_device begin
err_pragma_clang_section_expected_equal:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '=' following '#pragma clang section (?:invalid|bss|data|rodata|text|relro)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text|relro}0'
err_pragma_comment_malformed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pragma comment requires parenthesized identifier and optional string
  SFINAE: SFINAE_SubstitutionFailure
  Text: pragma comment requires parenthesized identifier and optional string
err_pragma_comment_unknown_kind:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown kind of pragma comment
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown kind of pragma comment
err_pragma_detect_mismatch_malformed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pragma detect_mismatch is malformed; it requires two comma-separated string literals
  SFINAE: SFINAE_SubstitutionFailure
  Text: pragma detect_mismatch is malformed; it requires two comma-separated string literals
err_pragma_expected_clang_section_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected one of \[bss\|data\|rodata\|text\|relro\] section kind in '#pragma (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected one of [bss|data|rodata|text|relro] section kind in '#pragma %0'
err_pragma_expected_integer:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected an integer argument in '#pragma (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected an integer argument in '#pragma %0'
err_pragma_fc_except_requires_precise:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma float_control\(except, on\)'' is illegal when precise is disabled'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma float_control(except, on)'' is illegal when precise is disabled'
err_pragma_fc_noprecise_requires_noexcept:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma float_control\(precise, off\)'' is illegal when except is enabled'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma float_control(precise, off)'' is illegal when except is enabled'
err_pragma_fc_noprecise_requires_nofenv:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma float_control\(precise, off\)'' is illegal when fenv_access is enabled'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma float_control(precise, off)'' is illegal when fenv_access is enabled'
err_pragma_fc_pp_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma float_control push/pop'' can only appear at file or namespace scope or within a language linkage specification'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma float_control push/pop'' can only appear at file or namespace scope or within a language linkage specification'
err_pragma_fenv_requires_precise:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma STDC FENV_ACCESS ON'' is illegal when precise is disabled'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma STDC FENV_ACCESS ON'' is illegal when precise is disabled'
err_pragma_file_or_compound_scope:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma (.*)'' can only appear at file scope or at the start of a compound statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma %0'' can only appear at file scope or at the start of a compound statement'
err_pragma_float_control_malformed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pragma float_control is malformed; use 'float_control\(\{push\|pop\}\)' or 'float_control\(\{precise\|except\}, \{on\|off\} \[,push\]\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: pragma float_control is malformed; use 'float_control({push|pop})' or 'float_control({precise|except}, {on|off} [,push])'
err_pragma_fp_invalid_argument:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected argument '(.*)' to '#pragma clang fp (.*)'; expected (?:'fast' or 'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict')
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected argument '%0' to '#pragma clang fp %1'; expected %select{'fast' or 'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict'}2
err_pragma_fp_invalid_option:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:invalid|missing) option(?: (.*)|); expected ''contract'', ''reassociate'' or ''exceptions'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{invalid|missing}0 option%select{ %1|}0; expected ''contract'', ''reassociate'' or ''exceptions'''
err_pragma_include_instead_not_sysheader:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''#pragma clang include_instead'' cannot be used outside of system headers'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''#pragma clang include_instead'' cannot be used outside of system headers'
err_pragma_include_instead_system_reserved:
  ArgsCount: 5
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'header ''(.*)'' is an implementation detail; #include (?:''(.*)''|either ''(.*)'' or ''(.*)''|one of (.*)) instead'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'header ''%0'' is an implementation detail; #include %select{''%2''|either ''%2'' or ''%3''|one of %2}1 instead'
err_pragma_invalid_keyword:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument; expected 'enable'(?:|, 'full')(?:|, 'assume_safety') or 'disable'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
err_pragma_loop_compatibility:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:incompatible|duplicate) directives '(.*)' and '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{incompatible|duplicate}0 directives ''%1'' and ''%2'''
err_pragma_loop_invalid_argument_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument of type (.*); expected an integer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument of type %0; expected an integer type
err_pragma_loop_invalid_argument_value:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:invalid value '(.*)'; must be positive|value '(.*)' is too large)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{invalid value ''%0''; must be positive|value ''%0'' is too large}1'
err_pragma_loop_invalid_option:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:invalid|missing) option(?: (.*)|); expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute'
err_pragma_loop_invalid_vectorize_option:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vectorize_width loop hint malformed; use vectorize_width\(X, fixed\) or vectorize_width\(X, scalable\) where X is an integer, or vectorize_width\('fixed' or 'scalable'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
err_pragma_loop_missing_argument:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing argument; expected (?:an integer value|'enable'(?:|, 'full')(?:|, 'assume_safety') or 'disable')
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
err_pragma_loop_precedes_nonloop:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a for, while, or do-while loop to follow '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a for, while, or do-while loop to follow '%0'
err_pragma_message_malformed:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pragma (?:message|warning|error) requires parenthesized string
  SFINAE: SFINAE_SubstitutionFailure
  Text: pragma %select{message|warning|error}0 requires parenthesized string
err_pragma_misplaced_in_decl:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this pragma cannot appear in (.*) declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: this pragma cannot appear in %0 declaration
err_pragma_missing_argument:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing argument to '#pragma (.*)'(?:|; expected (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing argument to '#pragma %0'%select{|; expected %2}1
err_pragma_optimize_extra_argument:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected extra argument '(.*)' to '#pragma clang optimize'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected extra argument '%0' to '#pragma clang optimize'
err_pragma_optimize_invalid_argument:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected argument '(.*)' to '#pragma clang optimize'; expected 'on' or 'off'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
err_pragma_options_align_mac68k_target_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: mac68k alignment pragma is not supported on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: mac68k alignment pragma is not supported on this target
err_pragma_pack_identifer_not_supported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: specifying an identifier within `#pragma pack` is not supported on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: specifying an identifier within `#pragma pack` is not supported on this target
err_pragma_pack_invalid_alignment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'expected #pragma pack parameter to be ''1'', ''2'', ''4'', ''8'', or ''16'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'expected #pragma pack parameter to be ''1'', ''2'', ''4'', ''8'', or ''16'''
err_pragma_pipeline_invalid_keyword:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument; expected 'disable'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument; expected 'disable'
err_pragma_pointers_to_members_unknown_kind:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected (.*), expected to see one of (?:|'best_case', 'full_generality', )'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
err_pragma_pop_visibility_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#pragma visibility pop with no matching #pragma visibility push'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#pragma visibility pop with no matching #pragma visibility push'
err_pragma_push_pop_macro_malformed:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pragma (.*) requires a parenthesized string
  SFINAE: SFINAE_SubstitutionFailure
  Text: pragma %0 requires a parenthesized string
err_pragma_push_visibility_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#pragma visibility push with no matching #pragma visibility pop'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#pragma visibility push with no matching #pragma visibility pop'
err_pragma_section_invalid_for_target:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'argument to #pragma section is not valid for this target: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'argument to #pragma section is not valid for this target: %0'
err_preserve_enum_value_invalid:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_preserve_enum_value argument (.*) invalid
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_preserve_enum_value argument %0 invalid
err_preserve_enum_value_not_const:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_preserve_enum_value argument (.*) not a constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_preserve_enum_value argument %0 not a constant
err_preserve_field_info_not_const:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_preserve_field_info argument (.*) not a constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_preserve_field_info argument %0 not a constant
err_preserve_field_info_not_field:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_preserve_field_info argument (.*) not a field access
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_preserve_field_info argument %0 not a field access
err_preserve_type_info_invalid:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_preserve_type_info argument (.*) invalid
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_preserve_type_info argument %0 invalid
err_preserve_type_info_not_const:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: __builtin_preserve_type_info argument (.*) not a constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: __builtin_preserve_type_info argument %0 not a constant
err_private_ivar_access:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variable (.*) is private
  SFINAE: SFINAE_AccessControl
  Text: instance variable %0 is private
err_private_module_fragment_expected_semi:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected ';' after private module fragment declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected ';' after private module fragment declaration
err_private_module_fragment_not_module:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: private module fragment declaration with no preceding module declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: private module fragment declaration with no preceding module declaration
err_private_module_fragment_not_module_interface:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: private module fragment in module implementation unit
  SFINAE: SFINAE_SubstitutionFailure
  Text: private module fragment in module implementation unit
err_private_module_fragment_redefined:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: private module fragment redefined
  SFINAE: SFINAE_SubstitutionFailure
  Text: private module fragment redefined
err_probability_not_constant_float:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: probability argument to __builtin_expect_with_probability must be constant floating-point expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: probability argument to __builtin_expect_with_probability must be constant floating-point expression
err_probability_out_of_range:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: probability argument to __builtin_expect_with_probability is outside the range \[0\.0, 1\.0\]
  SFINAE: SFINAE_SubstitutionFailure
  Text: probability argument to __builtin_expect_with_probability is outside the range [0.0, 1.0]
err_property_accessor_type:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of property (.*) \((.*)\) does not match type of accessor (.*) \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of property %0 (%1) does not match type of accessor %2 (%3)
err_property_found_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) found on object of type (.*); did you mean to access it with the "\." operator\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 found on object of type %1; did you mean to access it with the "." operator?
err_property_function_in_objc_container:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
err_property_implemented:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) is already implemented
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 is already implemented
err_property_is_variably_modified:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) has a variably modified type
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 has a variably modified type
err_property_ivar_type:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of property (.*) \((.*)\) does not match type of instance variable (.*) \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of property %0 (%1) does not match type of instance variable %2 (%3)
err_property_method_unavailable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property access is using (.*) method which is unavailable
  SFINAE: SFINAE_SubstitutionFailure
  Text: property access is using %0 method which is unavailable
err_property_not_as_forward_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) refers to an incomplete Objective-C class (.*) \(with no @interface available\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
err_property_not_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) not found on object of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 not found on object of type %1
err_property_not_found_forward_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) cannot be found in forward class object (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 cannot be found in forward class object %1
err_property_not_found_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (.*) not found on object of type (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %0 not found on object of type %1; did you mean %2?
err_property_setter_ambiguous_use:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: synthesized properties (.*) and (.*) both claim setter (.*) - use of this setter will cause unexpected behavior
  SFINAE: SFINAE_SubstitutionFailure
  Text: synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
err_property_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property cannot have array or function type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: property cannot have array or function type %0
err_protected_ivar_access:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variable (.*) is protected
  SFINAE: SFINAE_AccessControl
  Text: instance variable %0 is protected
err_protocol_has_circular_dependency:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: protocol has circular dependency
  SFINAE: SFINAE_SubstitutionFailure
  Text: protocol has circular dependency
err_protocol_property_mismatch:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: property (?:of type (.*)|with attribute '(.*)'|without attribute '(.*)'|with getter (.*)|with setter (.*)) was selected for synthesis
  SFINAE: SFINAE_SubstitutionFailure
  Text: property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
err_pseudo_dtor_base_not_scalar:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: object expression of non-scalar type (.*) cannot be used in a pseudo-destructor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
err_pseudo_dtor_call_with_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to pseudo-destructor cannot have any arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to pseudo-destructor cannot have any arguments
err_pseudo_dtor_destructor_non_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not refer to a type name in pseudo-destructor expression; expected the name of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1'
err_pseudo_dtor_type_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the type of object expression (?:\(\$\) does not match the type being destroyed \(\$\)|does not match the type being destroyed) in pseudo-destructor expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
err_pure_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend declaration cannot have a pure-specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend declaration cannot have a pure-specifier
err_qualified_catch_declarator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: exception declarator cannot be qualified
  SFINAE: SFINAE_SubstitutionFailure
  Text: exception declarator cannot be qualified
err_qualified_friend_def:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend function definition cannot be qualified with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend function definition cannot be qualified with '%0'
err_qualified_friend_no_match:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend declaration of (.*) does not match any declaration in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend declaration of %0 does not match any declaration in %1
err_qualified_function_typeid:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type operand (.*) of 'typeid' cannot have '(.*)' qualifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: type operand %0 of 'typeid' cannot have '%1' qualifier
err_qualified_member_nonclass:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: qualified member access refers to a member in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: qualified member access refers to a member in %0
err_qualified_member_of_unrelated:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not a member of class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%q0 is not a member of class %1'
err_qualified_objc_access:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:property|instance variable) access cannot be qualified with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{property|instance variable}0 access cannot be qualified with ''%1'''
err_qualified_objc_catch_parm:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@catch parameter declarator cannot be qualified'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@catch parameter declarator cannot be qualified'
err_qualified_param_declarator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parameter declarator cannot be qualified
  SFINAE: SFINAE_SubstitutionFailure
  Text: parameter declarator cannot be qualified
err_qualified_typedef_declarator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typedef declarator cannot be qualified
  SFINAE: SFINAE_SubstitutionFailure
  Text: typedef declarator cannot be qualified
err_range_on_array_parameter:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot build range expression with array function parameter (.*) since parameter with array type (.*) is treated as pointer type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
err_raw_delim_too_long:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: raw string delimiter longer than 16 characters; use PREFIX\( \)PREFIX to delimit raw string
  SFINAE: SFINAE_SubstitutionFailure
  Text: raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
err_readonly_message_assignment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: assigning to 'readonly' return result of an Objective-C message not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: assigning to 'readonly' return result of an Objective-C message not allowed
err_realimag_invalid_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid type (.*) to (.*) operator
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid type %0 to %1 operator
err_record_with_pointers_kernel_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:struct|union) kernel parameters may not contain pointers
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{struct|union}0 kernel parameters may not contain pointers'
err_recursive_default_argument:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: recursive evaluation of default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: recursive evaluation of default argument
err_recursive_superclass:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: trying to recursively use (.*) as superclass of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: trying to recursively use %0 as superclass of %1
err_redeclaration_different_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'redeclaration of (.*) with a different type(?:: \$ vs \$|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'redeclaration of %0 with a different type%diff{: $ vs $|}1,2'
err_redeclaration_non_exported:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot export redeclaration (.*) here since the previous declaration is not exported
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot export redeclaration %0 here since the previous declaration is not exported
err_redefinition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of %0
err_redefinition_different_kind:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of (.*) as different kind of symbol
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of %0 as different kind of symbol
err_redefinition_different_namespace_alias:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of (.*) as an alias for a different namespace
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of %0 as an alias for a different namespace
err_redefinition_different_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'redefinition of (.*) with a different type(?:: \$ vs \$|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'redefinition of %0 with a different type%diff{: $ vs $|}1,2'
err_redefinition_different_typedef:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:typedef|type alias|type alias template) redefinition with different types(?: \(\$ vs \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2'
err_redefinition_extern_inline:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of a 'extern inline' function (.*) is not supported in (?:C99 mode|C\+\+)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
err_redefinition_of_enumerator:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of enumerator (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of enumerator %0
err_redefinition_of_label:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of label (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of label %0
err_redefinition_variably_modified_typedef:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redefinition of (?:typedef|type alias) for variably-modified type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: redefinition of %select{typedef|type alias}0 for variably-modified type %1
err_ref_array_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot refer to declaration with an array type inside block
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot refer to declaration with an array type inside block
err_ref_bad_target:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to (?:__device__|__global__|__host__|__host__ __device__) (?:function|variable) (.*) in (?:__device__|__global__|__host__|__host__ __device__) function
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to %select{__device__|__global__|__host__|__host__ __device__}0 %select{function|variable}1 %2 in %select{__device__|__global__|__host__|__host__ __device__}3 function
err_ref_bad_target_global_initializer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to (?:__device__|__global__|__host__|__host__ __device__) function (.*) in global initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
err_ref_flexarray_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot refer to declaration of structure variable with flexible array member inside block
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot refer to declaration of structure variable with flexible array member inside block
err_ref_init_ambiguous:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference initialization of type (.*) with initializer of type (.*) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference initialization of type %0 with initializer of type %1 is ambiguous
err_ref_non_value:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not refer to a value
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not refer to a value'
err_ref_qualifier_constructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ref-qualifier '(?:&&|&)' is not allowed on a constructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: ref-qualifier '%select{&&|&}0' is not allowed on a constructor
err_ref_qualifier_destructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ref-qualifier '(?:&&|&)' is not allowed on a destructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: ref-qualifier '%select{&&|&}0' is not allowed on a destructor
err_ref_qualifier_overload:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot overload a member function (?:without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&') with a member function (?:without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&')
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
err_ref_vm_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot refer to declaration with a variably modified type inside block
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot refer to declaration with a variably modified type inside block
err_refactor_code_outside_of_function:
  ArgsCount: 0
  CategoryName: Refactoring Invocation Issue
  Class: CLASS_ERROR
  Component: Refactoring
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the selected code is not a part of a function's / method's body
  SFINAE: SFINAE_SubstitutionFailure
  Text: the selected code is not a part of a function's / method's body
err_refactor_extract_prohibited_expression:
  ArgsCount: 0
  CategoryName: Refactoring Invocation Issue
  Class: CLASS_ERROR
  Component: Refactoring
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the selected expression can't be extracted
  SFINAE: SFINAE_SubstitutionFailure
  Text: the selected expression can't be extracted
err_refactor_extract_simple_expression:
  ArgsCount: 0
  CategoryName: Refactoring Invocation Issue
  Class: CLASS_ERROR
  Component: Refactoring
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the selected expression is too simple to extract
  SFINAE: SFINAE_SubstitutionFailure
  Text: the selected expression is too simple to extract
err_refactor_no_selection:
  ArgsCount: 0
  CategoryName: Refactoring Invocation Issue
  Class: CLASS_ERROR
  Component: Refactoring
  DefaultSeverity: SEV_Error
  Group: None
  Regex: refactoring action can't be initiated without a selection
  SFINAE: SFINAE_SubstitutionFailure
  Text: refactoring action can't be initiated without a selection
err_refactor_selection_invalid_ast:
  ArgsCount: 0
  CategoryName: Refactoring Invocation Issue
  Class: CLASS_ERROR
  Component: Refactoring
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the provided selection does not overlap with the AST nodes of interest
  SFINAE: SFINAE_SubstitutionFailure
  Text: the provided selection does not overlap with the AST nodes of interest
err_refactor_selection_no_symbol:
  ArgsCount: 0
  CategoryName: Refactoring Invocation Issue
  Class: CLASS_ERROR
  Component: Refactoring
  DefaultSeverity: SEV_Error
  Group: None
  Regex: there is no symbol at the given location
  SFINAE: SFINAE_SubstitutionFailure
  Text: there is no symbol at the given location
err_reference_bind_drops_quals:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: binding reference (?:of type \$ to value of type \$|to value) (?:drops (.*) qualifier(?:|||s)|changes address space|not permitted due to incompatible qualifiers)
  SFINAE: SFINAE_SubstitutionFailure
  Text: binding reference %diff{of type $ to value of type $|to value}0,1 %select{drops %3 qualifier%plural{1:|2:|4:|:s}4|changes address space|not permitted due to incompatible qualifiers}2
err_reference_bind_failed:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference (?:to (?:type|incomplete type) \$ could not bind to an (?:rvalue|lvalue) of type \$|could not bind to (?:rvalue|lvalue) of incompatible type)
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference %diff{to %select{type|incomplete type}1 $ could not bind to an %select{rvalue|lvalue}2 of type $|could not bind to %select{rvalue|lvalue}2 of incompatible type}0,3
err_reference_bind_init_list:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to type (.*) cannot bind to an initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to type %0 cannot bind to an initializer list
err_reference_bind_temporary_addrspace:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference of type (.*) cannot bind to a temporary object because of address space mismatch
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference of type %0 cannot bind to a temporary object because of address space mismatch
err_reference_bind_to_bitfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-const|volatile) reference cannot bind to bit-field(?:| (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2'
err_reference_bind_to_matrix_element:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-const|volatile) reference cannot bind to matrix element
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-const|volatile}0 reference cannot bind to matrix element'
err_reference_bind_to_vector_element:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-const|volatile) reference cannot bind to vector element
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-const|volatile}0 reference cannot bind to vector element'
err_reference_capture_with_reference_default:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''&'' cannot precede a capture when the capture default is ''&'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''&'' cannot precede a capture when the capture default is ''&'''
err_reference_has_multiple_inits:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference cannot be initialized with multiple values
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference cannot be initialized with multiple values
err_reference_pipe_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pipes packet types cannot be of reference type
  SFINAE: SFINAE_SubstitutionFailure
  Text: pipes packet types cannot be of reference type
err_reference_to_function_with_unsatisfied_constraints:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid reference to function (.*): constraints not satisfied'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid reference to function %0: constraints not satisfied'
err_reference_to_local_in_enclosing_context:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to local (?:variable|binding) (.*) declared in enclosing (?:(.*)|block literal|lambda expression|context)
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
err_reference_to_void:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot form a reference to 'void'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot form a reference to 'void'
err_reference_var_requires_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of reference variable (.*) requires an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of reference variable %0 requires an initializer
err_reference_without_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to type (.*) requires an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to type %0 requires an initializer
err_regparm_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declared with regparm\((.*)\) attribute was previously declared (?:without the regparm|with the regparm\((.*)\)) attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
err_relocatable_without_isysroot:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: must specify system root with -isysroot when building a relocatable PCH file
  SFINAE: SFINAE_SubstitutionFailure
  Text: must specify system root with -isysroot when building a relocatable PCH file
err_repeat_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be repeated
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be repeated'
err_require_constant_init_failed:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable does not have a constant initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable does not have a constant initializer
err_requires_clause_inside_parens:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: trailing requires clause should be placed outside parentheses
  SFINAE: SFINAE_SubstitutionFailure
  Text: trailing requires clause should be placed outside parentheses
err_requires_clause_must_appear_after_trailing_return:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: trailing return type must appear before trailing requires clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: trailing return type must appear before trailing requires clause
err_requires_clause_on_declarator_not_declaring_a_function:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: trailing requires clause can only be used when declaring a function
  SFINAE: SFINAE_SubstitutionFailure
  Text: trailing requires clause can only be used when declaring a function
err_requires_expr_expected_type_constraint:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected concept name with optional arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected concept name with optional arguments
err_requires_expr_in_simple_requirement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requires expression in requirement body; did you intend to place it in a nested requirement\? \(add another 'requires' before the expression\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: requires expression in requirement body; did you intend to place it in a nested requirement? (add another 'requires' before the expression)
err_requires_expr_local_parameter_default_argument:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default arguments not allowed for parameters of a requires expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: default arguments not allowed for parameters of a requires expression
err_requires_expr_missing_arrow:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '->' before expression type requirement
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '->' before expression type requirement
err_requires_expr_parameter_list_ellipsis:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: varargs not allowed in requires expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: varargs not allowed in requires expression
err_requires_expr_parameter_referenced_in_evaluated_context:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constraint variable (.*) cannot be used in an evaluated context
  SFINAE: SFINAE_SubstitutionFailure
  Text: constraint variable %0 cannot be used in an evaluated context
err_requires_expr_simple_requirement_noexcept:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''noexcept'' can only be used in a compound requirement \(with ''\{'' ''\}'' around the expression\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''noexcept'' can only be used in a compound requirement (with ''{'' ''}'' around the expression)'
err_restricted_superclass_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
err_ret_local_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: returning block that lives on the local stack
  SFINAE: SFINAE_SubstitutionFailure
  Text: returning block that lives on the local stack
err_rethrow_used_outside_catch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@throw \(rethrow\) used outside of a @catch block'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@throw (rethrow) used outside of a @catch block'
err_return_block_has_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: void block should not return a value
  SFINAE: SFINAE_SubstitutionFailure
  Text: void block should not return a value
err_return_in_captured_stmt:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot return from (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot return from %0
err_return_in_constructor_handler:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return in the catch of a function try block of a constructor is illegal
  SFINAE: SFINAE_SubstitutionFailure
  Text: return in the catch of a function try block of a constructor is illegal
err_return_in_coroutine:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: return statement not allowed in coroutine; did you mean 'co_return'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: return statement not allowed in coroutine; did you mean 'co_return'?
err_return_init_list:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:void function|void method|constructor|destructor) (.*) must not return a value
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{void function|void method|constructor|destructor}1 %0 must not return a value'
err_right_angle_bracket_equal_needs_space:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a space is required between a right angle bracket and an equals sign \(use '> ='\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a space is required between a right angle bracket and an equals sign (use '> =')
err_riscv_builtin_invalid_lmul:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: LMUL argument must be in the range \[0,3\] or \[5,7\]
  SFINAE: SFINAE_SubstitutionFailure
  Text: LMUL argument must be in the range [0,3] or [5,7]
err_riscv_builtin_requires_extension:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'builtin requires at least one of the following extensions support to be enabled : (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'builtin requires at least one of the following extensions support to be enabled : %0'
err_root_class_cannot_use_super:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot use 'super' because it is a root class
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot use ''super'' because it is a root class'
err_rotation_argument_to_cadd:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument should be the value 90 or 270
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument should be the value 90 or 270
err_rotation_argument_to_cmla:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument should be the value 0, 90, 180 or 270
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument should be the value 0, 90, 180 or 270
err_rref_in_exception_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: rvalue reference type (.*) is not allowed in exception specification
  SFINAE: SFINAE_SubstitutionFailure
  Text: rvalue reference type %0 is not allowed in exception specification
err_sampler_argument_required:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: sampler_t variable required - got (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: sampler_t variable required - got %0
err_sampler_initializer_not_integer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: sampler_t initialization requires 32-bit integer, not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: sampler_t initialization requires 32-bit integer, not %0
err_scoped_enum_missing_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: scoped enumeration requires a name
  SFINAE: SFINAE_SubstitutionFailure
  Text: scoped enumeration requires a name
err_second_argument_to_cwsc_not_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: second argument to __builtin_call_with_static_chain must be of pointer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: second argument to __builtin_call_with_static_chain must be of pointer type
err_second_parameter_to_va_arg_abstract:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: second argument to 'va_arg' is of abstract type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: second argument to 'va_arg' is of abstract type %0
err_second_parameter_to_va_arg_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: second argument to 'va_arg' is of incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: second argument to 'va_arg' is of incomplete type %0
err_section_conflict:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) causes a section type conflict with (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 causes a section type conflict with %1'
err_seh___except_block:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) only allowed in __except block or filter expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 only allowed in __except block or filter expression'
err_seh___except_filter:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) only allowed in __except filter expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 only allowed in __except filter expression'
err_seh___finally_block:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) only allowed in __finally block
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 only allowed in __finally block'
err_seh_expected_handler:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected '__except' or '__finally' block
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected '__except' or '__finally' block
err_seh_in_a_coroutine_with_cxx_exceptions:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use SEH '__try' in a coroutine when C\+\+ exceptions are enabled
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
err_seh_try_outside_functions:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
err_seh_try_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: SEH '__try' is not supported on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: SEH '__try' is not supported on this target
err_selected_explicit_constructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: chosen constructor is explicit in copy-initialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: chosen constructor is explicit in copy-initialization
err_selector_element_const_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: selector element of type (.*) cannot be a constant lvalue expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: selector element of type %0 cannot be a constant lvalue expression
err_selector_element_not_lvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: selector element is not a valid lvalue
  SFINAE: SFINAE_SubstitutionFailure
  Text: selector element is not a valid lvalue
err_selector_element_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: selector element type (.*) is not a valid object
  SFINAE: SFINAE_SubstitutionFailure
  Text: selector element type %0 is not a valid object
err_setter_type_void:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of setter must be void
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of setter must be void
err_shared_var_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initialization is not supported for __shared__ variables\.
  SFINAE: SFINAE_SubstitutionFailure
  Text: initialization is not supported for __shared__ variables.
err_shift_rhs_only_vector:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requested shift is a vector of type (.*) but the first operand is not a vector \((.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: requested shift is a vector of type %0 but the first operand is not a vector (%1)
err_shufflevector_argument_too_large:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: index for __builtin_shufflevector must be less than the total number of vector elements
  SFINAE: SFINAE_SubstitutionFailure
  Text: index for __builtin_shufflevector must be less than the total number of vector elements
err_shufflevector_nonconstant_argument:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: index for __builtin_shufflevector must be a constant integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: index for __builtin_shufflevector must be a constant integer
err_single_decl_assign_in_for_range:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: range-based 'for' statement uses ':', not '='
  SFINAE: SFINAE_SubstitutionFailure
  Text: range-based 'for' statement uses ':', not '='
err_size_t_literal_too_large:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:signed |)'size_t' literal is out of range of possible (?:signed |)'size_t' values
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{signed |}0''size_t'' literal is out of range of possible %select{signed |}0''size_t'' values'
err_sizeless_in_exception_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|reference to )sizeless type (.*) is not allowed in exception specification
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|reference to }0sizeless type %1 is not allowed in exception specification'
err_sizeless_nonlocal:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-local variable with sizeless type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-local variable with sizeless type %0
err_sizeof_alignof_function_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid application of '(.*)' to a function type
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid application of '%0' to a function type
err_sizeof_alignof_incomplete_or_sizeless_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid application of '(.*)' to (?:an incomplete|sizeless) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid application of '%0' to %select{an incomplete|sizeless}1 type %2
err_sizeof_alignof_typeof_bitfield:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid application of '(?:sizeof|alignof|typeof)' to bit-field
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid application of '%select{sizeof|alignof|typeof}0' to bit-field
err_sizeof_nonfragile_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: application of '(?:alignof|sizeof)' to interface (.*) is not supported on this architecture and platform
  SFINAE: SFINAE_SubstitutionFailure
  Text: application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
err_sizeof_pack_no_pack_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not refer to the name of a parameter pack
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not refer to the name of a parameter pack'
err_sizeof_pack_no_pack_name_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not refer to the name of a parameter pack; did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not refer to the name of a parameter pack; did you mean %1?'
err_sizeof_parameter_pack:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected parenthesized parameter pack name in 'sizeof\.\.\.' expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected parenthesized parameter pack name in 'sizeof...' expression
err_sls_hardening_arm_not_supported:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -mharden-sls is only supported on armv7-a or later
  SFINAE: SFINAE_SubstitutionFailure
  Text: -mharden-sls is only supported on armv7-a or later
err_spaceship_argument_narrowing:
  ArgsCount: 4
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument to 'operator<=>' (?:cannot be narrowed from type (.*) to (.*)|evaluates to (.*), which cannot be narrowed to type (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
err_spec_member_not_instantiated:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: specialization of member (.*) does not specialize an instantiated member
  SFINAE: SFINAE_SubstitutionFailure
  Text: specialization of member %q0 does not specialize an instantiated member
err_specialization_after_instantiation:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit specialization of (.*) after instantiation
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit specialization of %0 after instantiation
err_specialization_not_primary_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot reference member of primary template because deduced class template specialization (.*) is (?:instantiated from a partial|an explicit) specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
err_specialize_member_of_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot specialize (?:|\(with 'template<>'\) )a member of an unspecialized template
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
err_stack_tagging_requires_hardware_feature:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''-fsanitize=memtag'' requires hardware support \(\+memtag\)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''-fsanitize=memtag'' requires hardware support (+memtag)'
err_standalone_class_nested_name_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: forward declaration of (?:class|struct|interface|union|enum) cannot have a nested name specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
err_static_assert_expression_is_not_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static_assert expression is not an integral constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: static_assert expression is not an integral constant expression
err_static_assert_failed:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'static_assert failed(?: (.*)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: static_assert failed%select{ %1|}0
err_static_assert_requirement_failed:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'static_assert failed due to requirement ''(.*)''(?: (.*)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: static_assert failed due to requirement '%0'%select{ %2|}1
err_static_block_func:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declared in block scope cannot have 'static' storage class
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declared in block scope cannot have 'static' storage class
err_static_data_member_not_allowed_in_anon_struct:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static data member (.*) not allowed in anonymous (?:struct|interface|union|class|enum)
  SFINAE: SFINAE_SubstitutionFailure
  Text: static data member %0 not allowed in anonymous %sub{select_tag_type_kind}1
err_static_data_member_not_allowed_in_local_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static data member (.*) not allowed in local (?:struct|interface|union|class|enum) (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: static data member %0 not allowed in local %sub{select_tag_type_kind}2 %1
err_static_data_member_reinitialization:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static data member (.*) already has an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: static data member %0 already has an initializer
err_static_downcast_via_virtual:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast (.*) to (.*) via virtual base (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast %0 to %1 via virtual base %2
err_static_function_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variables in function scope cannot be declared static
  SFINAE: SFINAE_SubstitutionFailure
  Text: variables in function scope cannot be declared static
err_static_illegal_in_new:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the 'static' modifier for the array size is not legal in new expressions
  SFINAE: SFINAE_SubstitutionFailure
  Text: the 'static' modifier for the array size is not legal in new expressions
err_static_kernel:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel functions cannot be declared static
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel functions cannot be declared static
err_static_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''main'' is not allowed to be declared static'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''main'' is not allowed to be declared static'
err_static_non_static:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static declaration of (.*) follows non-static declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: static declaration of %0 follows non-static declaration
err_static_not_bitfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static member (.*) cannot be a bit-field
  SFINAE: SFINAE_SubstitutionFailure
  Text: static member %0 cannot be a bit-field
err_static_out_of_line:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''static'' can only be specified inside the class definition'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''static'' can only be specified inside the class definition'
err_static_overrides_virtual:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''static'' member function (.*) overrides a virtual function in a base class'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''static'' member function %0 overrides a virtual function in a base class'
err_statically_allocated_object:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: interface type cannot be statically allocated
  SFINAE: SFINAE_SubstitutionFailure
  Text: interface type cannot be statically allocated
err_std_compare_type_not_supported:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: standard library implementation of (.*) is not supported; (?:member '(.*)' does not have expected form|member '(.*)' is missing|the type is not trivially copyable|the type does not have the expected form)
  SFINAE: SFINAE_SubstitutionFailure
  Text: standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
err_std_type_trait_not_class_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unsupported standard library implementation: ''std::(.*)'' is not a class template'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unsupported standard library implementation: ''std::%0'' is not a class template'
err_stmt_attribute_invalid_on_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute cannot be applied to a declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute cannot be applied to a declaration'
err_stmtexpr_file_scope:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: statement expression not allowed at file scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: statement expression not allowed at file scope
err_storage_class_for_static_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: static data member definition cannot specify a storage class
  SFINAE: SFINAE_SubstitutionFailure
  Text: static data member definition cannot specify a storage class
err_storage_spec_on_catch_parm:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@catch parameter cannot have storage specifier ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@catch parameter cannot have storage specifier ''%0'''
err_storageclass_invalid_for_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: storage class specified for a member declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: storage class specified for a member declaration
err_string_concat_mixed_suffix:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: differing user-defined suffixes \('(.*)' and '(.*)'\) in string literal concatenation
  SFINAE: SFINAE_SubstitutionFailure
  Text: differing user-defined suffixes ('%0' and '%1') in string literal concatenation
err_strong_property:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: existing instance variable (.*) for strong property (.*) may not be __weak
  SFINAE: SFINAE_SubstitutionFailure
  Text: existing instance variable %1 for strong property %0 may not be __weak
err_subscript_function_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: subscript of pointer to function type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: subscript of pointer to function type %0
err_subscript_incomplete_or_sizeless_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: subscript of pointer to (?:incomplete|sizeless) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: subscript of pointer to %select{incomplete|sizeless}0 type %1
err_subscript_nonfragile_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: subscript requires size of interface (.*), which is not constant for this architecture and platform
  SFINAE: SFINAE_SubstitutionFailure
  Text: subscript requires size of interface %0, which is not constant for this architecture and platform
err_super_in_lambda_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of '__super' inside a lambda is unsupported
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of '__super' inside a lambda is unsupported
err_super_in_using_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__super'' cannot be used with a using declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__super'' cannot be used with a using declaration'
err_swift_abi_parameter_wrong_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' parameter must have pointer(?:| to unqualified pointer) type; type here is (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2'
err_swift_async_bad_block_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''swift_async'' completion handler parameter must have block type returning ''void'', type here is (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''swift_async'' completion handler parameter must have block type returning ''void'', type here is %0'
err_swift_async_error_no_error_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute with 'nonnull_error' convention can only be applied to a (?:function|method) with a completion handler with an error parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute with ''nonnull_error'' convention can only be applied to a %select{function|method}1 with a completion handler with an error parameter'
err_swift_async_error_non_integral:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute with '(.*)' convention must have an integral-typed parameter in completion handler at index (.*), type here is (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute with ''%1'' convention must have an integral-typed parameter in completion handler at index %2, type here is %3'
err_swift_async_error_without_swift_async:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) attribute must be applied to a (?:function|method) annotated with non-'none' attribute 'swift_async'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 attribute must be applied to a %select{function|method}1 annotated with non-''none'' attribute ''swift_async'''
err_swift_async_no_access:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first argument to 'swift_async' must be either 'none', 'swift_private', or 'not_swift_private'
  SFINAE: SFINAE_SubstitutionFailure
  Text: first argument to 'swift_async' must be either 'none', 'swift_private', or 'not_swift_private'
err_swift_error_result_not_after_swift_context:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''swift_error_result'' parameter must follow ''swift_context'' parameter'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''swift_error_result'' parameter must follow ''swift_context'' parameter'
err_swift_indirect_result_not_first:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''swift_indirect_result'' parameters must be first parameters of function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''swift_indirect_result'' parameters must be first parameters of function'
err_swift_param_attr_not_swiftcall:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' parameter can only be used with swiftcall(?: or swiftasynccall|) calling convention(?:|s)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' parameter can only be used with swiftcall%select{ or swiftasynccall|}1 calling convention%select{|s}1'
err_switch_explicit_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: switch condition type (.*) requires explicit conversion to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: switch condition type %0 requires explicit conversion to %1
err_switch_incomplete_class_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: switch condition has incomplete class type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: switch condition has incomplete class type %0
err_switch_into_protected_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot jump from switch statement to this case label
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot jump from switch statement to this case label
err_switch_multiple_conversions:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: multiple conversions from switch condition type (.*) to an integral or enumeration type
  SFINAE: SFINAE_SubstitutionFailure
  Text: multiple conversions from switch condition type %0 to an integral or enumeration type
err_sycl_special_type_num_init_method:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: types with 'sycl_special_class' attribute must have one and only one '__init' method defined
  SFINAE: SFINAE_SubstitutionFailure
  Text: types with 'sycl_special_class' attribute must have one and only one '__init' method defined
err_synthesize_category_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@synthesize not allowed in a category''s implementation'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@synthesize not allowed in a category''s implementation'
err_synthesize_on_class_property:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@synthesize not allowed on a class property (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@synthesize not allowed on a class property %0'
err_synthesize_variable_sized_ivar:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: synthesized property with variable size type (.*) requires an existing instance variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: synthesized property with variable size type %0 requires an existing instance variable
err_synthesized_property_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expected a property name in @synthesize
  SFINAE: SFINAE_SubstitutionFailure
  Text: expected a property name in @synthesize
err_synthesizing_arc_weak_property_disabled:
  ArgsCount: 0
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot synthesize weak property in file using manual reference counting
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot synthesize weak property in file using manual reference counting
err_synthesizing_arc_weak_property_no_runtime:
  ArgsCount: 0
  CategoryName: ARC Weak References
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot synthesize weak property because the current deployment target does not support weak references
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot synthesize weak property because the current deployment target does not support weak references
err_systemz_invalid_tabort_code:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid transaction abort code
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid transaction abort code
err_tag_definition_of_typedef:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of type (.*) conflicts with (?:typedef|type alias) of the same name
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
err_tag_index_out_of_range:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:type tag|argument) index (.*) is greater than the number of arguments specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{type tag|argument}0 index %1 is greater than the number of arguments specified'
err_tag_reference_conflict:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: implicit declaration introduced by elaborated type conflicts with a (?:non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument) of the same name
  SFINAE: SFINAE_SubstitutionFailure
  Text: implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
err_tag_reference_non_tag:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument) (.*) cannot be referenced with a (?:struct|interface|union|class|enum) specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier'
err_tagless_friend_type_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friend type templates must use an elaborated type
  SFINAE: SFINAE_SubstitutionFailure
  Text: friend type templates must use an elaborated type
err_target_clone_doesnt_match:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''target_clones'' attribute does not match previous declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''target_clones'' attribute does not match previous declaration'
err_target_clone_must_have_default:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''target_clones'' multiversioning requires a default target'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''target_clones'' multiversioning requires a default target'
err_target_unknown_abi:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown target ABI '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown target ABI '%0'
err_target_unknown_cpu:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown target CPU '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown target CPU '%0'
err_target_unknown_fpmath:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown FP unit '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown FP unit '%0'
err_target_unknown_triple:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown target triple '(.*)', please use -triple or -arch
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown target triple '%0', please use -triple or -arch
err_target_unsupported_abi:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ABI '(.*)' is not supported on CPU '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: ABI '%0' is not supported on CPU '%1'
err_target_unsupported_abi_for_triple:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ABI '(.*)' is not supported for '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: ABI '%0' is not supported for '%1'
err_target_unsupported_arch:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the target architecture '(.*)' is not supported by the target '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: the target architecture '%0' is not supported by the target '%1'
err_target_unsupported_cpu_for_micromips:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: micromips is not supported for target CPU '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: micromips is not supported for target CPU '%0'
err_target_unsupported_execute_only:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: execute only is not supported for the (.*) sub-architecture
  SFINAE: SFINAE_SubstitutionFailure
  Text: execute only is not supported for the %0 sub-architecture
err_target_unsupported_fpmath:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the '(.*)' unit is not supported with this instruction set
  SFINAE: SFINAE_SubstitutionFailure
  Text: the '%0' unit is not supported with this instruction set
err_target_unsupported_mcmse:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -mcmse is not supported for (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: -mcmse is not supported for %0
err_target_unsupported_tp_hard:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: hardware TLS register is not supported for the (.*) sub-architecture
  SFINAE: SFINAE_SubstitutionFailure
  Text: hardware TLS register is not supported for the %0 sub-architecture
err_target_unsupported_type:
  ArgsCount: 4
  CategoryName: OpenMP Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) requires (?:|(.*) bit size) (.*) (?:|return )type support, but target '(.*)' does not support it
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 requires %select{|%2 bit size}1 %3 %select{|return }4type support, but target ''%5'' does not support it'
err_target_unsupported_unaligned:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the (.*) sub-architecture does not support unaligned accesses
  SFINAE: SFINAE_SubstitutionFailure
  Text: the %0 sub-architecture does not support unaligned accesses
err_tcb_conflicting_attributes:
  ArgsCount: 4
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attributes '(.*)\("(.*)"\)' and '(.*)\("(.*)"\)' are mutually exclusive
  SFINAE: SFINAE_SubstitutionFailure
  Text: attributes '%0("%2")' and '%1("%2")' are mutually exclusive
err_temp_copy_ambiguous:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous constructor call when (?:copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value) of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous constructor call when %sub{select_initialized_entity_kind}0 of type %1
err_temp_copy_deleted:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value) of type (.*) invokes deleted constructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%sub{select_initialized_entity_kind}0 of type %1 invokes deleted constructor'
err_temp_copy_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: copying a temporary object of incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: copying a temporary object of incomplete type %0
err_temp_copy_no_viable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no viable constructor (?:copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value) of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no viable constructor %sub{select_initialized_entity_kind}0 of type %1
err_template_arg_address_of_non_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address taken in non-type template argument for template parameter of reference type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: address taken in non-type template argument for template parameter of reference type %0
err_template_arg_deduced_incomplete_pack:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduced incomplete pack (.*) for template parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduced incomplete pack %0 for template parameter %1
err_template_arg_field:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument refers to non-static data member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument refers to non-static data member %0
err_template_arg_list_constraints_not_satisfied:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constraints not satisfied for (?:class template|function template|variable template|alias template|template template parameter|template) (.*)(.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: constraints not satisfied for %select{class template|function template|variable template|alias template|template template parameter|template}0 %1%2
err_template_arg_list_different_arity:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:too few|too many) template arguments for (?:class template|function template|variable template|alias template|template template parameter|concept|template) (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|concept|template}1 %2'
err_template_arg_member_ptr_base_derived_not_supported:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: sorry, non-type template argument of pointer-to-member type (.*) that refers to member (.*) of a different class is not supported yet
  SFINAE: SFINAE_SubstitutionFailure
  Text: sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
err_template_arg_method:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument refers to non-static member function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument refers to non-static member function %0
err_template_arg_must_be_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument for non-type template parameter must be an expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument for non-type template parameter must be an expression
err_template_arg_must_be_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument for template template parameter must be a class template(?:| or type alias template)
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument for template template parameter must be a class template%select{| or type alias template}0
err_template_arg_must_be_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument for template type parameter must be a type
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument for template type parameter must be a type
err_template_arg_must_be_type_suggest:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument for template type parameter must be a type; did you forget 'typename'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument for template type parameter must be a type; did you forget 'typename'?
err_template_arg_no_ref_bind:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template parameter of reference type (?:\$ cannot bind to template argument of type \$|cannot bind to template of incompatible argument type)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
err_template_arg_nontype_ambig:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument for non-type template parameter is treated as function type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument for non-type template parameter is treated as function type %0
err_template_arg_not_address_constant:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument of type (.*) is not a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument of type %0 is not a constant expression
err_template_arg_not_address_of:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument for template parameter of pointer type (.*) must have its address taken
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument for template parameter of pointer type %0 must have its address taken
err_template_arg_not_convertible:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument of type (.*) cannot be converted to a value of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument of type %0 cannot be converted to a value of type %1
err_template_arg_not_decl_ref:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument does not refer to any declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument does not refer to any declaration
err_template_arg_not_ice:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument of type (.*) is not an integral constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument of type %0 is not an integral constant expression
err_template_arg_not_integral_or_enumeral:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument of type (.*) must have an integral or enumeration type
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument of type %0 must have an integral or enumeration type
err_template_arg_not_object_or_func:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument does not refer to an object or function
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument does not refer to an object or function
err_template_arg_not_pointer_to_member_form:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument is not a pointer to member constant
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument is not a pointer to member constant
err_template_arg_not_valid_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument does not refer to a class or alias template, or template template parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument does not refer to a class or alias template, or template template parameter
err_template_arg_object_no_linkage:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument refers to (?:function|object) (.*) that does not have linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument refers to %select{function|object}0 %1 that does not have linkage
err_template_arg_overload_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template argument is the type of an unresolved overloaded function
  SFINAE: SFINAE_SubstitutionFailure
  Text: template argument is the type of an unresolved overloaded function
err_template_arg_ref_bind_ignores_quals:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference binding of non-type template parameter (?:of type \$ to template argument of type \$|to template argument) ignores qualifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
err_template_arg_reference_var:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument of reference type (.*) is not an object
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument of reference type %0 is not an object
err_template_arg_template_params_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template template argument has different template parameters than its corresponding template template parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: template template argument has different template parameters than its corresponding template template parameter
err_template_arg_thread_local:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template argument refers to thread-local object
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template argument refers to thread-local object
err_template_arg_untyped_null_constant:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: null non-type template argument must be cast to template parameter type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: null non-type template argument must be cast to template parameter type %0
err_template_arg_wrongtype_null_constant:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: null non-type template argument of type (.*) does not match template parameter of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: null non-type template argument of type %0 does not match template parameter of type %1
err_template_defn_explicit_instantiation:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:function|class|variable) cannot be defined in an explicit instantiation; if this declaration is meant to be a (?:function|class|variable) definition, remove the 'template' keyword
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the ''template'' keyword'
err_template_different_requires_clause:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: requires clause differs in template redeclaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: requires clause differs in template redeclaration
err_template_different_type_constraint:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type constraint differs in template redeclaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: type constraint differs in template redeclaration
err_template_expansion_into_fixed_list:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pack expansion used as argument for non-pack parameter of (?:alias template|concept)
  SFINAE: SFINAE_SubstitutionFailure
  Text: pack expansion used as argument for non-pack parameter of %select{alias template|concept}0
err_template_id_not_a_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template name refers to non-type template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: template name refers to non-type template %0
err_template_inside_local_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: templates cannot be declared inside of a local class
  SFINAE: SFINAE_SubstitutionFailure
  Text: templates cannot be declared inside of a local class
err_template_instantiate_undefined:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:implicit|explicit) instantiation of undefined template (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{implicit|explicit}0 instantiation of undefined template %1'
err_template_instantiate_within_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:implicit|explicit) instantiation of template (.*) within its own definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{implicit|explicit}0 instantiation of template %1 within its own definition'
err_template_kernel:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: kernel functions cannot be used in a template declaration, instantiation or specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: kernel functions cannot be used in a template declaration, instantiation or specialization
err_template_kw_missing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing 'template' keyword prior to dependent template name '(.*)(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing 'template' keyword prior to dependent template name '%0%1'
err_template_kw_refers_to_class_template:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)(.*)'' instantiated to a class template, not a function template'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0%1'' instantiated to a class template, not a function template'
err_template_kw_refers_to_dependent_non_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*)(?:| following the 'template' keyword) cannot refer to a dependent template
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0%select{| following the ''template'' keyword}1 cannot refer to a dependent template'
err_template_kw_refers_to_non_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*)(?:| following the 'template' keyword) does not refer to a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0%select{| following the ''template'' keyword}1 does not refer to a template'
err_template_linkage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: templates must have C\+\+ linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: templates must have C++ linkage
err_template_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member (.*) declared as a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: member %0 declared as a template
err_template_member_noparams:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous 'template<>' in declaration of member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous 'template<>' in declaration of member %0
err_template_missing_args:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of (?:class template|function template|variable template|alias template|template template parameter|concept|template) (.*) requires template arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments
err_template_nontype_parm_bad_structural_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a non-type template parameter cannot have type (.*) before C\+\+20
  SFINAE: SFINAE_SubstitutionFailure
  Text: a non-type template parameter cannot have type %0 before C++20
err_template_nontype_parm_bad_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a non-type template parameter cannot have type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a non-type template parameter cannot have type %0
err_template_nontype_parm_different_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template non-type parameter has a different type (.*) in template (?:|template parameter )redeclaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
err_template_nontype_parm_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template parameter has incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template parameter has incomplete type %0
err_template_nontype_parm_not_literal:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template parameter has non-literal type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template parameter has non-literal type %0
err_template_nontype_parm_not_structural:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type (.*) of non-type template parameter is not a structural type
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 of non-type template parameter is not a structural type
err_template_nontype_parm_rvalue_ref:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template parameter has rvalue reference type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template parameter has rvalue reference type %0
err_template_outside_namespace_or_class_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: templates can only be declared in namespace or class scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: templates can only be declared in namespace or class scope
err_template_param_default_arg_missing:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter missing a default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter missing a default argument
err_template_param_default_arg_redefinition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter redefines default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter redefines default argument
err_template_param_different_kind:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter has a different kind in template (?:|template parameter )redeclaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter has a different kind in template %select{|template parameter }0redeclaration
err_template_param_list_different_arity:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:too few|too many) template parameters in template (?:|template parameter )redeclaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration'
err_template_param_list_matches_nontemplate:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter list matching the non-templated nested type (.*) should be empty \('template<>'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter list matching the non-templated nested type %0 should be empty ('template<>')
err_template_param_pack_default_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter pack cannot have a default argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter pack cannot have a default argument
err_template_param_pack_must_be_last_template_parameter:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template parameter pack must be the last template parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: template parameter pack must be the last template parameter
err_template_param_shadow:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of (.*) shadows template parameter
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of %0 shadows template parameter
err_template_parameter_default_friend_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default template argument not permitted on a friend template
  SFINAE: SFINAE_SubstitutionFailure
  Text: default template argument not permitted on a friend template
err_template_parameter_default_template_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot add a default template argument to the definition of a member of a class template
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot add a default template argument to the definition of a member of a class template
err_template_parameter_pack_non_pack:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:template type|non-type template|template template) parameter(?:| pack) conflicts with previous (?:template type|non-type template|template template) parameter(?: pack|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1'
err_template_qualified_declarator_no_match:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: nested name specifier '(.*)' for declaration does not refer into a class, class template or class template partial specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
err_template_recursion_depth_exceeded:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: recursive template instantiation exceeded maximum depth of (.*)
  SFINAE: SFINAE_Report
  Text: recursive template instantiation exceeded maximum depth of %0
err_template_spec_decl_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot declare an explicit specialization in a friend
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot declare an explicit specialization in a friend
err_template_spec_decl_function_scope:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: explicit specialization of (.*) in function scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: explicit specialization of %0 in function scope
err_template_spec_default_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: default argument not permitted on an explicit (?:instantiation|specialization) of function (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
err_template_spec_extra_headers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous template parameter list in template specialization or out-of-line template definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous template parameter list in template specialization or out-of-line template definition
err_template_spec_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template specialization declaration cannot be a friend
  SFINAE: SFINAE_SubstitutionFailure
  Text: template specialization declaration cannot be a friend
err_template_spec_needs_header:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template specialization requires 'template<>'
  SFINAE: SFINAE_SubstitutionFailure
  Text: template specialization requires 'template<>'
err_template_spec_needs_template_parameters:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template specialization or definition requires a template parameter list corresponding to the nested type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: template specialization or definition requires a template parameter list corresponding to the nested type %0
err_template_spec_redecl_global_scope:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration) specialization of (.*) must occur at global scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope'
err_template_spec_redecl_out_of_scope:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration) specialization of (.*) not in (?:a namespace enclosing (.*)|class (.*) or an enclosing namespace)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3'
err_template_spec_syntax_non_template:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: identifier followed by '<' indicates a class template specialization but (.*) (?:does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|refers to a concept)
  SFINAE: SFINAE_SubstitutionFailure
  Text: identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|refers to a concept}1
err_template_spec_unknown_kind:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, (?:or member class|member class, or member enumeration) of a class template
  SFINAE: SFINAE_SubstitutionFailure
  Text: can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
err_template_tag_noparams:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous 'template<>' in declaration of (.*) (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous 'template<>' in declaration of %0 %1
err_template_template_parameter_not_at_least_as_constrained:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template template argument (.*) is more constrained than template template parameter (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: template template argument %0 is more constrained than template template parameter %1
err_template_template_parm_no_parms:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: template template parameter must have its own template parameters
  SFINAE: SFINAE_SubstitutionFailure
  Text: template template parameter must have its own template parameters
err_template_typedef:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a typedef cannot be a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: a typedef cannot be a template
err_template_unnamed_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot declare a class template with no name
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot declare a class template with no name
err_template_variable_noparams:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extraneous 'template<>' in declaration of variable (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: extraneous 'template<>' in declaration of variable %0
err_templated_invalid_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a static_assert declaration cannot be a template
  SFINAE: SFINAE_SubstitutionFailure
  Text: a static_assert declaration cannot be a template
err_templated_using_directive_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot template a using (?:directive|declaration)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot template a using %select{directive|declaration}0
err_tentative_def_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: tentative definition has type (.*) that is never completed
  SFINAE: SFINAE_SubstitutionFailure
  Text: tentative definition has type %0 that is never completed
err_test_module_file_extension_format:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: -ftest-module-file-extension argument '(.*)' is not of the required form 'blockname:major:minor:hashed:user info'
  SFINAE: SFINAE_SubstitutionFailure
  Text: -ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
err_test_module_file_extension_version:
  ArgsCount: 5
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: test module file extension '(.*)' has different version \((.*)\.(.*)\) than expected \((.*)\.(.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
err_this_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''this'' cannot be (?:implicitly |)captured in this context'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''this'' cannot be %select{implicitly |}0captured in this context'
err_this_captured_by_reference:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''this'' cannot be captured by reference'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''this'' cannot be captured by reference'
err_this_static_member_func:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''this'' cannot be(?:| implicitly) used in a static member function declaration'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''this'' cannot be%select{| implicitly}0 used in a static member function declaration'
err_thread_dynamic_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: initializer for thread-local variable must be a constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer for thread-local variable must be a constant expression
err_thread_non_global:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' variables must have global storage'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' variables must have global storage'
err_thread_non_thread:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: thread-local declaration of (.*) follows non-thread-local declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: thread-local declaration of %0 follows non-thread-local declaration
err_thread_nontrivial_dtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of thread-local variable has non-trivial destruction
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of thread-local variable has non-trivial destruction
err_thread_thread_different_kind:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: thread-local declaration of (.*) with (?:static|dynamic) initialization follows declaration with (?:dynamic|static) initialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
err_thread_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: thread-local storage is not supported for the current target
  SFINAE: SFINAE_SubstitutionFailure
  Text: thread-local storage is not supported for the current target
err_three_way_vector_comparison:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: three-way comparison between vectors is not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: three-way comparison between vectors is not supported
err_throw_abstract_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot throw an object of abstract type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot throw an object of abstract type %0
err_throw_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot throw object of incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot throw object of incomplete type %0
err_throw_incomplete_ptr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot throw pointer to object of incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot throw pointer to object of incomplete type %0
err_throw_sizeless:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot throw object of sizeless type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot throw object of sizeless type %0
err_tls_var_aligned_over_maximum:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: alignment \((.*)\) of thread-local variable (.*) is greater than the maximum supported alignment \((.*)\) for a thread-local variable on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
err_too_few_args_in_macro_invoc:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too few arguments provided to function-like macro invocation
  SFINAE: SFINAE_SubstitutionFailure
  Text: too few arguments provided to function-like macro invocation
err_too_large_for_fixed_point:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: this value is too large for this fixed point type
  SFINAE: SFINAE_SubstitutionFailure
  Text: this value is too large for this fixed point type
err_too_many_args_in_macro_invoc:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too many arguments provided to function-like macro invocation
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many arguments provided to function-like macro invocation
err_toomany_element_decls:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only one element declaration is allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: only one element declaration is allowed
err_trailing_requires_clause_on_deduction_guide:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: deduction guide cannot have a requires clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: deduction guide cannot have a requires clause
err_trailing_return_in_parens:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: trailing return type may not be nested within parentheses
  SFINAE: SFINAE_SubstitutionFailure
  Text: trailing return type may not be nested within parentheses
err_trailing_return_without_auto:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function with trailing return type must specify return type 'auto', not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: function with trailing return type must specify return type 'auto', not %0
err_two_right_angle_brackets_need_space:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a space is required between consecutive right angle brackets \(use '> >'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: a space is required between consecutive right angle brackets (use '> >')
err_type_constraint_missing_arguments:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) requires more than 1 template argument; provide the remaining arguments explicitly to use it here
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 requires more than 1 template argument; provide the remaining arguments explicitly to use it here'
err_type_constraint_non_type_concept:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: concept named in type constraint is not a type concept
  SFINAE: SFINAE_SubstitutionFailure
  Text: concept named in type constraint is not a type concept
err_type_defined_in_alias_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be defined in a type alias template
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be defined in a type alias template'
err_type_defined_in_condition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be defined in a condition
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be defined in a condition'
err_type_defined_in_enum:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be defined in an enumeration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be defined in an enumeration'
err_type_defined_in_for_range:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: types may not be defined in a for range declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: types may not be defined in a for range declaration
err_type_defined_in_param_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be defined in a parameter type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be defined in a parameter type'
err_type_defined_in_result_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be defined in the result type of a function
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be defined in the result type of a function'
err_type_defined_in_type_specifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) cannot be defined in a type specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 cannot be defined in a type specifier'
err_type_mismatch_continuation_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type of property (.*) in class extension does not match property type in primary class
  SFINAE: SFINAE_SubstitutionFailure
  Text: type of property %0 in class extension does not match property type in primary class
err_type_pack_element_out_of_bounds:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: a parameter pack may not be accessed at an out of bounds index
  SFINAE: SFINAE_SubstitutionFailure
  Text: a parameter pack may not be accessed at an out of bounds index
err_type_safety_unknown_flag:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid comparison flag (.*); use 'layout_compatible' or 'must_be_null'
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
err_type_tag_for_datatype_not_ice:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''type_tag_for_datatype'' attribute requires the initializer to be an (?:integer|integral) constant expression'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''type_tag_for_datatype'' attribute requires the initializer to be an %select{integer|integral}0 constant expression'
err_type_tag_for_datatype_too_large:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''type_tag_for_datatype'' attribute requires the initializer to be an (?:integer|integral) constant expression that can be represented by a 64 bit integer'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''type_tag_for_datatype'' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer'
err_type_trait_arity:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type trait requires (.*)(?:| or more) argument(?:|s); have (.*) arguments?
  SFINAE: SFINAE_SubstitutionFailure
  Text: type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
err_type_unsupported:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not supported on this target
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not supported on this target'
err_typecheck_address_of:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address of (?:bit-field|vector element|property expression|register variable|matrix element) requested
  SFINAE: SFINAE_SubstitutionFailure
  Text: address of %select{bit-field|vector element|property expression|register variable|matrix element}0 requested
err_typecheck_addrof_dtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: taking the address of a destructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: taking the address of a destructor
err_typecheck_addrof_temporary:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: taking the address of a temporary object of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: taking the address of a temporary object of type %0
err_typecheck_ambiguous_condition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion (?:from \$ to \$|between types) is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion %diff{from $ to $|between types}0,1 is ambiguous
err_typecheck_arc_assign_externally_retained:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable declared with 'objc_externally_retained' cannot be modified in ARC
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable declared with 'objc_externally_retained' cannot be modified in ARC
err_typecheck_arc_assign_self:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot assign to 'self' outside of a method in the init family
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot assign to 'self' outside of a method in the init family
err_typecheck_arc_assign_self_class_method:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot assign to 'self' in a class method
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot assign to 'self' in a class method
err_typecheck_arithmetic_incomplete_or_sizeless_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: arithmetic on a pointer to (?:an incomplete|sizeless) type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: arithmetic on a pointer to %select{an incomplete|sizeless}0 type %1
err_typecheck_arr_assign_enumeration:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
  SFINAE: SFINAE_SubstitutionFailure
  Text: fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
err_typecheck_array_not_modifiable_lvalue:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array type (.*) is not assignable
  SFINAE: SFINAE_SubstitutionFailure
  Text: array type %0 is not assignable
err_typecheck_assign_const:
  ArgsCount: 9
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:cannot assign to return value because function (.*) returns a const value|cannot assign to variable (.*) with const-qualified type (.*)|cannot assign to (?:non-|)static data member (.*) with const-qualified type (.*)|cannot assign to non-static data member within const member function (.*)|cannot assign to (?:variable (.*)|non-static data member (.*)|lvalue) with (?:|nested )const-qualified data member (.*)|read-only variable is not assignable)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0'
err_typecheck_bool_condition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: value of type (.*) is not contextually convertible to 'bool'
  SFINAE: SFINAE_SubstitutionFailure
  Text: value of type %0 is not contextually convertible to 'bool'
err_typecheck_call_different_arg_types:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'arguments are of different types(?: \(\$ vs \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: arguments are of different types%diff{ ($ vs $)|}0,1
err_typecheck_call_invalid_ordered_compare:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'ordered compare requires two args of floating point type(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
err_typecheck_call_invalid_unary_fp:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: floating point classification requires argument of floating point type \(passed in (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: floating point classification requires argument of floating point type (passed in %0)
err_typecheck_call_not_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: called object type (.*) is not a function or function pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: called object type %0 is not a function or function pointer
err_typecheck_call_requires_real_fp:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument type (.*) is not a real floating point type
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument type %0 is not a real floating point type
err_typecheck_call_too_few_args:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too few (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected (.*), have (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
err_typecheck_call_too_few_args_at_least:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too few (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected at least (.*), have (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
err_typecheck_call_too_few_args_at_least_one:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too few (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, at least argument (.*) must be specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
err_typecheck_call_too_few_args_at_least_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too few (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected at least (.*), have (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
err_typecheck_call_too_few_args_one:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too few (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, single argument (.*) was not specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
err_typecheck_call_too_few_args_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too few (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected (.*), have (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
err_typecheck_call_too_many_args:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too many (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected (.*), have (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
err_typecheck_call_too_many_args_at_most:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too many (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected at most (.*), have (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
err_typecheck_call_too_many_args_at_most_one:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too many (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected at most single argument (.*), have (.*) arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
err_typecheck_call_too_many_args_at_most_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too many (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected at most (.*), have (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
err_typecheck_call_too_many_args_one:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too many (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected single argument (.*), have (.*) arguments
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
err_typecheck_call_too_many_args_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: too many (?:|||execution configuration )arguments to (?:function|block|method|kernel function) call, expected (.*), have (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
err_typecheck_cast_to_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cast to incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cast to incomplete type %0
err_typecheck_cast_to_union_no_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cast to union type from type (.*) not present in union
  SFINAE: SFINAE_SubstitutionFailure
  Text: cast to union type from type %0 not present in union
err_typecheck_choose_expr_requires_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''__builtin_choose_expr'' requires a constant expression'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''__builtin_choose_expr'' requires a constant expression'
err_typecheck_comparison_of_distinct_blocks:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'comparison of distinct block types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: comparison of distinct block types%diff{ ($ and $)|}0,1
err_typecheck_comparison_of_distinct_pointers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'comparison of distinct pointer types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: comparison of distinct pointer types%diff{ ($ and $)|}0,1
err_typecheck_comparison_of_fptr_to_void:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: equality comparison between function pointer and void pointer \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: equality comparison between function pointer and void pointer (%0 and %1)
err_typecheck_comparison_of_pointer_integer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: comparison between pointer and integer \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: comparison between pointer and integer (%0 and %1)
err_typecheck_cond_expect_int_float:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: used type (.*) where integer or floating point type is required
  SFINAE: SFINAE_SubstitutionFailure
  Text: used type %0 where integer or floating point type is required
err_typecheck_cond_expect_nonfloat:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: used type (.*) where floating point type is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: used type %0 where floating point type is not allowed
err_typecheck_cond_expect_scalar:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: used type (.*) where arithmetic or pointer type is required
  SFINAE: SFINAE_SubstitutionFailure
  Text: used type %0 where arithmetic or pointer type is required
err_typecheck_cond_incompatible_operands:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'incompatible operand types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible operand types%diff{ ($ and $)|}0,1
err_typecheck_cond_incompatible_operands_null:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-pointer operand type (.*) incompatible with (?:NULL|nullptr)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
err_typecheck_convert_discards_qualifiers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) discards qualifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers'
err_typecheck_convert_incompatible:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:(?:assigning to \$ from incompatible type \$|assigning to type from incompatible type)|(?:passing \$ to parameter of incompatible type \$|passing type to parameter of incompatible type)|(?:returning \$ from a function with incompatible result type \$|returning type from a function with incompatible result type)|(?:converting \$ to incompatible type \$|converting type to incompatible type)|(?:initializing \$ with an expression of incompatible type \$|initializing type with an expression of incompatible type)|(?:sending \$ to parameter of incompatible type \$|sending type to parameter of incompatible type)|(?:casting \$ to incompatible type \$|casting type to incompatible type))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)(?:|: different classes(?: \(\$ vs \$\)|)|: different number of parameters \((.*) vs (.*)\)|: type mismatch at \d+(?:st|nd|rd|th) parameter(?: \(\$ vs \$\)|)|: different return type(?: \(\$ vs \$\)|)|: different qualifiers \((.*) vs (.*)\)|: different exception specifications)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4'
err_typecheck_convert_incompatible_block_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible block pointer types (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
err_typecheck_convert_incompatible_function_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible function pointer types (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
err_typecheck_convert_incompatible_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible pointer types (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
err_typecheck_convert_incompatible_pointer_sign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) converts between pointers to integer types (?:with different sign|where one is of the unique plain 'char' type and the other is not)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain ''char'' type and the other is not}3'
err_typecheck_convert_int_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible integer to pointer conversion (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
err_typecheck_convert_pointer_int:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incompatible pointer to integer conversion (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
err_typecheck_convert_pointer_void_func:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) converts between void pointer and function pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer'
err_typecheck_converted_constant_expression:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: value of type (.*) is not implicitly convertible to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: value of type %0 is not implicitly convertible to %1
err_typecheck_converted_constant_expression_disallowed:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion from (.*) to (.*) is not allowed in a converted constant expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion from %0 to %1 is not allowed in a converted constant expression
err_typecheck_converted_constant_expression_indirect:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion from (.*) to (.*) in converted constant expression would bind reference to a temporary
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion from %0 to %1 in converted constant expression would bind reference to a temporary
err_typecheck_decl_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable has incomplete type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable has incomplete type %0
err_typecheck_deleted_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion function (?:from \$ to \$|between types) invokes a deleted function
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
err_typecheck_duplicate_vector_components_not_mlvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vector is not assignable \(contains duplicate components\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: vector is not assignable (contains duplicate components)
err_typecheck_expect_flt_or_vector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid operand of type (.*) where floating, complex or a vector of such types is required
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid operand of type %0 where floating, complex or a vector of such types is required
err_typecheck_expect_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: used type (.*) where integer is required
  SFINAE: SFINAE_SubstitutionFailure
  Text: used type %0 where integer is required
err_typecheck_expect_scalar_operand:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: operand of type (.*) where arithmetic or pointer type is required
  SFINAE: SFINAE_SubstitutionFailure
  Text: operand of type %0 where arithmetic or pointer type is required
err_typecheck_expression_not_modifiable_lvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: expression is not assignable
  SFINAE: SFINAE_SubstitutionFailure
  Text: expression is not assignable
err_typecheck_field_variable_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'fields must have a constant size: ''variable length array in structure'' extension will never be supported'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'fields must have a constant size: ''variable length array in structure'' extension will never be supported'
err_typecheck_illegal_increment_decrement:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot (?:decrement|increment) value of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot %select{decrement|increment}1 value of type %0
err_typecheck_incompatible_address_space:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning \$ to \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) changes address space of pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer'
err_typecheck_incompatible_nested_address_space:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning \$ to \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) changes address space of nested pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of nested pointer'
err_typecheck_incompatible_ownership:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:(?:assigning \$ to \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) changes retain/release properties of pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer'
err_typecheck_incomplete_array_needs_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of variable with array type needs an explicit size or an initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of variable with array type needs an explicit size or an initializer
err_typecheck_incomplete_tag:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete definition of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete definition of type %0
err_typecheck_incomplete_type_not_modifiable_lvalue:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete type (.*) is not assignable
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete type %0 is not assignable
err_typecheck_indirection_requires_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: indirection requires pointer operand \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: indirection requires pointer operand (%0 invalid)
err_typecheck_invalid_lvalue_addrof:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot take the address of an rvalue of type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot take the address of an rvalue of type %0
err_typecheck_invalid_lvalue_addrof_addrof_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: extra '&' taking address of overloaded function
  SFINAE: SFINAE_SubstitutionFailure
  Text: extra '&' taking address of overloaded function
err_typecheck_invalid_operands:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid operands to binary expression \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid operands to binary expression (%0 and %1)
err_typecheck_invalid_restrict_invalid_pointee:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: pointer to function type (.*) may not be 'restrict' qualified
  SFINAE: SFINAE_SubstitutionFailure
  Text: pointer to function type %0 may not be 'restrict' qualified
err_typecheck_invalid_restrict_not_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: restrict requires a pointer or reference \((.*) is invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: restrict requires a pointer or reference (%0 is invalid)
err_typecheck_invalid_restrict_not_pointer_noarg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: restrict requires a pointer or reference
  SFINAE: SFINAE_SubstitutionFailure
  Text: restrict requires a pointer or reference
err_typecheck_ivar_variable_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: instance variables must have a constant size
  SFINAE: SFINAE_SubstitutionFailure
  Text: instance variables must have a constant size
err_typecheck_logical_vector_expr_gnu_cpp_restrict:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: logical expression with vector (?:type (.*) and non-vector type (.*)|types (.*) and (.*)) is only supported in C\+\+
  SFINAE: SFINAE_SubstitutionFailure
  Text: logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
err_typecheck_lvalue_casts_not_supported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: assignment to cast is illegal, lvalue casts are not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: assignment to cast is illegal, lvalue casts are not supported
err_typecheck_member_reference_arrow:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member reference type (.*) is not a pointer
  SFINAE: SFINAE_SubstitutionFailure
  Text: member reference type %0 is not a pointer
err_typecheck_member_reference_ivar:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not have a member named (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not have a member named %1'
err_typecheck_member_reference_ivar_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) does not have a member named (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 does not have a member named %1; did you mean %2?'
err_typecheck_member_reference_struct_union:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member reference base type (.*) is not a structure or union
  SFINAE: SFINAE_SubstitutionFailure
  Text: member reference base type %0 is not a structure or union
err_typecheck_member_reference_suggestion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: member reference type (.*) is (?:a|not a) pointer; did you mean to use '(?:->|\.)'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
err_typecheck_member_reference_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot refer to type member (.*) in (.*) with '(?:\.|->)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot refer to type member %0 in %1 with '%select{.|->}2'
err_typecheck_member_reference_unknown:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot refer to member (.*) in (.*) with '(?:\.|->)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot refer to member %0 in %1 with '%select{.|->}2'
err_typecheck_missing_return_type_incompatible:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:return type \$ must match previous return type \$|return type must match previous return type) when (?:block literal|lambda expression) has unspecified explicit return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type'
err_typecheck_negative_array_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array size is negative
  SFINAE: SFINAE_SubstitutionFailure
  Text: array size is negative
err_typecheck_non_object_not_modifiable_lvalue:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-object type (.*) is not assignable
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-object type %0 is not assignable
err_typecheck_nonviable_condition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'no viable conversion(?:(?: from \$ to \$|)|(?: from returned value of type \$ to function return type \$|))'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
err_typecheck_nonviable_condition_incomplete:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'no viable conversion(?: from \$ to incomplete type \$|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no viable conversion%diff{ from $ to incomplete type $|}0,1
err_typecheck_op_on_nonoverlapping_address_space_pointers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:comparison between (?: \(\$ and \$\)|)|arithmetic operation with operands of type (?: \(\$ and \$\)|)|conditional operator with the second and third operands of type (?: \(\$ and \$\)|)) which are pointers to non-overlapping address spaces'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces'
err_typecheck_ordered_comparison_of_function_pointers:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ordered comparison of function pointers \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ordered comparison of function pointers (%0 and %1)
err_typecheck_ordered_comparison_of_pointer_and_zero:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ordered comparison between pointer and zero \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ordered comparison between pointer and zero (%0 and %1)
err_typecheck_pointer_arith_function_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'arithmetic on(?: a|) pointer(?:|s) to(?: the|) function type(?:|s) (.*)(?:| and (.*))'
  SFINAE: SFINAE_SubstitutionFailure
  Text: arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
err_typecheck_pointer_arith_void_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'arithmetic on(?: a|) pointer(?:|s) to void'
  SFINAE: SFINAE_SubstitutionFailure
  Text: arithmetic on%select{ a|}0 pointer%select{|s}0 to void
err_typecheck_sclass_fscope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal storage class on file-scoped variable
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal storage class on file-scoped variable
err_typecheck_sclass_func:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal storage class on function
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal storage class on function
err_typecheck_statement_requires_integer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: statement requires expression of integer type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: statement requires expression of integer type (%0 invalid)
err_typecheck_statement_requires_scalar:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: statement requires expression of scalar type \((.*) invalid\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: statement requires expression of scalar type (%0 invalid)
err_typecheck_sub_ptr_compatible:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:\$ and \$ are not pointers to compatible types|pointers to incompatible types)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1'
err_typecheck_subscript_not_integer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array subscript is not an integer
  SFINAE: SFINAE_SubstitutionFailure
  Text: array subscript is not an integer
err_typecheck_subscript_value:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: subscripted value is not an array, pointer, or vector
  SFINAE: SFINAE_SubstitutionFailure
  Text: subscripted value is not an array, pointer, or vector
err_typecheck_sve_ambiguous:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous (%0 and %1)
err_typecheck_sve_gnu_ambiguous:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot combine GNU and SVE vectors in expression, result is ambiguous \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot combine GNU and SVE vectors in expression, result is ambiguous (%0 and %1)
err_typecheck_three_way_comparison_of_pointer_and_zero:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: three-way comparison between pointer and zero
  SFINAE: SFINAE_SubstitutionFailure
  Text: three-way comparison between pointer and zero
err_typecheck_unary_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid argument type (.*) to unary expression
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid argument type %0 to unary expression
err_typecheck_vector_lengths_not_equal:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: vector operands do not have the same number of elements \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: vector operands do not have the same number of elements (%0 and %1)
err_typecheck_vector_not_convertable:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot convert between vector values of different size \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot convert between vector values of different size (%0 and %1)
err_typecheck_vector_not_convertable_implict_truncation:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot convert between (?:scalar|vector) type (.*) and vector type (.*) as implicit conversion would cause truncation
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
err_typecheck_vector_not_convertable_non_scalar:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot convert between vector and non-scalar values \((.*) and (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot convert between vector and non-scalar values (%0 and %1)
err_typecheck_zero_array_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: zero-length arrays are not permitted in (?:C\+\+|SYCL device code)
  SFINAE: SFINAE_SubstitutionFailure
  Text: zero-length arrays are not permitted in %select{C++|SYCL device code}0
err_typedef_changes_linkage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unsupported: anonymous type given name for linkage purposes by (?:typedef|alias) declaration after its linkage was computed; add a tag name here to establish linkage prior to definition'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unsupported: anonymous type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition'
err_typedef_not_bitfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typedef member (.*) cannot be a bit-field
  SFINAE: SFINAE_SubstitutionFailure
  Text: typedef member %0 cannot be a bit-field
err_typedef_not_identifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typedef name must be an identifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: typedef name must be an identifier
err_typename_identifiers_only:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typename is allowed for identifiers only
  SFINAE: SFINAE_SubstitutionFailure
  Text: typename is allowed for identifiers only
err_typename_invalid_constexpr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type name does not allow (?:<ERROR>|constexpr|consteval|constinit) specifier to be specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: type name does not allow %sub{select_constexpr_spec_kind}0 specifier to be specified
err_typename_invalid_functionspec:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type name does not allow function specifier to be specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: type name does not allow function specifier to be specified
err_typename_invalid_storageclass:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type name does not allow storage class to be specified
  SFINAE: SFINAE_SubstitutionFailure
  Text: type name does not allow storage class to be specified
err_typename_missing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing 'typename' prior to dependent type name '(.*)(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing 'typename' prior to dependent type name '%0%1'
err_typename_missing_template:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing 'typename' prior to dependent type template name '(.*)(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing 'typename' prior to dependent type template name '%0%1'
err_typename_nested_not_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no type named (.*) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: no type named %0 in %1
err_typename_nested_not_found_enable_if:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no type named 'type' in (.*); 'enable_if' cannot be used to disable this declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
err_typename_nested_not_found_requirement:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: failed requirement '(.*)'; 'enable_if' cannot be used to disable this declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
err_typename_nested_not_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typename specifier refers to non-type member (.*) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: typename specifier refers to non-type member %0 in %1
err_typename_not_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typename specifier refers to non-type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: typename specifier refers to non-type %0
err_typename_refers_to_non_type_template:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typename specifier refers to a non-type template
  SFINAE: SFINAE_SubstitutionFailure
  Text: typename specifier refers to a non-type template
err_typename_refers_to_using_value_decl:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: typename specifier refers to a dependent using declaration for a value (.*) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: typename specifier refers to a dependent using declaration for a value %0 in %1
err_typename_requires_specqual:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type name requires a specifier or qualifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: type name requires a specifier or qualifier
err_ucn_control_character:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: universal character name refers to a control character
  SFINAE: SFINAE_SubstitutionFailure
  Text: universal character name refers to a control character
err_ucn_escape_basic_scs:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: character '(.*)' cannot be specified by a universal character name
  SFINAE: SFINAE_SubstitutionFailure
  Text: character '%0' cannot be specified by a universal character name
err_ucn_escape_incomplete:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: incomplete universal character name
  SFINAE: SFINAE_SubstitutionFailure
  Text: incomplete universal character name
err_ucn_escape_invalid:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid universal character
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid universal character
err_unable_to_make_temp:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to make temporary file: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to make temporary file: %0'
err_unable_to_rename_temp:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unable to rename temporary ''(.*)'' to output file ''(.*)'': ''(.*)'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unable to rename temporary ''%0'' to output file ''%1'': ''%2'''
err_unavailable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is unavailable
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is unavailable'
err_unavailable_in_arc:
  ArgsCount: 1
  CategoryName: ARC Restrictions
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is unavailable in ARC
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is unavailable in ARC'
err_unavailable_message:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(.*) is unavailable: (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is unavailable: %1'
err_uncasted_call_of_unknown_any:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has unknown return type; cast the call to its declared return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 has unknown return type; cast the call to its declared return type'
err_uncasted_send_to_unknown_any_method:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no known method (?:(.*)|(.*)); cast the message send to the method's return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
err_uncasted_use_of_unknown_any:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has unknown type; cast it to its declared type to use it
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 has unknown type; cast it to its declared type to use it'
err_undeclared_boxing_method:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration of (.*) is missing in (.*) class
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration of %0 is missing in %1 class
err_undeclared_destructor_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: undeclared identifier (.*) in destructor name
  SFINAE: SFINAE_SubstitutionFailure
  Text: undeclared identifier %0 in destructor name
err_undeclared_label_use:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of undeclared label (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of undeclared label %0
err_undeclared_objc_literal_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: definition of class (.*) must be available to use Objective-C (?:array literals|dictionary literals|numeric literals|boxed expressions|string literals)
  SFINAE: SFINAE_SubstitutionFailure
  Text: definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
err_undeclared_protocol:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find protocol declaration for (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find protocol declaration for %0
err_undeclared_protocol_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find protocol declaration for (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find protocol declaration for %0; did you mean %1?
err_undeclared_use:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of undeclared (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of undeclared %0
err_undeclared_use_of_module:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module (.*) does not depend on a module exporting '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: module %0 does not depend on a module exporting '%1'
err_undeclared_use_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of undeclared (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of undeclared %0; did you mean %1?
err_undeclared_var_use:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of undeclared identifier (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of undeclared identifier %0
err_undeclared_var_use_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of undeclared identifier (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of undeclared identifier %0; did you mean %1?
err_undef_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find interface declaration for (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find interface declaration for %0
err_undef_interface_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find interface declaration for (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find interface declaration for %0; did you mean %1?
err_undef_superclass:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find interface declaration for (.*), superclass of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find interface declaration for %0, superclass of %1
err_undef_superclass_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find interface declaration for (.*), superclass of (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find interface declaration for %0, superclass of %1; did you mean %2?
err_undefined_inline_var:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: inline variable (.*) is not defined
  SFINAE: SFINAE_SubstitutionFailure
  Text: inline variable %q0 is not defined
err_undefined_internal_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:function|variable) (.*) is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage'
err_underlying_type_of_incomplete_enum:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot determine underlying type of incomplete enumeration type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot determine underlying type of incomplete enumeration type %0
err_unexpanded_parameter_pack:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block|type constraint|requirement|requires clause) contains(?: an|) unexpanded parameter pack(?:| (.*)|s (.*) and (.*)|s (.*), (.*), \.\.\.)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block|type constraint|requirement|requires clause}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1'
err_unexpected_at:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected '@' in program
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected '@' in program
err_unexpected_colon_in_nested_name_spec:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected ':' in nested name specifier; did you mean '::'\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected ':' in nested name specifier; did you mean '::'?
err_unexpected_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: friends can only be classes or functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: friends can only be classes or functions
err_unexpected_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unexpected interface name (.*): expected expression'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unexpected interface name %0: expected expression'
err_unexpected_module_decl:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: module declaration can only appear at the top level
  SFINAE: SFINAE_SubstitutionFailure
  Text: module declaration can only appear at the top level
err_unexpected_namespace:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unexpected namespace name (.*): expected expression'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unexpected namespace name %0: expected expression'
err_unexpected_namespace_attributes_alias:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attributes cannot be specified on namespace alias
  SFINAE: SFINAE_SubstitutionFailure
  Text: attributes cannot be specified on namespace alias
err_unexpected_nested_namespace_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attributes cannot be specified on a nested namespace definition
  SFINAE: SFINAE_SubstitutionFailure
  Text: attributes cannot be specified on a nested namespace definition
err_unexpected_protocol_qualifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '@implementation declaration cannot be protocol qualified'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '@implementation declaration cannot be protocol qualified'
err_unexpected_scope_on_base_decltype:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected namespace scope prior to decltype
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected namespace scope prior to decltype
err_unexpected_semi:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unexpected ';' before (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: unexpected ';' before %0
err_unexpected_template_after_using:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''template'' keyword not permitted after ''using'' keyword'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''template'' keyword not permitted after ''using'' keyword'
err_unexpected_template_in_destructor_name:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''template'' keyword not permitted in destructor name'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''template'' keyword not permitted in destructor name'
err_unexpected_template_in_unqualified_id:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''template'' keyword not permitted here'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''template'' keyword not permitted here'
err_unexpected_token_in_nested_name_spec:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' cannot be a part of nested name specifier; did you mean '':''\?'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' cannot be a part of nested name specifier; did you mean '':''?'
err_unexpected_typedef:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unexpected type name (.*): expected expression'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unexpected type name %0: expected expression'
err_unexpected_typedef_ident:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'unexpected type name (.*): expected identifier'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'unexpected type name %0: expected identifier'
err_unexpected_unqualified_id:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: type-id cannot have a name
  SFINAE: SFINAE_SubstitutionFailure
  Text: type-id cannot have a name
err_unimplemented_conversion_with_fixed_point_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: conversion between fixed point and (.*) is not yet supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: conversion between fixed point and %0 is not yet supported
err_uninitialized_member_for_assign:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot define the implicit copy assignment operator for (.*), because non-static (?:reference|const) member (.*) cannot use copy assignment operator
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
err_uninitialized_member_in_ctor:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:constructor for (.*)|implicit default constructor for (.*)|cannot use constructor inherited from (.*):) must explicitly initialize the (?:reference|const) member (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3'
err_union_as_base_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unions cannot be base classes
  SFINAE: SFINAE_SubstitutionFailure
  Text: unions cannot be base classes
err_union_member_of_reference_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: union member (.*) has reference type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: union member %0 has reference type %1
err_unknown_analyzer_checker_or_package:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no analyzer checkers or packages are associated with '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: no analyzer checkers or packages are associated with '%0'
err_unknown_any_addrof:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: the address of a declaration with unknown type can only be cast to a pointer type
  SFINAE: SFINAE_SubstitutionFailure
  Text: the address of a declaration with unknown type can only be cast to a pointer type
err_unknown_any_addrof_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: address-of operator cannot be applied to a call to a function with unknown return type
  SFINAE: SFINAE_SubstitutionFailure
  Text: address-of operator cannot be applied to a call to a function with unknown return type
err_unknown_any_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function (.*) with unknown type must be given a function type
  SFINAE: SFINAE_SubstitutionFailure
  Text: function %0 with unknown type must be given a function type
err_unknown_any_var_function_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable (.*) with unknown type cannot be given a function type
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable %0 with unknown type cannot be given a function type
err_unknown_nested_typename_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no type named (.*) in (.*); did you mean (?:|simply )(.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no type named %0 in %1; did you mean %select{|simply }2%3?
err_unknown_receiver_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown receiver (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown receiver %0; did you mean %1?
err_unknown_template_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown template name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown template name %0
err_unknown_type_or_class_name_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown (?:type|class) name (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown %select{type|class}1 name %0; did you mean %2?
err_unknown_typename:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown type name (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown type name %0
err_unknown_typename_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unknown type name (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: unknown type name %0; did you mean %1?
err_unparenthesized_non_primary_expr_in_requires_clause:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: parentheses are required around this expression in a requires clause
  SFINAE: SFINAE_SubstitutionFailure
  Text: parentheses are required around this expression in a requires clause
err_unqualified_pointer_member_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: must explicitly qualify name of member function when taking its address
  SFINAE: SFINAE_SubstitutionFailure
  Text: must explicitly qualify name of member function when taking its address
err_unspecified_size_with_static:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''static'' may not be used without an array size'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''static'' may not be used without an array size'
err_unspecified_vla_size_with_static:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''static'' may not be used with an unspecified variable length array size'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''static'' may not be used with an unspecified variable length array size'
err_unsupported_abi_for_opt:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' can only be used with the ''(.*)'' ABI'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' can only be used with the ''%1'' ABI'
err_unsupported_ast_node:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot import unsupported AST node (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot import unsupported AST node %0
err_unsupported_bom:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) byte order mark detected in '(.*)', but encoding is not supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 byte order mark detected in ''%1'', but encoding is not supported'
err_unsupported_cxx_abi:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: None
  Regex: C\+\+ ABI '(.*)' is not supported on target triple '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: C++ ABI '%0' is not supported on target triple '%1'
err_unsupported_module_partition:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: sorry, module partitions are not yet supported
  SFINAE: SFINAE_SubstitutionFailure
  Text: sorry, module partitions are not yet supported
err_unsupported_placeholder_constraint:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: constrained placeholder types other than simple 'auto' on non-type template parameters not supported yet
  SFINAE: SFINAE_SubstitutionFailure
  Text: constrained placeholder types other than simple 'auto' on non-type template parameters not supported yet
err_unsupported_string_concat:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported non-standard concatenation of string literals
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported non-standard concatenation of string literals
err_unsupported_unknown_any_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: call to unsupported expression with unknown type
  SFINAE: SFINAE_SubstitutionFailure
  Text: call to unsupported expression with unknown type
err_unsupported_unknown_any_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) has unknown type, which is not supported for this kind of declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 has unknown type, which is not supported for this kind of declaration'
err_unsupported_unknown_any_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unsupported expression with unknown type
  SFINAE: SFINAE_SubstitutionFailure
  Text: unsupported expression with unknown type
err_unterm_macro_invoc:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unterminated function-like macro invocation
  SFINAE: SFINAE_SubstitutionFailure
  Text: unterminated function-like macro invocation
err_unterminated___pragma:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing terminating '\)' character
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing terminating ')' character
err_unterminated_block_comment:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unterminated /\* comment
  SFINAE: SFINAE_SubstitutionFailure
  Text: unterminated /* comment
err_unterminated_raw_string:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: raw string missing terminating delimiter \)(.*)"
  SFINAE: SFINAE_SubstitutionFailure
  Text: raw string missing terminating delimiter )%0"
err_upcast_to_inaccessible_base:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot cast (.*) to its (?:private|protected) base class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot cast %0 to its %select{private|protected}2 base class %1
err_use_continuation_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal redeclaration of property in class extension (.*) \(attribute must be 'readwrite', while its primary must be 'readonly'\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
err_use_continuation_class_redeclaration_readwrite:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: illegal redeclaration of 'readwrite' property in class extension (.*) \(perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property\?\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
err_use_of_default_argument_to_function_declared_later:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of default argument to function (.*) that is declared later in class (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of default argument to function %0 that is declared later in class %1
err_use_of_empty_using_if_exists:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to unresolved using declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to unresolved using declaration
err_use_of_tag_name_without_tag:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Error
  Group: None
  Regex: must use '(.*)' tag to refer to type (.*)(?:| in this scope)
  SFINAE: SFINAE_SubstitutionFailure
  Text: must use '%1' tag to refer to type %0%select{| in this scope}2
err_use_with_wrong_tag:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of (.*) with tag type that does not match previous declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of %0 with tag type that does not match previous declaration
err_using_attribute_ns_conflict:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: attribute with scope specifier cannot follow default scope specifier
  SFINAE: SFINAE_SubstitutionFailure
  Text: attribute with scope specifier cannot follow default scope specifier
err_using_decl_can_not_refer_to_class_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration cannot refer to class member
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration cannot refer to class member
err_using_decl_can_not_refer_to_namespace:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration cannot refer to a namespace
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration cannot refer to a namespace
err_using_decl_conflict:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: target of using declaration conflicts with declaration already in scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: target of using declaration conflicts with declaration already in scope
err_using_decl_conflict_reverse:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: declaration conflicts with target of using declaration already in scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: declaration conflicts with target of using declaration already in scope
err_using_decl_constructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration cannot refer to a constructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration cannot refer to a constructor
err_using_decl_constructor_not_in_direct_base:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) is not a direct base of (.*), cannot inherit constructors
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 is not a direct base of %1, cannot inherit constructors'
err_using_decl_destructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration cannot refer to a destructor
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration cannot refer to a destructor
err_using_decl_friend:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot befriend target of using declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot befriend target of using declaration
err_using_decl_nested_name_specifier_is_current_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration refers to its own class
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration refers to its own class
err_using_decl_nested_name_specifier_is_not_base_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration refers into '(.*)', which is not a base class of (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration refers into '%0', which is not a base class of %1
err_using_decl_nested_name_specifier_is_not_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration in class refers into '(.*)', which is not a class
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration in class refers into '%0', which is not a class
err_using_decl_redeclaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration of using declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration of using declaration
err_using_decl_redeclaration_expansion:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration pack expansion at block scope produces multiple values
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration pack expansion at block scope produces multiple values
err_using_decl_template_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration cannot refer to a template specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration cannot refer to a template specialization
err_using_dependent_value_is_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: dependent using declaration resolved to type without 'typename'
  SFINAE: SFINAE_SubstitutionFailure
  Text: dependent using declaration resolved to type without 'typename'
err_using_directive_member_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no namespace named (.*) in (.*); did you mean (?:|simply )(.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no namespace named %0 in %1; did you mean %select{|simply }2%3?
err_using_directive_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no namespace named (.*); did you mean (.*)\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no namespace named %0; did you mean %1?
err_using_enum_decl_redeclaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: redeclaration of using-enum declaration
  SFINAE: SFINAE_SubstitutionFailure
  Text: redeclaration of using-enum declaration
err_using_enum_is_dependent:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using-enum cannot name a dependent type
  SFINAE: SFINAE_SubstitutionFailure
  Text: using-enum cannot name a dependent type
err_using_if_exists_on_ctor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''using_if_exists'' attribute cannot be applied to an inheriting constructor'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''using_if_exists'' attribute cannot be applied to an inheriting constructor'
err_using_namespace_in_class:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''using namespace'' is not allowed in classes'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''using namespace'' is not allowed in classes'
err_using_pack_expansion_empty:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:|member) using declaration (.*) instantiates to an empty pack
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{|member}0 using declaration %1 instantiates to an empty pack'
err_using_requires_qualname:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: using declaration requires a qualified name
  SFINAE: SFINAE_SubstitutionFailure
  Text: using declaration requires a qualified name
err_using_typename_non_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''typename'' keyword used on a non-type'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''typename'' keyword used on a non-type'
err_uuidof_with_multiple_guids:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot call operator __uuidof on a type with multiple GUIDs
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot call operator __uuidof on a type with multiple GUIDs
err_uuidof_without_guid:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot call operator __uuidof on a type with no GUID
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot call operator __uuidof on a type with no GUID
err_va_arg_in_device:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CUDA device code does not support va_arg
  SFINAE: SFINAE_SubstitutionFailure
  Text: CUDA device code does not support va_arg
err_va_start_captured_stmt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''va_start'' cannot be used in a captured statement'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''va_start'' cannot be used in a captured statement'
err_va_start_fixed_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''va_start'' used in function with fixed args'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''va_start'' used in function with fixed args'
err_va_start_outside_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''va_start'' cannot be used outside a function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''va_start'' cannot be used outside a function'
err_va_start_used_in_wrong_abi_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''va_start'' used in (?:System V|Win64) ABI function'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''va_start'' used in %select{System V|Win64}0 ABI function'
err_value_init_for_array_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: array types cannot be value-initialized
  SFINAE: SFINAE_SubstitutionFailure
  Text: array types cannot be value-initialized
err_vaopt_paste_at_end:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''##'' cannot appear at end of __VA_OPT__ argument'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''##'' cannot appear at end of __VA_OPT__ argument'
err_vaopt_paste_at_start:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''##'' cannot appear at start of __VA_OPT__ argument'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''##'' cannot appear at start of __VA_OPT__ argument'
err_var_partial_spec_redeclared:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable template partial specialization (.*) cannot be redefined
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable template partial specialization %0 cannot be redefined
err_var_spec_no_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no variable template matches(?:| partial) specialization
  SFINAE: SFINAE_SubstitutionFailure
  Text: no variable template matches%select{| partial}0 specialization
err_var_spec_no_template_but_method:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: no variable template matches specialization; did you mean to use (.*) as function template instead\?
  SFINAE: SFINAE_SubstitutionFailure
  Text: no variable template matches specialization; did you mean to use %0 as function template instead?
err_variable_instantiates_to_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:variable|static data member) instantiated with function type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{variable|static data member}0 instantiated with function type %1'
err_variable_object_no_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable-sized object may not be initialized
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable-sized object may not be initialized
err_variably_modified_new_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''new'' cannot allocate object of variably modified type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''new'' cannot allocate object of variably modified type %0'
err_variably_modified_nontype_template_param:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-type template parameter of variably modified type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-type template parameter of variably modified type %0
err_variably_modified_template_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variably modified type (.*) cannot be used as a template argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: variably modified type %0 cannot be used as a template argument
err_variably_modified_typeid:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''typeid'' of variably modified type (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''typeid'' of variably modified type %0'
err_variadic_device_fn:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: CUDA device code does not support variadic functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: CUDA device code does not support variadic functions
err_vec_builtin_incompatible_vector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first two arguments to (.*) must have the same type
  SFINAE: SFINAE_SubstitutionFailure
  Text: first two arguments to %0 must have the same type
err_vec_builtin_non_vector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: first two arguments to (.*) must be vectors
  SFINAE: SFINAE_SubstitutionFailure
  Text: first two arguments to %0 must be vectors
err_vecstep_non_scalar_vector_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''vec_step'' requires built-in scalar or vector type, (.*) invalid'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''vec_step'' requires built-in scalar or vector type, %0 invalid'
err_vector_incorrect_num_initializers:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:too many|too few) elements in vector initialization \(expected (.*) elements, have (.*)\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)'
err_verify_ambiguous_marker:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: reference to marker '(.*)' is ambiguous
  SFINAE: SFINAE_SubstitutionFailure
  Text: reference to marker '%0' is ambiguous
err_verify_inconsistent_diags:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' diagnostics (?:expected|seen) but not (?:seen|expected): (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2'
err_verify_invalid_content:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'invalid expected (.*): (.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'invalid expected %0: %1'
err_verify_invalid_no_diags:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (?:expected|'expected-no-diagnostics') directive cannot follow (?:'expected-no-diagnostics' directive|other expected directives)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{expected|''expected-no-diagnostics''}0 directive cannot follow %select{''expected-no-diagnostics'' directive|other expected directives}0'
err_verify_invalid_range:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid range following '-' in expected (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid range following '-' in expected %0
err_verify_missing_end:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find end \('\}\}'\) of expected (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find end ('}}') of expected %0
err_verify_missing_file:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: file '(.*)' could not be located in expected (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: file '%0' could not be located in expected %1
err_verify_missing_line:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: missing or invalid line number following '@' in expected (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: missing or invalid line number following '@' in expected %0
err_verify_missing_regex:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find start of regex \('\{\{'\) in (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find start of regex ('{{') in %0
err_verify_missing_start:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: cannot find start \('\{\{'\) of expected (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: cannot find start ('{{') of expected %0
err_verify_no_directives:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'no expected directives found: consider use of ''expected-no-diagnostics'''
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'no expected directives found: consider use of ''expected-no-diagnostics'''
err_verify_no_such_marker:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: use of undefined marker '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: use of undefined marker '%0'
err_verify_nonconst_addrspace:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: None
  Regex: qualifier 'const' is needed for variables in address space '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: qualifier 'const' is needed for variables in address space '%0'
err_vftable_ambiguous_component:
  ArgsCount: 1
  CategoryName: VTable ABI Issue
  Class: CLASS_ERROR
  Component: AST
  DefaultSeverity: SEV_Error
  Group: None
  Regex: ambiguous vftable component for (.*) introduced via covariant thunks; this is an inherent limitation of the ABI
  SFINAE: SFINAE_SubstitutionFailure
  Text: ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
err_virt_specifier_outside_class:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''(.*)'' specifier is not allowed outside a class definition'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''%0'' specifier is not allowed outside a class definition'
err_virtual_in_union:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: unions cannot have virtual functions
  SFINAE: SFINAE_SubstitutionFailure
  Text: unions cannot have virtual functions
err_virtual_member_function_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''virtual'' cannot be specified on member function templates'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''virtual'' cannot be specified on member function templates'
err_virtual_non_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''virtual'' can only appear on non-static member functions'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''virtual'' can only appear on non-static member functions'
err_virtual_out_of_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''virtual'' can only be specified inside the class definition'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''virtual'' can only be specified inside the class definition'
err_vla_decl_has_extern_linkage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable length array declaration cannot have 'extern' linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable length array declaration cannot have 'extern' linkage
err_vla_decl_has_static_storage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable length array declaration cannot have 'static' storage duration
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable length array declaration cannot have 'static' storage duration
err_vla_decl_in_file_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable length array declaration not allowed at file scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable length array declaration not allowed at file scope
err_vla_in_sfinae:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable length array cannot be formed during template argument deduction
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable length array cannot be formed during template argument deduction
err_vla_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variable length arrays are not supported for the current target
  SFINAE: SFINAE_SubstitutionFailure
  Text: variable length arrays are not supported for the current target
err_vm_decl_has_extern_linkage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variably modified type declaration cannot have 'extern' linkage
  SFINAE: SFINAE_SubstitutionFailure
  Text: variably modified type declaration cannot have 'extern' linkage
err_vm_decl_in_file_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: variably modified type declaration not allowed at file scope
  SFINAE: SFINAE_SubstitutionFailure
  Text: variably modified type declaration not allowed at file scope
err_vm_func_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: function declaration cannot have variably modified type
  SFINAE: SFINAE_SubstitutionFailure
  Text: function declaration cannot have variably modified type
err_void_only_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''void'' must be the first and only parameter if specified'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''void'' must be the first and only parameter if specified'
err_void_param_qualified:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '''void'' as parameter must not have type qualifiers'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '''void'' as parameter must not have type qualifiers'
err_vsx_builtin_nonconstant_argument:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: argument (.*) to (.*) must be a 2-bit unsigned literal \(i\.e\. 0, 1, 2 or 3\)
  SFINAE: SFINAE_SubstitutionFailure
  Text: argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
err_weak_property:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: existing instance variable (.*) for __weak property (.*) must be __weak
  SFINAE: SFINAE_SubstitutionFailure
  Text: existing instance variable %1 for __weak property %0 must be __weak
err_wrong_sampler_addressspace:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: sampler type cannot be used with the __local and __global address space qualifiers
  SFINAE: SFINAE_SubstitutionFailure
  Text: sampler type cannot be used with the __local and __global address space qualifiers
err_x86_builtin_invalid_rounding:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: invalid rounding argument
  SFINAE: SFINAE_SubstitutionFailure
  Text: invalid rounding argument
err_x86_builtin_invalid_scale:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: scale argument must be 1, 2, 4, or 8
  SFINAE: SFINAE_SubstitutionFailure
  Text: scale argument must be 1, 2, 4, or 8
err_x86_builtin_tile_arg_duplicate:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: tile arguments must refer to different tiles
  SFINAE: SFINAE_SubstitutionFailure
  Text: tile arguments must refer to different tiles
err_zero_version:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_ERROR
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: None
  Regex: version number must have non-zero major, minor, or sub-minor version
  SFINAE: SFINAE_SubstitutionFailure
  Text: version number must have non-zero major, minor, or sub-minor version
error_cconv_unsupported:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: (.*) calling convention is not supported (?:for this target|on variadic function|on constructor/destructor|on builtin function)
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1'
error_duplicate_asm_operand_name:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: duplicate use of asm operand name "(.*)"
  SFINAE: SFINAE_SubstitutionFailure
  Text: duplicate use of asm operand name "%0"
error_inoutput_conflict_with_clobber:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: asm-specifier for input or output variable conflicts with asm clobber list
  SFINAE: SFINAE_SubstitutionFailure
  Text: asm-specifier for input or output variable conflicts with asm clobber list
error_subscript_overload:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: overloaded (.*) cannot have (?:no|a defaulted|more than one) parameter before C\+\+2b
  SFINAE: SFINAE_SubstitutionFailure
  Text: overloaded %0 cannot have %select{no|a defaulted|more than one}1 parameter before C++2b
escaped_newline_block_comment_end:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: comment
  Regex: escaped newline between \*/ characters at block comment end
  SFINAE: SFINAE_Suppress
  Text: escaped newline between */ characters at block comment end
ext_abstract_pack_declarator_parens:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: anonymous-pack-parens
  Regex: ISO C\+\+11 requires a parenthesized pack declaration to have a name
  SFINAE: SFINAE_Suppress
  Text: ISO C++11 requires a parenthesized pack declaration to have a name
ext_adl_only_template_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: use of function template name with no prior declaration in function call with explicit template arguments is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: use of function template name with no prior declaration in function call with explicit template arguments is a C++20 extension
ext_aggregate_init_not_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: initializer for aggregate is not a compile-time constant
  SFINAE: SFINAE_Suppress
  Text: initializer for aggregate is not a compile-time constant
ext_alias_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: alias declarations are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: alias declarations are a C++11 extension
ext_alias_in_init_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++2b-extensions
  Regex: alias declaration in this context is a C\+\+2b extension
  SFINAE: SFINAE_Suppress
  Text: alias declaration in this context is a C++2b extension
ext_alignof_expr:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: gnu-alignof-expression
  Regex: (.*) applied to an expression is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: '%0 applied to an expression is a GNU extension'
ext_anonymous_record_with_anonymous_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: nested-anon-types
  Regex: anonymous types declared in an anonymous (?:struct|union) are an extension
  SFINAE: SFINAE_Suppress
  Text: anonymous types declared in an anonymous %select{struct|union}0 are an extension
ext_anonymous_record_with_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: microsoft-anon-tag
  Regex: types declared in an anonymous (?:struct|union) are a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: types declared in an anonymous %select{struct|union}0 are a Microsoft extension
ext_anonymous_struct_union_qualified:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: anonymous (?:struct|union) cannot be '(.*)'
  SFINAE: SFINAE_Suppress
  Text: anonymous %select{struct|union}0 cannot be '%1'
ext_anonymous_union:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c11-extensions
  Regex: anonymous unions are a C11 extension
  SFINAE: SFINAE_Suppress
  Text: anonymous unions are a C11 extension
ext_array_init_copy:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-compound-literal-initializer
  Regex: initialization of an array (?:of type \$ from a compound literal of type \$|from a compound literal) is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
ext_array_init_parens:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: gnu-array-member-paren-init
  Regex: parenthesized initialization of a member array is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: parenthesized initialization of a member array is a GNU extension
ext_array_size_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-extensions
  Regex: implicit conversion from array size expression of type (.*) to (?:integral|enumeration) type (.*) is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ext_auto_new_list_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++17-extensions
  Regex: ISO C\+\+ standards before C\+\+17 do not allow new expression for type (.*) to use list-initialization
  SFINAE: SFINAE_Suppress
  Text: ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
ext_auto_storage_class:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: auto-storage-class
  Regex: '''auto'' storage class specifier is not permitted in C\+\+11, and will not be supported in future releases'
  SFINAE: SFINAE_Suppress
  Text: '''auto'' storage class specifier is not permitted in C++11, and will not be supported in future releases'
ext_auto_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-auto-type
  Regex: '''__auto_type'' is a GNU extension'
  SFINAE: SFINAE_Suppress
  Text: '''__auto_type'' is a GNU extension'
ext_auto_type_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: '''auto'' type specifier is a C\+\+11 extension'
  SFINAE: SFINAE_Suppress
  Text: '''auto'' type specifier is a C++11 extension'
ext_bad_cxx_cast_qualifiers_away_incoherent:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: cast-qual-unrelated
  Regex: ISO C\+\+ does not allow (?:const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|) from (.*) to (.*) because it casts away qualifiers, even though the source and destination types are unrelated
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
ext_binary_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: gnu-binary-literal
  Regex: binary integer literals are a GNU extension
  SFINAE: SFINAE_Suppress
  Text: binary integer literals are a GNU extension
ext_binary_literal_cxx14:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++14-binary-literal
  Regex: binary integer literals are a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: binary integer literals are a C++14 extension
ext_bit_int:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: bit-int-extension
  Regex: '''_BitInt'' in (?:C17 and earlier|C\+\+) is a Clang extension'
  SFINAE: SFINAE_Suppress
  Text: '''_BitInt'' in %select{C17 and earlier|C++}0 is a Clang extension'
ext_bitfield_member_init:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: default member initializer for bit-field is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: default member initializer for bit-field is a C++20 extension
ext_c11_anonymous_struct:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c11-extensions
  Regex: anonymous structs are a C11 extension
  SFINAE: SFINAE_Suppress
  Text: anonymous structs are a C11 extension
ext_c11_feature:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c11-extensions
  Regex: '''(.*)'' is a C11 extension'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is a C11 extension'
ext_c99_array_usage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: (?:qualifier in |static |)array size (?:||'\[\*\] ')is a C99 feature
  SFINAE: SFINAE_Suppress
  Text: '%select{qualifier in |static |}0array size %select{||''[*] ''}0is a C99 feature'
ext_c99_compound_literal:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: compound literals are a C99-specific feature
  SFINAE: SFINAE_Suppress
  Text: compound literals are a C99-specific feature
ext_c99_feature:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: '''(.*)'' is a C99 extension'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is a C99 extension'
ext_c99_flexible_array_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: flexible array members are a C99 feature
  SFINAE: SFINAE_Suppress
  Text: flexible array members are a C99 feature
ext_c99_longlong:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: long-long
  Regex: '''long long'' is an extension when C99 mode is not enabled'
  SFINAE: SFINAE_Suppress
  Text: '''long long'' is an extension when C99 mode is not enabled'
ext_c99_variable_decl_in_for_loop:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: variable declaration in for loop is a C99-specific feature
  SFINAE: SFINAE_Suppress
  Text: variable declaration in for loop is a C99-specific feature
ext_c99_whitespace_required_after_macro_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: c99-extensions
  Regex: ISO C99 requires whitespace after the macro name
  SFINAE: SFINAE_Suppress
  Text: ISO C99 requires whitespace after the macro name
ext_c_static_assert_no_message:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c2x-extensions
  Regex: '''_Static_assert'' with no message is a C2x extension'
  SFINAE: SFINAE_Suppress
  Text: '''_Static_assert'' with no message is a C2x extension'
ext_cannot_use_trivial_abi:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''trivial_abi'' cannot be applied to (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''trivial_abi'' cannot be applied to %0'
ext_cast_fn_obj:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: cast between pointer-to-function and pointer-to-object is an extension
  SFINAE: SFINAE_Suppress
  Text: cast between pointer-to-function and pointer-to-object is an extension
ext_cce_narrowing:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: c++11-narrowing
  Regex: (?:case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument) (?:cannot be narrowed from type (.*) to (.*)|evaluates to (.*), which cannot be narrowed to type (.*))
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1'
ext_charize_microsoft:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: microsoft-charize
  Regex: 'charizing operator #@ is a Microsoft extension'
  SFINAE: SFINAE_Suppress
  Text: 'charizing operator #@ is a Microsoft extension'
ext_clang_c_enum_fixed_underlying_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: fixed-enum-extension
  Regex: enumeration types with a fixed underlying type are a Clang extension
  SFINAE: SFINAE_Suppress
  Text: enumeration types with a fixed underlying type are a Clang extension
ext_clang_diagnose_if:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: gcc-compat
  Regex: '''diagnose_if'' is a clang extension'
  SFINAE: SFINAE_Suppress
  Text: '''diagnose_if'' is a clang extension'
ext_clang_enable_if:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: gcc-compat
  Regex: '''enable_if'' is a clang extension'
  SFINAE: SFINAE_Suppress
  Text: '''enable_if'' is a clang extension'
ext_comment_paste_microsoft:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: microsoft-comment-paste
  Regex: pasting two '/' tokens into a '//' comment is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: pasting two '/' tokens into a '//' comment is a Microsoft extension
ext_complex_component_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: complex-component-init
  Regex: complex initialization specifying real and imaginary components is an extension
  SFINAE: SFINAE_Suppress
  Text: complex initialization specifying real and imaginary components is an extension
ext_concept_legacy_bool_keyword:
  ArgsCount: 0
  CategoryName: Concepts Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: concepts-ts-compat
  Regex: ISO C\+\+20 does not permit the 'bool' keyword after 'concept'
  SFINAE: SFINAE_Suppress
  Text: ISO C++20 does not permit the 'bool' keyword after 'concept'
ext_consteval_if:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++2b-extensions
  Regex: consteval if is a C\+\+2b extension
  SFINAE: SFINAE_Suppress
  Text: consteval if is a C++2b extension
ext_constexpr_body_invalid_stmt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++14-extensions
  Regex: use of this statement in a constexpr (?:function|constructor) is a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
ext_constexpr_body_invalid_stmt_cxx20:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: use of this statement in a constexpr (?:function|constructor) is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: use of this statement in a constexpr %select{function|constructor}0 is a C++20 extension
ext_constexpr_body_multiple_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++14-extensions
  Regex: multiple return statements in constexpr function is a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: multiple return statements in constexpr function is a C++14 extension
ext_constexpr_ctor_missing_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: constexpr constructor that does not initialize all members is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: constexpr constructor that does not initialize all members is a C++20 extension
ext_constexpr_function_never_constant_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: invalid-constexpr
  Regex: (?:constexpr|consteval) (?:function|constructor) never produces a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{constexpr|consteval}1 %select{function|constructor}0 never produces a constant expression'
ext_constexpr_function_try_block_cxx20:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: function try block in constexpr (?:function|constructor) is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: function try block in constexpr %select{function|constructor}0 is a C++20 extension
ext_constexpr_if:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: constexpr if is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: constexpr if is a C++17 extension
ext_constexpr_local_var:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++14-extensions
  Regex: variable declaration in a constexpr (?:function|constructor) is a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
ext_constexpr_local_var_no_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: uninitialized variable in a constexpr (?:function|constructor) is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: uninitialized variable in a constexpr %select{function|constructor}0 is a C++20 extension
ext_constexpr_on_lambda_cxx17:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: '''constexpr'' on lambda expressions is a C\+\+17 extension'
  SFINAE: SFINAE_Suppress
  Text: '''constexpr'' on lambda expressions is a C++17 extension'
ext_constexpr_type_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++14-extensions
  Regex: type definition in a constexpr (?:function|constructor) is a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: type definition in a constexpr %select{function|constructor}0 is a C++14 extension
ext_constexpr_union_ctor_no_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: constexpr union constructor that does not initialize any member is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: constexpr union constructor that does not initialize any member is a C++20 extension
ext_constinit_missing:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-constinit
  Regex: '''constinit'' specifier missing on initializing declaration of (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''constinit'' specifier missing on initializing declaration of %0'
ext_ctrl_z_eof_microsoft:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: microsoft-end-of-file
  Regex: treating Ctrl-Z as end-of-file is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: treating Ctrl-Z as end-of-file is a Microsoft extension
ext_cxx11_attr_placement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: cxx-attribute-extension
  Regex: ISO C\+\+ does not allow an attribute list to appear here
  SFINAE: SFINAE_Suppress
  Text: ISO C++ does not allow an attribute list to appear here
ext_cxx11_enum_fixed_underlying_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++11-extensions
  Regex: enumeration types with a fixed underlying type are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: enumeration types with a fixed underlying type are a C++11 extension
ext_cxx11_longlong:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: c++11-long-long
  Regex: '''long long'' is a C\+\+11 extension'
  SFINAE: SFINAE_Suppress
  Text: '''long long'' is a C++11 extension'
ext_cxx14_attr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++14-attribute-extensions
  Regex: use of the (.*) attribute is a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: use of the %0 attribute is a C++14 extension
ext_cxx17_attr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++17-attribute-extensions
  Regex: use of the (.*) attribute is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: use of the %0 attribute is a C++17 extension
ext_cxx20_attr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++20-attribute-extensions
  Regex: use of the (.*) attribute is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: use of the %0 attribute is a C++20 extension
ext_cxx2b_size_t_suffix:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: c++2b-extensions
  Regex: '''size_t'' suffix for literals is a C\+\+2b extension'
  SFINAE: SFINAE_Suppress
  Text: '''size_t'' suffix for literals is a C++2b extension'
ext_cxx_designated_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++20-designator
  Regex: designated initializers are a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: designated initializers are a C++20 extension
ext_cxx_static_assert_no_message:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: '''static_assert'' with no message is a C\+\+17 extension'
  SFINAE: SFINAE_Suppress
  Text: '''static_assert'' with no message is a C++17 extension'
ext_decl_attrs_on_lambda:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++2b-extensions
  Regex: an attribute specifier sequence in this position is a C\+\+2b extension
  SFINAE: SFINAE_Suppress
  Text: an attribute specifier sequence in this position is a C++2b extension
ext_decltype_auto_type_specifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++14-extensions
  Regex: '''decltype\(auto\)'' type specifier is a C\+\+14 extension'
  SFINAE: SFINAE_Suppress
  Text: '''decltype(auto)'' type specifier is a C++14 extension'
ext_decomp_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: decomposition declarations are a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: decomposition declarations are a C++17 extension
ext_decomp_decl_cond:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: binding-in-condition
  Regex: ISO C\+\+17 does not permit structured binding declaration in a condition
  SFINAE: SFINAE_Suppress
  Text: ISO C++17 does not permit structured binding declaration in a condition
ext_decomp_decl_empty:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: empty-decomposition
  Regex: ISO C\+\+17 does not allow a decomposition group to be empty
  SFINAE: SFINAE_Suppress
  Text: ISO C++17 does not allow a decomposition group to be empty
ext_decomp_decl_spec:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: decomposition declaration declared (?:'(.*)'|with '(.*)' specifiers) is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is a C++20 extension
ext_default_init_const:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-const-init
  Regex: default initialization of an object of const type (.*)(?:| without a user-provided default constructor) is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
ext_defaulted_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: defaulted comparison operators are a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: defaulted comparison operators are a C++20 extension
ext_defaulted_deleted_function:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: (?:defaulted|deleted) function definitions are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: '%select{defaulted|deleted}0 function definitions are a C++11 extension'
ext_delete_void_ptr_operand:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: delete-incomplete
  Regex: cannot delete expression with pointer-to-'void' type (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot delete expression with pointer-to-'void' type %0
ext_delimited_escape_sequence:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: delimited-escape-sequence-extension
  Regex: delimited escape sequences are a Clang extension
  SFINAE: SFINAE_Suppress
  Text: delimited escape sequences are a Clang extension
ext_deprecated_string_literal_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: writable-strings
  Regex: ISO C\+\+11 does not allow conversion from string literal to (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++11 does not allow conversion from string literal to %0
ext_designated_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c99-designator
  Regex: designated initializers are a C99 feature
  SFINAE: SFINAE_Suppress
  Text: designated initializers are a C99 feature
ext_designated_init_array:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c99-designator
  Regex: array designators are a C99 extension
  SFINAE: SFINAE_Suppress
  Text: array designators are a C99 extension
ext_designated_init_brace_elision:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c99-designator
  Regex: brace elision for designated initializer is a C99 extension
  SFINAE: SFINAE_SubstitutionFailure
  Text: brace elision for designated initializer is a C99 extension
ext_designated_init_mixed:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c99-designator
  Regex: mixture of designated and non-designated initializers in the same initializer list is a C99 extension
  SFINAE: SFINAE_Suppress
  Text: mixture of designated and non-designated initializers in the same initializer list is a C99 extension
ext_designated_init_nested:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c99-designator
  Regex: nested designators are a C99 extension
  SFINAE: SFINAE_Suppress
  Text: nested designators are a C99 extension
ext_designated_init_reordered:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: reorder-init-list
  Regex: ISO C\+\+ requires field designators to be specified in declaration order; field (.*) will be initialized after field (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++ requires field designators to be specified in declaration order; field %1 will be initialized after field %0
ext_destructor_typedef_name:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: dtor-typedef
  Regex: destructor cannot be declared using a (?:typedef|type alias) (.*) of the class name
  SFINAE: SFINAE_Suppress
  Text: destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
ext_dollar_in_identifier:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: dollar-in-identifier-extension
  Regex: '''\$'' in identifier'
  SFINAE: SFINAE_Suppress
  Text: '''$'' in identifier'
ext_dtor_name_ambiguous:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: dtor-name
  Regex: ISO C\+\+ considers this destructor name lookup to be ambiguous
  SFINAE: SFINAE_Suppress
  Text: ISO C++ considers this destructor name lookup to be ambiguous
ext_dtor_named_in_wrong_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: dtor-name
  Regex: ISO C\+\+ requires the name after '::~' to be found in the same scope as the name before '::~'
  SFINAE: SFINAE_Suppress
  Text: ISO C++ requires the name after '::~' to be found in the same scope as the name before '::~'
ext_duplicate_declspec:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: duplicate-decl-specifier
  Regex: duplicate '(.*)' declaration specifier
  SFINAE: SFINAE_Suppress
  Text: '%sub{duplicate_declspec}0'
ext_dynamic_exception_spec:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: dynamic-exception-spec
  Regex: ISO C\+\+17 does not allow dynamic exception specifications
  SFINAE: SFINAE_Suppress
  Text: ISO C++17 does not allow dynamic exception specifications
ext_elaborated_enum_class:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: elaborated-enum-class
  Regex: reference to enumeration must use 'enum' not 'enum (?:struct|class)'
  SFINAE: SFINAE_Suppress
  Text: reference to enumeration must use 'enum' not 'enum %select{struct|class}0'
ext_ellipsis_exception_spec:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: microsoft-exception-spec
  Regex: exception specification of '\.\.\.' is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: exception specification of '...' is a Microsoft extension
ext_embedded_directive:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: embedded-directive
  Regex: embedding a directive within macro arguments has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: embedding a directive within macro arguments has undefined behavior
ext_empty_character:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: invalid-pp-token
  Regex: empty character constant
  SFINAE: SFINAE_Suppress
  Text: empty character constant
ext_empty_fnmacro_arg:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: empty macro arguments are a C99 feature
  SFINAE: SFINAE_Suppress
  Text: empty macro arguments are a C99 feature
ext_empty_struct_union:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-empty-struct
  Regex: empty (?:struct|union) is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: empty %select{struct|union}0 is a GNU extension
ext_empty_translation_unit:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: empty-translation-unit
  Regex: ISO C requires a translation unit to contain at least one declaration
  SFINAE: SFINAE_Suppress
  Text: ISO C requires a translation unit to contain at least one declaration
ext_enum_base_in_type_specifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Error
  Group: elaborated-enum-base
  Regex: non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration(?:|; missing list of enumerators\?)
  SFINAE: SFINAE_Suppress
  Text: non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration%select{|; missing list of enumerators?}0
ext_enum_friend:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: befriending enumeration type (.*) is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: befriending enumeration type %0 is a C++11 extension
ext_enum_too_large:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: enum-too-large
  Regex: enumeration values exceed range of largest integer
  SFINAE: SFINAE_Suppress
  Text: enumeration values exceed range of largest integer
ext_enum_value_not_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: ISO C restricts enumerator values to range of 'int' \((.*) is too (?:small|large)\)
  SFINAE: SFINAE_Suppress
  Text: ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
ext_enumerator_increment_too_large:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: enum-too-large
  Regex: incremented enumerator value (.*) is not representable in the largest integer type
  SFINAE: SFINAE_Suppress
  Text: incremented enumerator value %0 is not representable in the largest integer type
ext_enumerator_list_comma_c:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: commas at the end of enumerator lists are a C99-specific feature
  SFINAE: SFINAE_Suppress
  Text: commas at the end of enumerator lists are a C99-specific feature
ext_enumerator_list_comma_cxx:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++11-extensions
  Regex: commas at the end of enumerator lists are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: commas at the end of enumerator lists are a C++11 extension
ext_enumerator_too_large:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: microsoft-enum-value
  Regex: enumerator value is not representable in the underlying type (.*)
  SFINAE: SFINAE_Suppress
  Text: enumerator value is not representable in the underlying type %0
ext_equals_this_lambda_capture_cxx20:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: explicit capture of 'this' with a capture default of '=' is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: explicit capture of 'this' with a capture default of '=' is a C++20 extension
ext_equivalent_internal_linkage_decl_in_modules:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: modules-ambiguous-internal-linkage
  Regex: ambiguous use of internal linkage declaration (.*) defined in multiple modules
  SFINAE: SFINAE_Suppress
  Text: ambiguous use of internal linkage declaration %0 defined in multiple modules
ext_excess_initializers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: excess-initializers
  Regex: excess elements in (?:array|vector|scalar|union|struct) initializer
  SFINAE: SFINAE_Suppress
  Text: excess elements in %select{array|vector|scalar|union|struct}0 initializer
ext_excess_initializers_for_sizeless_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: excess-initializers
  Regex: excess elements in initializer for indivisible sizeless type (.*)
  SFINAE: SFINAE_Suppress
  Text: excess elements in initializer for indivisible sizeless type %0
ext_excess_initializers_in_char_array_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: excess-initializers
  Regex: excess elements in char array initializer
  SFINAE: SFINAE_Suppress
  Text: excess elements in char array initializer
ext_expected_semi_decl_list:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: expected ';' at end of declaration list
  SFINAE: SFINAE_Suppress
  Text: expected ';' at end of declaration list
ext_explicit_bool:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: explicit\(bool\) is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: explicit(bool) is a C++20 extension
ext_explicit_conversion_functions:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: explicit conversion functions are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: explicit conversion functions are a C++11 extension
ext_explicit_instantiation_duplicate:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: duplicate explicit instantiation of (.*) ignored as a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: duplicate explicit instantiation of %0 ignored as a Microsoft extension
ext_explicit_instantiation_without_qualified_id:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: qualifier in explicit instantiation of (.*) requires a template-id \(a typedef is not permitted\)
  SFINAE: SFINAE_Suppress
  Text: qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
ext_explicit_specialization_storage_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: explicit specialization cannot have a storage class
  SFINAE: SFINAE_Suppress
  Text: explicit specialization cannot have a storage class
ext_export_no_name_block:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: export-unnamed
  Regex: ISO C\+\+20 does not permit (?:an empty|a static_assert) declaration to appear in an export block
  SFINAE: SFINAE_Suppress
  Text: ISO C++20 does not permit %select{an empty|a static_assert}0 declaration to appear in an export block
ext_export_no_names:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: export-unnamed
  Regex: ISO C\+\+20 does not permit a declaration that does not introduce any names to be exported
  SFINAE: SFINAE_Suppress
  Text: ISO C++20 does not permit a declaration that does not introduce any names to be exported
ext_export_using_directive:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: export-using-directive
  Regex: ISO C\+\+20 does not permit using directive to be exported
  SFINAE: SFINAE_Suppress
  Text: ISO C++20 does not permit using directive to be exported
ext_expr_not_ice:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-folding-constant
  Regex: expression is not an (?:integer|integral) constant expression; folding it to a constant is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
ext_extern_template:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++11-extensions
  Regex: extern templates are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: extern templates are a C++11 extension
ext_extra_semi:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: extra-semi
  Regex: extra ';' (?:outside of a function|inside a (.*)|inside instance variable list|after member function definition)
  SFINAE: SFINAE_Suppress
  Text: extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
ext_extra_semi_cxx11:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++11-extra-semi
  Regex: extra ';' outside of a function is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: extra ';' outside of a function is a C++11 extension
ext_flexible_array_empty_aggregate_gnu:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-empty-struct
  Regex: flexible array member (.*) in otherwise empty (?:struct|interface|union|class|enum) is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
ext_flexible_array_empty_aggregate_ms:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: microsoft-flexible-array
  Regex: flexible array member (.*) in otherwise empty (?:struct|interface|union|class|enum) is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
ext_flexible_array_in_array:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: flexible-array-extensions
  Regex: (.*) may not be used as an array element due to flexible array member
  SFINAE: SFINAE_Suppress
  Text: '%0 may not be used as an array element due to flexible array member'
ext_flexible_array_in_struct:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: flexible-array-extensions
  Regex: (.*) may not be nested in a struct due to flexible array member
  SFINAE: SFINAE_Suppress
  Text: '%0 may not be nested in a struct due to flexible array member'
ext_flexible_array_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-flexible-array-initializer
  Regex: flexible array initialization is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: flexible array initialization is a GNU extension
ext_flexible_array_union_gnu:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-flexible-array-union-member
  Regex: flexible array member (.*) in a union is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: flexible array member %0 in a union is a GNU extension
ext_flexible_array_union_ms:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: microsoft-flexible-array
  Regex: flexible array member (.*) in a union is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: flexible array member %0 in a union is a Microsoft extension
ext_fold_expression:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: pack fold expression is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: pack fold expression is a C++17 extension
ext_for_range:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: range-based for loop is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: range-based for loop is a C++11 extension
ext_for_range_begin_end_types_differ:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: '''begin'' and ''end'' returning different types \((.*) and (.*)\) is a C\+\+17 extension'
  SFINAE: SFINAE_Suppress
  Text: '''begin'' and ''end'' returning different types (%0 and %1) is a C++17 extension'
ext_for_range_init_stmt:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: range-based for loop initialization statements are a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: range-based for loop initialization statements are a C++20 extension
ext_forward_ref_enum:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: ISO C forbids forward references to 'enum' types
  SFINAE: SFINAE_Suppress
  Text: ISO C forbids forward references to 'enum' types
ext_forward_ref_enum_def:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-redeclared-enum
  Regex: redeclaration of already-defined enum (.*) is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: redeclaration of already-defined enum %0 is a GNU extension
ext_found_in_dependent_base:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: use of member (.*) found via unqualified lookup into dependent bases of class templates is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: use of member %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
ext_found_later_in_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: use of member (.*) before its declaration is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: use of member %0 before its declaration is a Microsoft extension
ext_freestanding_complex:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: complex numbers are an extension in a freestanding C99 implementation
  SFINAE: SFINAE_Suppress
  Text: complex numbers are an extension in a freestanding C99 implementation
ext_friend_tag_redecl_outside_namespace:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-unqualified-friend
  Regex: unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
  SFINAE: SFINAE_Suppress
  Text: unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
ext_generalized_initializer_lists:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: generalized initializer lists are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: generalized initializer lists are a C++11 extension
ext_gnu_address_of_label:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-label-as-value
  Regex: use of GNU address-of-label extension
  SFINAE: SFINAE_Suppress
  Text: use of GNU address-of-label extension
ext_gnu_anonymous_struct:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-anonymous-struct
  Regex: anonymous structs are a GNU extension
  SFINAE: SFINAE_Suppress
  Text: anonymous structs are a GNU extension
ext_gnu_array_range:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-designator
  Regex: use of GNU array range extension
  SFINAE: SFINAE_Suppress
  Text: use of GNU array range extension
ext_gnu_case_range:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-case-range
  Regex: use of GNU case range extension
  SFINAE: SFINAE_Suppress
  Text: use of GNU case range extension
ext_gnu_conditional_expr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-conditional-omitted-operand
  Regex: 'use of GNU \?: conditional expression extension, omitting middle operand'
  SFINAE: SFINAE_Suppress
  Text: 'use of GNU ?: conditional expression extension, omitting middle operand'
ext_gnu_empty_initializer:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-empty-initializer
  Regex: use of GNU empty initializer extension
  SFINAE: SFINAE_Suppress
  Text: use of GNU empty initializer extension
ext_gnu_indirect_goto:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-label-as-value
  Regex: use of GNU indirect-goto extension
  SFINAE: SFINAE_Suppress
  Text: use of GNU indirect-goto extension
ext_gnu_missing_equal_designator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: gnu-designator
  Regex: use of GNU 'missing =' extension in designator
  SFINAE: SFINAE_Suppress
  Text: use of GNU 'missing =' extension in designator
ext_gnu_old_style_field_designator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: gnu-designator
  Regex: use of GNU old-style field designator extension
  SFINAE: SFINAE_Suppress
  Text: use of GNU old-style field designator extension
ext_gnu_ptr_func_arith:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pointer-arith
  Regex: 'arithmetic on(?: a|) pointer(?:|s) to(?: the|) function type(?:|s) (.*)(?:| and (.*)) is a GNU extension'
  SFINAE: SFINAE_Suppress
  Text: arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
ext_gnu_statement_expr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: gnu-statement-expression
  Regex: use of GNU statement expression extension
  SFINAE: SFINAE_Suppress
  Text: use of GNU statement expression extension
ext_gnu_subscript_void_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pointer-arith
  Regex: subscript of a pointer to void is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: subscript of a pointer to void is a GNU extension
ext_gnu_void_ptr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pointer-arith
  Regex: 'arithmetic on(?: a|) pointer(?:|s) to void is a GNU extension'
  SFINAE: SFINAE_Suppress
  Text: arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
ext_goto_into_protected_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-goto
  Regex: jump from this goto statement to its label is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: jump from this goto statement to its label is a Microsoft extension
ext_hex_constant_invalid:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c99-extensions
  Regex: hexadecimal floating constants are a C99 feature
  SFINAE: SFINAE_Suppress
  Text: hexadecimal floating constants are a C99 feature
ext_hex_literal_invalid:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++17-extensions
  Regex: hexadecimal floating literals are a C\+\+17 feature
  SFINAE: SFINAE_Suppress
  Text: hexadecimal floating literals are a C++17 feature
ext_ident_list_in_param:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: type-less parameter names in function declaration
  SFINAE: SFINAE_Suppress
  Text: type-less parameter names in function declaration
ext_imaginary_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-imaginary-constant
  Regex: imaginary constants are a GNU extension
  SFINAE: SFINAE_Suppress
  Text: imaginary constants are a GNU extension
ext_implicit_exception_spec_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: implicit-exception-spec-mismatch
  Regex: function previously declared with an (?:explicit|implicit) exception specification redeclared with an (?:implicit|explicit) exception specification
  SFINAE: SFINAE_Suppress
  Text: function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
ext_implicit_function_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: implicit-function-declaration
  Regex: implicit declaration of function (.*) is invalid in C99
  SFINAE: SFINAE_Suppress
  Text: implicit declaration of function %0 is invalid in C99
ext_implicit_lib_function_decl:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: implicit-function-declaration
  Regex: implicitly declaring library function '(.*)' with type (.*)
  SFINAE: SFINAE_Suppress
  Text: implicitly declaring library function '%0' with type %1
ext_in_class_initializer_float_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gnu-static-float-init
  Regex: in-class initializer for static data member of type (.*) is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: in-class initializer for static data member of type %0 is a GNU extension
ext_in_class_initializer_float_type_cxx11:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: static-float-init
  Regex: in-class initializer for static data member of type (.*) requires 'constexpr' specifier
  SFINAE: SFINAE_Suppress
  Text: in-class initializer for static data member of type %0 requires 'constexpr' specifier
ext_in_class_initializer_non_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-folding-constant
  Regex: in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
ext_incomplete_in_exception_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-exception-spec
  Regex: (?:|pointer to |reference to )incomplete type (.*) is not allowed in exception specification
  SFINAE: SFINAE_Suppress
  Text: '%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification'
ext_increment_bool:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: increment-bool
  Regex: ISO C\+\+17 does not allow incrementing expression of type bool
  SFINAE: SFINAE_Suppress
  Text: ISO C++17 does not allow incrementing expression of type bool
ext_init_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++14-extensions
  Regex: initialized lambda captures are a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: initialized lambda captures are a C++14 extension
ext_init_capture_pack:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: initialized lambda pack captures are a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: initialized lambda pack captures are a C++20 extension
ext_init_list_constant_narrowing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: c++11-narrowing
  Regex: constant expression evaluates to (.*) which cannot be narrowed to type (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: constant expression evaluates to %0 which cannot be narrowed to type %1
ext_init_list_type_narrowing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: c++11-narrowing
  Regex: type (.*) cannot be narrowed to (.*) in initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: type %0 cannot be narrowed to %1 in initializer list
ext_init_list_variable_narrowing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: c++11-narrowing
  Regex: non-constant-expression cannot be narrowed from type (.*) to (.*) in initializer list
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
ext_init_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: '''(?:if|switch)'' initialization statements are a C\+\+17 extension'
  SFINAE: SFINAE_Suppress
  Text: '''%select{if|switch}0'' initialization statements are a C++17 extension'
ext_initializer_overrides:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: initializer-overrides
  Regex: initializer (?:partially |)overrides prior initialization of this subobject
  SFINAE: SFINAE_SubstitutionFailure
  Text: initializer %select{partially |}0overrides prior initialization of this subobject
ext_initializer_string_for_char_array_too_long:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: excess-initializers
  Regex: initializer-string for char array is too long
  SFINAE: SFINAE_Suppress
  Text: initializer-string for char array is too long
ext_inline_namespace:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-inline-namespace
  Regex: inline namespaces are a C\+\+11 feature
  SFINAE: SFINAE_Suppress
  Text: inline namespaces are a C++11 feature
ext_inline_nested_namespace_definition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: inline nested namespace definition is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: inline nested namespace definition is a C++20 extension
ext_inline_variable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: inline variables are a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: inline variables are a C++17 extension
ext_integer_complement_complex:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: ISO C does not support '~' for complex conjugation of (.*)
  SFINAE: SFINAE_Suppress
  Text: ISO C does not support '~' for complex conjugation of %0
ext_integer_complex:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-complex-integer
  Regex: complex integer types are a GNU extension
  SFINAE: SFINAE_Suppress
  Text: complex integer types are a GNU extension
ext_integer_increment_complex:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: ISO C does not support '\+\+'/'--' on complex integer type (.*)
  SFINAE: SFINAE_Suppress
  Text: ISO C does not support '++'/'--' on complex integer type %0
ext_integer_literal_too_large_for_signed:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: implicitly-unsigned-literal
  Regex: integer literal is too large to be represented in a signed integer type, interpreting as unsigned
  SFINAE: SFINAE_Suppress
  Text: integer literal is too large to be represented in a signed integer type, interpreting as unsigned
ext_internal_in_extern_inline:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: static-in-inline
  Regex: static (?:function|variable) (.*) is used in an inline function with external linkage
  SFINAE: SFINAE_Suppress
  Text: static %select{function|variable}0 %1 is used in an inline function with external linkage
ext_internal_in_extern_inline_quiet:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: static-in-inline
  Regex: static (?:function|variable) (.*) is used in an inline function with external linkage
  SFINAE: SFINAE_Suppress
  Text: static %select{function|variable}0 %1 is used in an inline function with external linkage
ext_keyword_as_ident:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: keyword-compat
  Regex: keyword '(.*)' will be made available as an identifier (?:here|for the remainder of the translation unit)
  SFINAE: SFINAE_Suppress
  Text: keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
ext_lambda_missing_parens:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++2b-extensions
  Regex: lambda without a parameter clause is a C\+\+2b extension
  SFINAE: SFINAE_Suppress
  Text: lambda without a parameter clause is a C++2b extension
ext_lambda_template_parameter_list:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: explicit template parameter list for lambdas is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: explicit template parameter list for lambdas is a C++20 extension
ext_line_comment:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: comment
  Regex: // comments are not allowed in this language
  SFINAE: SFINAE_Suppress
  Text: // comments are not allowed in this language
ext_main_returns_nonint:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: main-return-type
  Regex: return type of 'main' is not 'int'
  SFINAE: SFINAE_Suppress
  Text: return type of 'main' is not 'int'
ext_main_used:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: main
  Regex: ISO C\+\+ does not allow 'main' to be used by a program
  SFINAE: SFINAE_Suppress
  Text: ISO C++ does not allow 'main' to be used by a program
ext_many_braces_around_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: many-braces-around-scalar-init
  Regex: too many braces around (?:scalar |)initializer
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many braces around %select{scalar |}0initializer
ext_member_redeclared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: redeclared-class-member
  Regex: class member cannot be redeclared
  SFINAE: SFINAE_Suppress
  Text: class member cannot be redeclared
ext_mismatched_exception_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-exception-spec
  Regex: exception specification in declaration does not match previous declaration
  SFINAE: SFINAE_Suppress
  Text: exception specification in declaration does not match previous declaration
ext_mismatched_exception_spec_explicit_instantiation:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-exception-spec
  Regex: exception specification in explicit instantiation does not match instantiated one
  SFINAE: SFINAE_Suppress
  Text: exception specification in explicit instantiation does not match instantiated one
ext_missing_declspec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: declaration specifier missing, defaulting to 'int'
  SFINAE: SFINAE_Suppress
  Text: declaration specifier missing, defaulting to 'int'
ext_missing_exception_specification:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-exception-spec
  Regex: (.*) is missing exception specification '(.*)'
  SFINAE: SFINAE_Suppress
  Text: '%0 is missing exception specification ''%1'''
ext_missing_type_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: implicit-int
  Regex: type specifier missing, defaults to 'int'
  SFINAE: SFINAE_Suppress
  Text: type specifier missing, defaults to 'int'
ext_missing_varargs_arg:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: gnu-zero-variadic-macro-arguments
  Regex: must specify at least one argument for '\.\.\.' parameter of variadic macro
  SFINAE: SFINAE_Suppress
  Text: must specify at least one argument for '...' parameter of variadic macro
ext_missing_whitespace_after_macro_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: whitespace required after macro name
  SFINAE: SFINAE_Suppress
  Text: whitespace required after macro name
ext_mixed_decls_code:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: declaration-after-statement
  Regex: mixing declarations and code is a C99 extension
  SFINAE: SFINAE_Suppress
  Text: mixing declarations and code is a C99 extension
ext_module_import_in_extern_c:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: module-import-in-extern-c
  Regex: import of C\+\+ module '(.*)' appears within extern "C" language linkage specification
  SFINAE: SFINAE_Suppress
  Text: import of C++ module '%0' appears within extern "C" language linkage specification
ext_module_import_not_at_top_level_noop:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: modules-import-nested-redundant
  Regex: 'redundant #include of module ''(.*)'' appears within (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'redundant #include of module ''%0'' appears within %1'
ext_ms_abstract_keyword:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: microsoft-abstract
  Regex: '''abstract'' keyword is a Microsoft extension'
  SFINAE: SFINAE_Suppress
  Text: '''abstract'' keyword is a Microsoft extension'
ext_ms_ambiguous_direct_base:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-inaccessible-base
  Regex: accessing inaccessible direct base (.*) of (.*) is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: accessing inaccessible direct base %0 of %1 is a Microsoft extension
ext_ms_anonymous_record:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-anon-tag
  Regex: anonymous (?:structs|unions) are a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: anonymous %select{structs|unions}0 are a Microsoft extension
ext_ms_c_enum_fixed_underlying_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: microsoft-fixed-enum
  Regex: enumeration types with a fixed underlying type are a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: enumeration types with a fixed underlying type are a Microsoft extension
ext_ms_cast_fn_obj:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-cast
  Regex: static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
ext_ms_delayed_template_argument:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: using the undeclared type (.*) as a default template argument is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: using the undeclared type %0 as a default template argument is a Microsoft extension
ext_ms_deref_template_argument:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: non-type template argument containing a dereference operation is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: non-type template argument containing a dereference operation is a Microsoft extension
ext_ms_explicit_constructor_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-explicit-constructor-call
  Regex: explicit constructor calls are a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: explicit constructor calls are a Microsoft extension
ext_ms_forward_ref_enum:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-enum-forward-reference
  Regex: forward references to 'enum' types are a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: forward references to 'enum' types are a Microsoft extension
ext_ms_impcast_fn_obj:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-cast
  Regex: implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
ext_ms_reserved_user_defined_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: reserved-user-defined-literal
  Regex: invalid suffix on literal; C\+\+11 requires a space between literal and identifier
  SFINAE: SFINAE_Suppress
  Text: invalid suffix on literal; C++11 requires a space between literal and identifier
ext_ms_sealed_keyword:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: microsoft-sealed
  Regex: '''sealed'' keyword is a Microsoft extension'
  SFINAE: SFINAE_Suppress
  Text: '''sealed'' keyword is a Microsoft extension'
ext_ms_static_assert:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: microsoft-static-assert
  Regex: use of 'static_assert' without inclusion of <assert\.h> is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: use of 'static_assert' without inclusion of <assert.h> is a Microsoft extension
ext_ms_template_spec_redecl_out_of_scope:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: (?:class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration) specialization of (.*) not in (?:a namespace enclosing (.*)|class (.*) or an enclosing namespace) is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: '%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension'
ext_ms_template_type_arg_missing_typename:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
ext_ms_using_declaration_inaccessible:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-using-decl
  Regex: using declaration referring to inaccessible member '(.*)' \(which refers to accessible member '(.*)'\) is a Microsoft compatibility extension
  SFINAE: SFINAE_AccessControl
  Text: using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
ext_multi_line_line_comment:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: comment
  Regex: multi-line // comment
  SFINAE: SFINAE_Suppress
  Text: multi-line // comment
ext_multi_using_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: use of multiple declarators in a single using declaration is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: use of multiple declarators in a single using declaration is a C++17 extension
ext_mutable_reference:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-mutable-reference
  Regex: '''mutable'' on a reference type is a Microsoft extension'
  SFINAE: SFINAE_Suppress
  Text: '''mutable'' on a reference type is a Microsoft extension'
ext_named_variadic_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: variadic-macros
  Regex: named variadic macros are a GNU extension
  SFINAE: SFINAE_Suppress
  Text: named variadic macros are a GNU extension
ext_nested_name_member_ref_lookup_ambiguous:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ambiguous-member-template
  Regex: lookup of (.*) in member access expression is ambiguous; using member of (.*)
  SFINAE: SFINAE_Suppress
  Text: lookup of %0 in member access expression is ambiguous; using member of %1
ext_nested_name_spec_is_enum:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: use of enumeration in a nested name specifier is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: use of enumeration in a nested name specifier is a C++11 extension
ext_nested_namespace_definition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: nested namespace definition is a C\+\+17 extension; define each namespace separately
  SFINAE: SFINAE_Suppress
  Text: nested namespace definition is a C++17 extension; define each namespace separately
ext_nested_pointer_qualifier_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-pointer-types-discards-qualifiers
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) discards qualifiers in nested pointer types
  SFINAE: SFINAE_Suppress
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types'
ext_new_paren_array_nonconst:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: when type is in parentheses, array cannot have dynamic size
  SFINAE: SFINAE_Suppress
  Text: when type is in parentheses, array cannot have dynamic size
ext_no_declarators:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-declarations
  Regex: declaration does not declare anything
  SFINAE: SFINAE_Suppress
  Text: declaration does not declare anything
ext_no_named_members_in_struct_union:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-empty-struct
  Regex: (?:struct|union) without named members is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: '%select{struct|union}0 without named members is a GNU extension'
ext_no_newline_eof:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: newline-eof
  Regex: no newline at end of file
  SFINAE: SFINAE_Suppress
  Text: no newline at end of file
ext_non_c_like_anon_struct_in_typedef:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: non-c-typedef-for-linkage
  Regex: anonymous non-C-compatible type given name for linkage purposes by (?:typedef|alias) declaration; add a tag name here
  SFINAE: SFINAE_Suppress
  Text: anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration; add a tag name here
ext_nonclass_type_friend:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: non-class friend type (.*) is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: non-class friend type %0 is a C++11 extension
ext_nonstandard_escape:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: use of non-standard escape character '\\(.*)'
  SFINAE: SFINAE_Suppress
  Text: use of non-standard escape character '\%0'
ext_nonstatic_member_init:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: default member initializer for non-static data member is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: default member initializer for non-static data member is a C++11 extension
ext_noreturn_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: main
  Regex: '''main'' is not allowed to be declared _Noreturn'
  SFINAE: SFINAE_Suppress
  Text: '''main'' is not allowed to be declared _Noreturn'
ext_ns_enum_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++17-extensions
  Regex: attributes on (?:a namespace|an enumerator) declaration are a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
ext_nullability:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: nullability-extension
  Regex: type nullability specifier (.*) is a Clang extension
  SFINAE: SFINAE_Suppress
  Text: type nullability specifier %0 is a Clang extension
ext_offsetof_non_pod_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-offsetof
  Regex: offset of on non-POD type (.*)
  SFINAE: SFINAE_Suppress
  Text: offset of on non-POD type %0
ext_offsetof_non_standardlayout_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-offsetof
  Regex: offset of on non-standard-layout type (.*)
  SFINAE: SFINAE_Suppress
  Text: offset of on non-standard-layout type %0
ext_old_implicitly_unsigned_long_cxx:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: c++11-compat
  Regex: integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C\+\+98, interpreting as 'unsigned long'; this literal will (?:have type 'long long'|be ill-formed) in C\+\+11 onwards
  SFINAE: SFINAE_Suppress
  Text: integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
ext_omp_attributes:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-51-extensions
  Regex: specifying OpenMP directives with \[\[\]\] is an OpenMP 5\.1 extension
  SFINAE: SFINAE_Suppress
  Text: specifying OpenMP directives with [[]] is an OpenMP 5.1 extension
ext_omp_loop_not_canonical_init:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-loop-form
  Regex: initialization clause of OpenMP for loop is not in canonical form \('var = init' or 'T var = init'\)
  SFINAE: SFINAE_Suppress
  Text: initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
ext_on_off_switch_syntax:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: expected 'ON' or 'OFF' or 'DEFAULT' in pragma
  SFINAE: SFINAE_Suppress
  Text: expected 'ON' or 'OFF' or 'DEFAULT' in pragma
ext_opencl_double_without_pragma:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: Clang permits use of type 'double' regardless pragma if 'cl_khr_fp64' is supported
  SFINAE: SFINAE_Suppress
  Text: Clang permits use of type 'double' regardless pragma if 'cl_khr_fp64' is supported
ext_opencl_ext_vector_type_rgba_selector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: opencl-unsupported-rgba
  Regex: vector component name '(.*)' is a feature from OpenCL version 3\.0 onwards
  SFINAE: SFINAE_Suppress
  Text: vector component name '%0' is a feature from OpenCL version 3.0 onwards
ext_operator_new_delete_declared_inline:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: inline-new-delete
  Regex: replacement function (.*) cannot be declared 'inline'
  SFINAE: SFINAE_Suppress
  Text: replacement function %0 cannot be declared 'inline'
ext_out_of_line_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: out-of-line-declaration
  Regex: out-of-line declaration of a member must be a definition
  SFINAE: SFINAE_Suppress
  Text: out-of-line declaration of a member must be a definition
ext_out_of_line_qualified_id_type_names_constructor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: injected-class-name
  Regex: ISO C\+\+ specifies that qualified reference to (.*) is a constructor name rather than a (?:template name|type) in this context, despite preceding (?:'typename'|'template') keyword
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
ext_override_control_keyword:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: '''(.*)'' keyword is a C\+\+11 extension'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' keyword is a C++11 extension'
ext_override_exception_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-exception-spec
  Regex: exception specification of overriding function is more lax than base version
  SFINAE: SFINAE_Suppress
  Text: exception specification of overriding function is more lax than base version
ext_ovl_ambiguous_oper_binary_reversed:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ambiguous-reversed-operator
  Regex: 'ISO C\+\+20 considers use of overloaded operator ''(.*)'' \(with operand types (.*) and (.*)\) to be ambiguous despite there being a unique best viable function(?: with non-reversed arguments|)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++20 considers use of overloaded operator '%0' (with operand types %1 and %2) to be ambiguous despite there being a unique best viable function%select{ with non-reversed arguments|}3
ext_ovl_rewrite_equalequal_not_bool:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: rewrite-not-bool
  Regex: ISO C\+\+20 requires return type of selected 'operator==' function for rewritten '(.*)' comparison to be 'bool', not (.*)
  SFINAE: SFINAE_SubstitutionFailure
  Text: ISO C++20 requires return type of selected 'operator==' function for rewritten '%1' comparison to be 'bool', not %0
ext_param_default_argument_redefinition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-default-arg-redefinition
  Regex: redefinition of default argument
  SFINAE: SFINAE_Suppress
  Text: redefinition of default argument
ext_param_not_declared:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: parameter (.*) was not declared, defaulting to type 'int'
  SFINAE: SFINAE_Suppress
  Text: parameter %0 was not declared, defaulting to type 'int'
ext_param_promoted_not_compatible_with_prototype:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: knr-promoted-parameter
  Regex: (?:promoted type \$ of K&R function parameter is not compatible with the parameter type \$|promoted type of K&R function parameter is not compatible with parameter type) declared in a previous prototype
  SFINAE: SFINAE_Suppress
  Text: '%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype'
ext_parameter_name_omitted_c2x:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c2x-extensions
  Regex: omitting the parameter name in a function definition is a C2x extension
  SFINAE: SFINAE_Suppress
  Text: omitting the parameter name in a function definition is a C2x extension
ext_partial_spec_not_more_specialized_than_primary:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: invalid-partial-specialization
  Regex: (?:class|variable) template partial specialization is not more specialized than the primary template
  SFINAE: SFINAE_Suppress
  Text: '%select{class|variable}0 template partial specialization is not more specialized than the primary template'
ext_partial_specs_not_deducible:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: unusable-partial-specialization
  Regex: (?:class|variable) template partial specialization contains (?:a template parameter|template parameters) that cannot be deduced; this partial specialization will never be used
  SFINAE: SFINAE_Suppress
  Text: '%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used'
ext_paste_comma:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: gnu-zero-variadic-macro-arguments
  Regex: token pasting of ',' and __VA_ARGS__ is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: token pasting of ',' and __VA_ARGS__ is a GNU extension
ext_plain_complex:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: plain '_Complex' requires a type specifier; assuming '_Complex double'
  SFINAE: SFINAE_Suppress
  Text: plain '_Complex' requires a type specifier; assuming '_Complex double'
ext_pointer_to_const_ref_member_on_rvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++20-extensions
  Regex: invoking a pointer to a 'const &' member function on an rvalue is a C\+\+20 extension
  SFINAE: SFINAE_SubstitutionFailure
  Text: invoking a pointer to a 'const &' member function on an rvalue is a C++20 extension
ext_pp_bad_paste_ms:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: invalid-token-paste
  Regex: pasting formed '(.*)', an invalid preprocessing token
  SFINAE: SFINAE_Suppress
  Text: pasting formed '%0', an invalid preprocessing token
ext_pp_bad_vaargs_use:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: __VA_ARGS__ can only appear in the expansion of a C99 variadic macro
  SFINAE: SFINAE_Suppress
  Text: __VA_ARGS__ can only appear in the expansion of a C99 variadic macro
ext_pp_bad_vaopt_use:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: variadic-macros
  Regex: __VA_OPT__ can only appear in the expansion of a variadic macro
  SFINAE: SFINAE_Suppress
  Text: __VA_OPT__ can only appear in the expansion of a variadic macro
ext_pp_comma_expr:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: 'comma operator in operand of #if'
  SFINAE: SFINAE_Suppress
  Text: 'comma operator in operand of #if'
ext_pp_extra_tokens_at_eol:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: extra-tokens
  Regex: 'extra tokens at end of #(.*) directive'
  SFINAE: SFINAE_Suppress
  Text: 'extra tokens at end of #%0 directive'
ext_pp_ident_directive:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: '#ident is a language extension'
  SFINAE: SFINAE_Suppress
  Text: '#ident is a language extension'
ext_pp_import_directive:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: import-preprocessor-directive-pedantic
  Regex: '#import is a language extension'
  SFINAE: SFINAE_Suppress
  Text: '#import is a language extension'
ext_pp_include_next_directive:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: gnu-include-next
  Regex: '#include_next is a language extension'
  SFINAE: SFINAE_Suppress
  Text: '#include_next is a language extension'
ext_pp_include_search_ms:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: microsoft-include
  Regex: '#include resolved using non-portable Microsoft search rules as: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '#include resolved using non-portable Microsoft search rules as: %0'
ext_pp_line_too_big:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: 'C requires #line number to be less than (.*), allowed as extension'
  SFINAE: SFINAE_Suppress
  Text: 'C requires #line number to be less than %0, allowed as extension'
ext_pp_line_zero:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: gnu-zero-line-directive
  Regex: '#line directive with zero argument is a GNU extension'
  SFINAE: SFINAE_Suppress
  Text: '#line directive with zero argument is a GNU extension'
ext_pp_macro_redef:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: macro-redefined
  Regex: (.*) macro redefined
  SFINAE: SFINAE_Suppress
  Text: '%0 macro redefined'
ext_pp_opencl_variadic_macros:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: variadic macros are a Clang extension in OpenCL
  SFINAE: SFINAE_Suppress
  Text: variadic macros are a Clang extension in OpenCL
ext_pp_operator_used_as_macro_name:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: microsoft-cpp-macro
  Regex: C\+\+ operator (.*) \(aka (.*)\) used as a macro name
  SFINAE: SFINAE_Suppress
  Text: C++ operator %0 (aka %1) used as a macro name
ext_pp_redef_builtin_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: builtin-macro-redefined
  Regex: redefining builtin macro
  SFINAE: SFINAE_Suppress
  Text: redefining builtin macro
ext_pp_undef_builtin_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: builtin-macro-redefined
  Regex: undefining builtin macro
  SFINAE: SFINAE_Suppress
  Text: undefining builtin macro
ext_pp_warning_directive:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: '#warning is a language extension'
  SFINAE: SFINAE_Suppress
  Text: '#warning is a language extension'
ext_pragma_syntax_eod:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: expected end of directive in pragma
  SFINAE: SFINAE_Suppress
  Text: expected end of directive in pragma
ext_predef_outside_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: predefined-identifier-outside-function
  Regex: predefined identifier is only valid inside function
  SFINAE: SFINAE_Suppress
  Text: predefined identifier is only valid inside function
ext_pseudo_dtor_on_void:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-void-pseudo-dtor
  Regex: pseudo-destructors on type void are a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: pseudo-destructors on type void are a Microsoft extension
ext_pure_function_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-pure-definition
  Regex: function definition with pure-specifier is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: function definition with pure-specifier is a Microsoft extension
ext_qualified_dtor_named_in_lexical_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dtor-name
  Regex: qualified destructor name only found in lexical scope; omit the qualifier to find this type name by unqualified lookup
  SFINAE: SFINAE_Suppress
  Text: qualified destructor name only found in lexical scope; omit the qualifier to find this type name by unqualified lookup
ext_redefinition_of_typedef:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: typedef-redefinition
  Regex: redefinition of typedef (.*) is a C11 feature
  SFINAE: SFINAE_Suppress
  Text: redefinition of typedef %0 is a C11 feature
ext_ref_qualifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: reference qualifiers on functions are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: reference qualifiers on functions are a C++11 extension
ext_register_storage_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: register
  Regex: ISO C\+\+17 does not allow 'register' storage class specifier
  SFINAE: SFINAE_Suppress
  Text: ISO C++17 does not allow 'register' storage class specifier
ext_reserved_user_defined_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: reserved-user-defined-literal
  Regex: invalid suffix on literal; C\+\+11 requires a space between literal and identifier
  SFINAE: SFINAE_Suppress
  Text: invalid suffix on literal; C++11 requires a space between literal and identifier
ext_retained_language_linkage:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: retained-language-linkage
  Regex: friend function (.*) retaining previous language linkage is an extension
  SFINAE: SFINAE_Suppress
  Text: friend function %0 retaining previous language linkage is an extension
ext_return_has_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: return-type
  Regex: (?:void function|void method|constructor|destructor) (.*) should not return a value
  SFINAE: SFINAE_Suppress
  Text: '%select{void function|void method|constructor|destructor}1 %0 should not return a value'
ext_return_has_void_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: void (?:function|method|block) (.*) should not return void expression
  SFINAE: SFINAE_Suppress
  Text: void %select{function|method|block}1 %0 should not return void expression
ext_return_missing_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: return-type
  Regex: non-void (?:function|method) (.*) should return a value
  SFINAE: SFINAE_Suppress
  Text: non-void %select{function|method}1 %0 should return a value
ext_rvalue_reference:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: rvalue references are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: rvalue references are a C++11 extension
ext_rvalue_to_reference_access_ctor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bind-to-temporary-copy
  Regex: C\+\+98 requires an accessible copy constructor for class (.*) when binding a reference to a temporary; was (?:private|protected)
  SFINAE: SFINAE_AccessControl
  Text: C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
ext_rvalue_to_reference_temp_copy_no_viable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bind-to-temporary-copy
  Regex: no viable constructor (?:copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value) of type (.*); C\+\+98 requires a copy constructor when binding a reference to a temporary
  SFINAE: SFINAE_Suppress
  Text: no viable constructor %sub{select_initialized_entity_kind}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
ext_scoped_enum:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: scoped enumerations are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: scoped enumerations are a C++11 extension
ext_sizeof_alignof_function_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pointer-arith
  Regex: invalid application of '(.*)' to a function type
  SFINAE: SFINAE_Suppress
  Text: invalid application of '%0' to a function type
ext_sizeof_alignof_void_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pointer-arith
  Regex: invalid application of '(.*)' to a void type
  SFINAE: SFINAE_Suppress
  Text: invalid application of '%0' to a void type
ext_standalone_specifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-declarations
  Regex: '''(.*)'' is not permitted on a declaration of a type'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is not permitted on a declaration of a type'
ext_star_this_lambda_capture_cxx17:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: capture of '\*this' by copy is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: capture of '*this' by copy is a C++17 extension
ext_static_data_member_in_union:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: static data member (.*) in union is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: static data member %0 in union is a C++11 extension
ext_static_non_static:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: microsoft-redeclare-static
  Regex: redeclaring non-static (.*) as static is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: redeclaring non-static %0 as static is a Microsoft extension
ext_static_out_of_line:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: '''static'' can only be specified inside the class definition'
  SFINAE: SFINAE_Suppress
  Text: '''static'' can only be specified inside the class definition'
ext_stdc_pragma_ignored:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: unknown pragma in STDC namespace
  SFINAE: SFINAE_Suppress
  Text: unknown pragma in STDC namespace
ext_string_literal_operator_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gnu-string-literal-operator-template
  Regex: string literal operator templates are a GNU extension
  SFINAE: SFINAE_Suppress
  Text: string literal operator templates are a GNU extension
ext_string_too_long:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: overlength-strings
  Regex: string literal of length (.*) exceeds maximum length (.*) that (?:C90|ISO C99|C\+\+) compilers are required to support
  SFINAE: SFINAE_Suppress
  Text: string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
ext_subscript_non_lvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: ISO C90 does not allow subscripting non-lvalue array
  SFINAE: SFINAE_Suppress
  Text: ISO C90 does not allow subscripting non-lvalue array
ext_subscript_overload:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++2b-compat
  Regex: overloaded (.*) with (?:no|a defaulted|more than one) parameter is a C\+\+2b extension
  SFINAE: SFINAE_Suppress
  Text: overloaded %0 with %select{no|a defaulted|more than one}1 parameter is a C++2b extension
ext_template_arg_extra_parens:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: address non-type template argument cannot be surrounded by parentheses
  SFINAE: SFINAE_Suppress
  Text: address non-type template argument cannot be surrounded by parentheses
ext_template_arg_local_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: local-type-template-args
  Regex: template argument uses local type (.*)
  SFINAE: SFINAE_Suppress
  Text: template argument uses local type %0
ext_template_arg_object_internal:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: non-type template argument referring to (?:function|object) (.*) with internal linkage is a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
ext_template_arg_unnamed_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unnamed-type-template-args
  Regex: template argument uses unnamed type
  SFINAE: SFINAE_Suppress
  Text: template argument uses unnamed type
ext_template_outside_of_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: '''template'' keyword outside of a template'
  SFINAE: SFINAE_Suppress
  Text: '''template'' keyword outside of a template'
ext_template_param_shadow:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template-shadow
  Regex: declaration of (.*) shadows template parameter
  SFINAE: SFINAE_Suppress
  Text: declaration of %0 shadows template parameter
ext_template_parameter_default_in_function_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: default template arguments for a function template are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: default template arguments for a function template are a C++11 extension
ext_template_template_param_typename:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: template template parameter using 'typename' is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: template template parameter using 'typename' is a C++17 extension
ext_thread_before:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: '''__thread'' before ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: '''__thread'' before ''%0'''
ext_token_used:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: language-extension-token
  Regex: extension used
  SFINAE: SFINAE_Suppress
  Text: extension used
ext_typecheck_addrof_temporary:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: address-of-temporary
  Regex: taking the address of a temporary object of type (.*)
  SFINAE: SFINAE_Suppress
  Text: taking the address of a temporary object of type %0
ext_typecheck_addrof_void:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: ISO C forbids taking the address of an expression of type 'void'
  SFINAE: SFINAE_Suppress
  Text: ISO C forbids taking the address of an expression of type 'void'
ext_typecheck_base_super:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: super-class-method-mismatch
  Regex: method parameter type (?:\$ does not match super class method parameter type \$|does not match super class method parameter type)
  SFINAE: SFINAE_Suppress
  Text: method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
ext_typecheck_cast_nonscalar:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: C99 forbids casting nonscalar type (.*) to the same type
  SFINAE: SFINAE_Suppress
  Text: C99 forbids casting nonscalar type %0 to the same type
ext_typecheck_cast_to_union:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: gnu-union-cast
  Regex: cast to union type is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: cast to union type is a GNU extension
ext_typecheck_compare_complete_incomplete_pointers:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c11-extensions
  Regex: pointer comparisons before C11 need to be between two complete or two incomplete types; (.*) is (?:|in)complete and (.*) is (?:|in)complete
  SFINAE: SFINAE_Suppress
  Text: pointer comparisons before C11 need to be between two complete or two incomplete types; %0 is %select{|in}2complete and %1 is %select{|in}3complete
ext_typecheck_comparison_of_distinct_pointers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: compare-distinct-pointer-types
  Regex: 'comparison of distinct pointer types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: comparison of distinct pointer types%diff{ ($ and $)|}0,1
ext_typecheck_comparison_of_fptr_to_void:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: equality comparison between function pointer and void pointer \((.*) and (.*)\)
  SFINAE: SFINAE_Suppress
  Text: equality comparison between function pointer and void pointer (%0 and %1)
ext_typecheck_comparison_of_pointer_integer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-integer-compare
  Regex: comparison between pointer and integer \((.*) and (.*)\)
  SFINAE: SFINAE_Suppress
  Text: comparison between pointer and integer (%0 and %1)
ext_typecheck_cond_incompatible_operands:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: incompatible operand types \((.*) and (.*)\)
  SFINAE: SFINAE_Suppress
  Text: incompatible operand types (%0 and %1)
ext_typecheck_cond_incompatible_pointers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-type-mismatch
  Regex: 'pointer type mismatch(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: pointer type mismatch%diff{ ($ and $)|}0,1
ext_typecheck_cond_one_void:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: C99 forbids conditional expressions with only one void side
  SFINAE: SFINAE_Suppress
  Text: C99 forbids conditional expressions with only one void side
ext_typecheck_cond_pointer_integer_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: conditional-type-mismatch
  Regex: 'pointer/integer type mismatch in conditional expression(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
ext_typecheck_convert_discards_qualifiers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-pointer-types-discards-qualifiers
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) discards qualifiers
  SFINAE: SFINAE_Suppress
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers'
ext_typecheck_convert_incompatible_function_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-function-pointer-types
  Regex: incompatible function pointer types (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_Suppress
  Text: incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
ext_typecheck_convert_incompatible_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-pointer-types
  Regex: incompatible pointer types (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_Suppress
  Text: incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
ext_typecheck_convert_incompatible_pointer_sign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-sign
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) converts between pointers to integer types (?:with different sign|where one is of the unique plain 'char' type and the other is not)
  SFINAE: SFINAE_Suppress
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain ''char'' type and the other is not}3'
ext_typecheck_convert_int_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: int-conversion
  Regex: incompatible integer to pointer conversion (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_SubstitutionFailure
  Text: incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
ext_typecheck_convert_pointer_int:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: int-conversion
  Regex: incompatible pointer to integer conversion (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))(?:|; dereference with \*|; take the address with &|; remove \*|; remove &)
  SFINAE: SFINAE_Suppress
  Text: incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
ext_typecheck_convert_pointer_void_func:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types)) converts between void pointer and function pointer
  SFINAE: SFINAE_Suppress
  Text: '%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer'
ext_typecheck_decl_incomplete_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tentative-definition-incomplete-type
  Regex: tentative definition of variable with internal linkage has incomplete non-array type (.*)
  SFINAE: SFINAE_Suppress
  Text: tentative definition of variable with internal linkage has incomplete non-array type %0
ext_typecheck_indirection_through_void_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: void-ptr-dereference
  Regex: ISO C\+\+ does not allow indirection on operand of type (.*)
  SFINAE: SFINAE_Suppress
  Text: ISO C++ does not allow indirection on operand of type %0
ext_typecheck_ordered_comparison_of_function_pointers:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ordered-compare-function-pointers
  Regex: ordered comparison of function pointers \((.*) and (.*)\)
  SFINAE: SFINAE_Suppress
  Text: ordered comparison of function pointers (%0 and %1)
ext_typecheck_ordered_comparison_of_pointer_and_zero:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: None
  Regex: ordered comparison between pointer and zero \((.*) and (.*)\) is an extension
  SFINAE: SFINAE_Suppress
  Text: ordered comparison between pointer and zero (%0 and %1) is an extension
ext_typecheck_ordered_comparison_of_pointer_integer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: ordered comparison between pointer and integer \((.*) and (.*)\)
  SFINAE: SFINAE_Suppress
  Text: ordered comparison between pointer and integer (%0 and %1)
ext_typecheck_zero_array_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: zero-length-array
  Regex: zero size arrays are an extension
  SFINAE: SFINAE_Suppress
  Text: zero size arrays are an extension
ext_typedef_without_a_name:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-declarations
  Regex: typedef requires a name
  SFINAE: SFINAE_Suppress
  Text: typedef requires a name
ext_typename_missing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: typename-missing
  Regex: missing 'typename' prior to dependent type name '(.*)(.*)'
  SFINAE: SFINAE_Suppress
  Text: missing 'typename' prior to dependent type name '%0%1'
ext_typename_outside_of_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: '''typename'' occurs outside of a template'
  SFINAE: SFINAE_Suppress
  Text: '''typename'' occurs outside of a template'
ext_undeclared_unqual_id_with_dependent_base:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-template
  Regex: use of undeclared identifier (.*); unqualified lookup into dependent bases of class template (.*) is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ext_undefined_internal_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: undefined-internal-type
  Regex: ISO C\+\+ requires a definition in this translation unit for (?:function|variable) (.*) because its type does not have linkage
  SFINAE: SFINAE_Suppress
  Text: ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
ext_unelaborated_friend_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: unelaborated friend declaration is a C\+\+11 extension; specify '(?:struct|interface|union|class|enum)' to befriend (.*)
  SFINAE: SFINAE_Suppress
  Text: unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
ext_unicode_whitespace:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode-whitespace
  Regex: treating Unicode character as whitespace
  SFINAE: SFINAE_Suppress
  Text: treating Unicode character as whitespace
ext_union_member_of_reference_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-union-member-reference
  Regex: union member (.*) has reference type (.*), which is a Microsoft extension
  SFINAE: SFINAE_Suppress
  Text: union member %0 has reference type %1, which is a Microsoft extension
ext_unknown_escape:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-escape-sequence
  Regex: unknown escape sequence '\\(.*)'
  SFINAE: SFINAE_Suppress
  Text: unknown escape sequence '\%0'
ext_unterminated_char_or_string:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: invalid-pp-token
  Regex: missing terminating (?:'|'"') character
  SFINAE: SFINAE_Suppress
  Text: missing terminating %select{'|'"'}0 character
ext_use_out_of_scope_declaration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: out-of-scope-function
  Regex: use of out-of-scope declaration of (.*)(?:| whose type is not compatible with that of an implicit declaration)
  SFINAE: SFINAE_Suppress
  Text: use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
ext_using_attribute_ns:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: default scope specifier for attributes is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: default scope specifier for attributes is a C++17 extension
ext_using_decl_class_member_enumerator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: member using declaration naming a non-member enumerator is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: member using declaration naming a non-member enumerator is a C++20 extension
ext_using_decl_scoped_enumerator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: using declaration naming a scoped enumerator is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: using declaration naming a scoped enumerator is a C++20 extension
ext_using_declaration_pack:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++17-extensions
  Regex: pack expansion of using declaration is a C\+\+17 extension
  SFINAE: SFINAE_Suppress
  Text: pack expansion of using declaration is a C++17 extension
ext_using_enum_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++20-extensions
  Regex: using enum declaration is a C\+\+20 extension
  SFINAE: SFINAE_Suppress
  Text: using enum declaration is a C++20 extension
ext_using_undefined_std:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: using directive refers to implicitly-defined namespace 'std'
  SFINAE: SFINAE_Suppress
  Text: using directive refers to implicitly-defined namespace 'std'
ext_variable_sized_type_in_struct:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gnu-variable-sized-type-not-at-end
  Regex: field (.*) with variable sized type (.*) not at the end of a struct or class is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
ext_variable_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++14-extensions
  Regex: variable templates are a C\+\+14 extension
  SFINAE: SFINAE_Suppress
  Text: variable templates are a C++14 extension
ext_variadic_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: variadic-macros
  Regex: variadic macros are a C99 feature
  SFINAE: SFINAE_Suppress
  Text: variadic macros are a C99 feature
ext_variadic_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: main
  Regex: '''main'' is not allowed to be declared variadic'
  SFINAE: SFINAE_Suppress
  Text: '''main'' is not allowed to be declared variadic'
ext_variadic_templates:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: c++11-extensions
  Regex: variadic templates are a C\+\+11 extension
  SFINAE: SFINAE_Suppress
  Text: variadic templates are a C++11 extension
ext_vla:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: vla-extension
  Regex: variable length arrays are a C99 feature
  SFINAE: SFINAE_Suppress
  Text: variable length arrays are a C99 feature
ext_vla_folded_to_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gnu-folding-constant
  Regex: variable length array folded to constant array as an extension
  SFINAE: SFINAE_Suppress
  Text: variable length array folded to constant array as an extension
ext_warn_duplicate_declspec:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: duplicate-decl-specifier
  Regex: duplicate '(.*)' declaration specifier
  SFINAE: SFINAE_Suppress
  Text: '%sub{duplicate_declspec}0'
ext_warn_gnu_final:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: __final is a GNU extension, consider using C\+\+11 final
  SFINAE: SFINAE_Suppress
  Text: __final is a GNU extension, consider using C++11 final
ext_wchar_t_sign_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: signed-unsigned-wchar
  Regex: '''(.*)'' cannot be signed or unsigned'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' cannot be signed or unsigned'
fatal_too_many_errors:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_ERROR
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: too many errors emitted, stopping now
  SFINAE: SFINAE_SubstitutionFailure
  Text: too many errors emitted, stopping now
note_access_constrained_by_path:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constrained by (?:|implicitly )(?:private|protected) inheritance here
  SFINAE: SFINAE_Suppress
  Text: constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
note_access_natural:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|implicitly )declared (?:private|protected) here
  SFINAE: SFINAE_Suppress
  Text: '%select{|implicitly }1declared %select{private|protected}0 here'
note_access_protected_restricted_ctordtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: protected (?:constructor|destructor) can only be used to (?:construct|destroy) a base class subobject
  SFINAE: SFINAE_Suppress
  Text: protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
note_access_protected_restricted_noobject:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: must name member using the type of the current context (.*)
  SFINAE: SFINAE_Suppress
  Text: must name member using the type of the current context %0
note_access_protected_restricted_object:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: can only access this member on an object of type (.*)
  SFINAE: SFINAE_Suppress
  Text: can only access this member on an object of type %0
note_add_deprecation_attr:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add a deprecation attribute to the declaration to silence this warning
  SFINAE: SFINAE_Suppress
  Text: add a deprecation attribute to the declaration to silence this warning
note_add_synthesize_directive:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add a '@synthesize' directive
  SFINAE: SFINAE_Suppress
  Text: add a '@synthesize' directive
note_additional_parens_for_variable_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add a pair of parentheses to declare a variable
  SFINAE: SFINAE_Suppress
  Text: add a pair of parentheses to declare a variable
note_addrof_ovl_candidate_disabled_by_enable_if_attr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: candidate function made ineligible by enable_if
  SFINAE: SFINAE_Suppress
  Text: candidate function made ineligible by enable_if
note_alignas_on_declaration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared with (.*) attribute here
  SFINAE: SFINAE_Suppress
  Text: declared with %0 attribute here
note_allocated_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: allocated with 'new(?:\[\]|)' here
  SFINAE: SFINAE_Suppress
  Text: allocated with 'new%select{[]|}0' here
note_also_found:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: also found
  SFINAE: SFINAE_Suppress
  Text: also found
note_ambig_member_ref_object_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: lookup in the object type (.*) refers here
  SFINAE: SFINAE_Suppress
  Text: lookup in the object type %0 refers here
note_ambig_member_ref_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: lookup from the current scope refers here
  SFINAE: SFINAE_Suppress
  Text: lookup from the current scope refers here
note_ambiguous_atomic_constraints:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: similar constraint expressions not considered equivalent; constraint expressions cannot be considered equivalent unless they originate from the same concept
  SFINAE: SFINAE_Suppress
  Text: similar constraint expressions not considered equivalent; constraint expressions cannot be considered equivalent unless they originate from the same concept
note_ambiguous_atomic_constraints_similar_expression:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: similar constraint expression here
  SFINAE: SFINAE_Suppress
  Text: similar constraint expression here
note_ambiguous_candidate:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: candidate found by name lookup is (.*)
  SFINAE: SFINAE_Suppress
  Text: candidate found by name lookup is %q0
note_ambiguous_inherited_constructor_using:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: inherited from base class (.*) here
  SFINAE: SFINAE_Suppress
  Text: inherited from base class %0 here
note_ambiguous_member_found:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member found by ambiguous name lookup
  SFINAE: SFINAE_Suppress
  Text: member found by ambiguous name lookup
note_ambiguous_member_type_found:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member type (.*) found by ambiguous name lookup
  SFINAE: SFINAE_Suppress
  Text: member type %0 found by ambiguous name lookup
note_ambiguous_type_conversion:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because of ambiguity in conversion (?:of \$ to \$|between types)
  SFINAE: SFINAE_Suppress
  Text: because of ambiguity in conversion %diff{of $ to $|between types}0,1
note_anonymous_namespace:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: anonymous namespace begins here
  SFINAE: SFINAE_Suppress
  Text: anonymous namespace begins here
note_arc_bridge:
  ArgsCount: 0
  CategoryName: ARC Casting Rules
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use __bridge to convert directly \(no change in ownership\)
  SFINAE: SFINAE_Suppress
  Text: use __bridge to convert directly (no change in ownership)
note_arc_bridge_retained:
  ArgsCount: 1
  CategoryName: ARC Casting Rules
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use (?:__bridge_retained|CFBridgingRetain call) to make an ARC object available as a \+1 (.*)
  SFINAE: SFINAE_Suppress
  Text: use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
note_arc_bridge_transfer:
  ArgsCount: 1
  CategoryName: ARC Casting Rules
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use (?:__bridge_transfer|CFBridgingRelease call) to transfer ownership of a \+1 (.*) into ARC
  SFINAE: SFINAE_Suppress
  Text: use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
note_arc_cstyle_bridge:
  ArgsCount: 0
  CategoryName: ARC Casting Rules
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use __bridge with C-style cast to convert directly \(no change in ownership\)
  SFINAE: SFINAE_Suppress
  Text: use __bridge with C-style cast to convert directly (no change in ownership)
note_arc_cstyle_bridge_retained:
  ArgsCount: 1
  CategoryName: ARC Casting Rules
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use __bridge_retained with C-style cast to make an ARC object available as a \+1 (.*)
  SFINAE: SFINAE_Suppress
  Text: use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
note_arc_cstyle_bridge_transfer:
  ArgsCount: 1
  CategoryName: ARC Casting Rules
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use __bridge_transfer with C-style cast to transfer ownership of a \+1 (.*) into ARC
  SFINAE: SFINAE_Suppress
  Text: use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
note_arc_field_with_ownership:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: field has non-trivial ownership qualification
  SFINAE: SFINAE_Suppress
  Text: field has non-trivial ownership qualification
note_arc_forbidden_type:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration uses type that is ill-formed in ARC
  SFINAE: SFINAE_Suppress
  Text: declaration uses type that is ill-formed in ARC
note_arc_gained_method_convention:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration in interface is not in the '(?:alloc|copy|init|new)' family because (?:its result type is not an object pointer|its result type is unrelated to its receiver type)
  SFINAE: SFINAE_Suppress
  Text: declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
note_arc_init_returns_unrelated:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: init method must return a type related to its receiver type
  SFINAE: SFINAE_Suppress
  Text: init method must return a type related to its receiver type
note_arc_lost_method_convention:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration in interface
  SFINAE: SFINAE_Suppress
  Text: declaration in interface
note_arc_retain_cycle_owner:
  ArgsCount: 0
  CategoryName: ARC Retain Cycle
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: block will be retained by (?:the captured object|an object strongly retained by the captured object)
  SFINAE: SFINAE_Suppress
  Text: block will be retained by %select{the captured object|an object strongly retained by the captured object}0
note_arc_weak_also_accessed_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: also accessed here
  SFINAE: SFINAE_Suppress
  Text: also accessed here
note_arc_weak_disabled:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration uses __weak, but ARC is disabled
  SFINAE: SFINAE_Suppress
  Text: declaration uses __weak, but ARC is disabled
note_arc_weak_no_runtime:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration uses __weak, which the current deployment target does not support
  SFINAE: SFINAE_Suppress
  Text: declaration uses __weak, which the current deployment target does not support
note_array_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: array (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: array %0 declared here
note_array_init_plain_string_into_char8_t:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add 'u8' prefix to form a 'char8_t' string literal
  SFINAE: SFINAE_Suppress
  Text: add 'u8' prefix to form a 'char8_t' string literal
note_array_size_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conversion to (?:integral|enumeration) type (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: conversion to %select{integral|enumeration}0 type %1 declared here
note_asm_input_duplicate_first:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constraint '(.*)' is already present here
  SFINAE: SFINAE_Suppress
  Text: constraint '%0' is already present here
note_asm_missing_constraint_modifier:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use constraint modifier "(.*)"
  SFINAE: SFINAE_Suppress
  Text: use constraint modifier "%0"
note_assign_lhs_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type (.*) is incomplete
  SFINAE: SFINAE_Suppress
  Text: type %0 is incomplete
note_atomic_constraint_evaluated_to_false:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' evaluated to false
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' evaluated to false'
note_atomic_constraint_evaluated_to_false_elaborated:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' \((.*) (.*) (.*)\) evaluated to false
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' (%2 %3 %4) evaluated to false'
note_atomic_property_fixup_suggest:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
  SFINAE: SFINAE_Suppress
  Text: setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
note_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: attribute is here
  SFINAE: SFINAE_Suppress
  Text: attribute is here
note_attribute_has_no_effect_on_compile_time_if_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: annotating the 'if (?:constexpr|consteval)' statement here
  SFINAE: SFINAE_Suppress
  Text: annotating the 'if %select{constexpr|consteval}0' statement here
note_attribute_has_no_effect_on_infinite_loop_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: annotating the infinite loop here
  SFINAE: SFINAE_Suppress
  Text: annotating the infinite loop here
note_attribute_overloadable_prev_overload:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous (?:unmarked |)overload of function is here
  SFINAE: SFINAE_Suppress
  Text: previous %select{unmarked |}0overload of function is here
note_auto_readonly_iboutlet_fixup_suggest:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: property should be changed to be readwrite
  SFINAE: SFINAE_Suppress
  Text: property should be changed to be readwrite
note_availability_specified_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) has been explicitly marked (?:unavailable|deleted|deprecated) here
  SFINAE: SFINAE_Suppress
  Text: '%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here'
note_await_ready_no_bool_conversion:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: return type of 'await_ready' is required to be contextually convertible to 'bool'
  SFINAE: SFINAE_Suppress
  Text: return type of 'await_ready' is required to be contextually convertible to 'bool'
note_bad_memaccess_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicitly cast the pointer to silence this warning
  SFINAE: SFINAE_Suppress
  Text: explicitly cast the pointer to silence this warning
note_base_class_specified_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: base class (.*) specified here
  SFINAE: SFINAE_Suppress
  Text: base class %0 specified here
note_bitfield_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: bit-field is declared here
  SFINAE: SFINAE_Suppress
  Text: bit-field is declared here
note_block_var_fixit_add_initialization:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to use __block (.*)\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to use __block %0?
note_bracket_depth:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use -fbracket-depth=N to increase maximum nesting level
  SFINAE: SFINAE_Suppress
  Text: use -fbracket-depth=N to increase maximum nesting level
note_called_by:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: called by (.*)
  SFINAE: SFINAE_Suppress
  Text: called by %0
note_called_once_gets_called_twice:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous call is here(?:; set to nil to indicate it cannot be called afterwards|)
  SFINAE: SFINAE_Suppress
  Text: previous call is here%select{; set to nil to indicate it cannot be called afterwards|}0
note_callee_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: '%0 declared here'
note_callee_static_array:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: callee declares array parameter as static here
  SFINAE: SFINAE_Suppress
  Text: callee declares array parameter as static here
note_cannot_use_trivial_abi_reason:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''trivial_abi'' is disallowed on (.*) because (?:its copy constructors and move constructors are all deleted|it is polymorphic|it has a base of a non-trivial class type|it has a virtual base|it has a __weak field|it has a field of a non-trivial class type)'
  SFINAE: SFINAE_Suppress
  Text: '''trivial_abi'' is disallowed on %0 because %select{its copy constructors and move constructors are all deleted|it is polymorphic|it has a base of a non-trivial class type|it has a virtual base|it has a __weak field|it has a field of a non-trivial class type}1'
note_carries_dependency_missing_first_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration missing '\[\[carries_dependency\]\]' attribute is here
  SFINAE: SFINAE_Suppress
  Text: declaration missing '[[carries_dependency]]' attribute is here
note_cast_operand_to_int:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cast one or both operands to int to silence this warning
  SFINAE: SFINAE_Suppress
  Text: cast one or both operands to int to silence this warning
note_cast_to_void:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cast expression to void to silence warning
  SFINAE: SFINAE_Suppress
  Text: cast expression to void to silence warning
note_cat_conform_to_noescape_prot:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:category|class extension) conforms to protocol (.*) which defines method (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{category|class extension}0 conforms to protocol %1 which defines method %2'
note_cc1_round_trip_generated:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'generated arguments #(.*) in round-trip: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'generated arguments #%0 in round-trip: %1'
note_cc1_round_trip_original:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'original arguments in round-trip: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'original arguments in round-trip: %0'
note_change_bitfield_sign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: consider making the bitfield type (?:unsigned|signed)
  SFINAE: SFINAE_Suppress
  Text: consider making the bitfield type %select{unsigned|signed}0
note_change_calling_conv_fixit:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: consider defining (.*) with the '(.*)' calling convention
  SFINAE: SFINAE_Suppress
  Text: consider defining %0 with the '%1' calling convention
note_checking_constraints_for_class_spec_id_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking constraint satisfaction for class template partial specialization '(.*)' required here
  SFINAE: SFINAE_Suppress
  Text: while checking constraint satisfaction for class template partial specialization '%0' required here
note_checking_constraints_for_function_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking constraint satisfaction for function '(.*)' required here
  SFINAE: SFINAE_Suppress
  Text: while checking constraint satisfaction for function '%0' required here
note_checking_constraints_for_template_id_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking constraint satisfaction for template '(.*)' required here
  SFINAE: SFINAE_Suppress
  Text: while checking constraint satisfaction for template '%0' required here
note_checking_constraints_for_var_spec_id_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking constraint satisfaction for variable template partial specialization '(.*)' required here
  SFINAE: SFINAE_Suppress
  Text: while checking constraint satisfaction for variable template partial specialization '%0' required here
note_class_declared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class is declared here
  SFINAE: SFINAE_Suppress
  Text: class is declared here
note_cocoa_naming_declare_family:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicitly declare getter (.*) with '(.*)' to return an 'unowned' object
  SFINAE: SFINAE_Suppress
  Text: explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
note_collapse_loop_count:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: parameter of the 'collapse' clause
  SFINAE: SFINAE_Suppress
  Text: parameter of the 'collapse' clause
note_comparison_synthesized_at:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in defaulted (?:<ERROR>|equality|three-way|equality|relational) comparison operator for (.*) first required here
  SFINAE: SFINAE_Suppress
  Text: in defaulted %sub{select_defaulted_comparison_kind}0 for %1 first required here
note_compat_assoc:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: compatible type (.*) specified here
  SFINAE: SFINAE_Suppress
  Text: compatible type %0 specified here
note_compound_token_split_second_token_here:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|second )(.*) token is here
  SFINAE: SFINAE_Suppress
  Text: '%select{|second }0%1 token is here'
note_concatenated_string_literal_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: place parentheses around the string literal to silence warning
  SFINAE: SFINAE_Suppress
  Text: place parentheses around the string literal to silence warning
note_concept_specialization_constraint_evaluated_to_false:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' evaluated to false
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' evaluated to false'
note_concept_specialization_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking the satisfaction of concept '(.*)' requested here
  SFINAE: SFINAE_Suppress
  Text: while checking the satisfaction of concept '%0' requested here
note_condition_assign_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: place parentheses around the assignment to silence this warning
  SFINAE: SFINAE_Suppress
  Text: place parentheses around the assignment to silence this warning
note_condition_assign_to_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '==' to turn this assignment into an equality comparison
  SFINAE: SFINAE_Suppress
  Text: use '==' to turn this assignment into an equality comparison
note_condition_or_assign_to_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '!=' to turn this compound assignment into an inequality comparison
  SFINAE: SFINAE_Suppress
  Text: use '!=' to turn this compound assignment into an inequality comparison
note_conflicting_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conflicting attribute is here
  SFINAE: SFINAE_Suppress
  Text: conflicting attribute is here
note_conflicting_try_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conflicting (.*) here
  SFINAE: SFINAE_Suppress
  Text: conflicting %0 here
note_consteval_address_accessible:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:pointer|reference) to a consteval declaration is not a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{pointer|reference}0 to a consteval declaration is not a constant expression'
note_constexpr_access_deleted_object:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of) heap allocated object that has been deleted
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 heap allocated object that has been deleted'
note_constexpr_access_inactive_union_member:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of) member (.*) of union with (?:active member (.*)|no active member) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression'
note_constexpr_access_mutable:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of) mutable member (.*) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 mutable member %1 is not allowed in a constant expression'
note_constexpr_access_null:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of) dereferenced null pointer is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced null pointer is not allowed in a constant expression'
note_constexpr_access_past_end:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of) dereferenced one-past-the-end pointer is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression'
note_constexpr_access_static_temporary:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|reconstruction of|destruction of) temporary is not allowed in a constant expression outside the expression that created the temporary
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|reconstruction of|destruction of}0 temporary is not allowed in a constant expression outside the expression that created the temporary'
note_constexpr_access_uninit:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of) (?:object outside its lifetime|uninitialized object) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 %select{object outside its lifetime|uninitialized object}1 is not allowed in a constant expression'
note_constexpr_access_unreadable_object:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of) object '(.*)' whose value is not known
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 object ''%1'' whose value is not known'
note_constexpr_access_unsized_array:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of) element of array without known bound is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 element of array without known bound is not allowed in a constant expression'
note_constexpr_access_volatile_obj:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>) volatile (?:temporary|object (.*)|member (.*)) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression'
note_constexpr_access_volatile_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>) volatile-qualified type (.*) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile-qualified type %1 is not allowed in a constant expression'
note_constexpr_alignment_adjust:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot constant evaluate the result of adjusting alignment to (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot constant evaluate the result of adjusting alignment to %0
note_constexpr_alignment_compute:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot constant evaluate whether run-time alignment is at least (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot constant evaluate whether run-time alignment is at least %0
note_constexpr_alignment_too_big:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: requested alignment must be (.*) or less for type (.*); (.*) is invalid
  SFINAE: SFINAE_Suppress
  Text: requested alignment must be %0 or less for type %1; %2 is invalid
note_constexpr_array_index:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot refer to element (.*) of (?:array of (.*) element(?:|s)|non-array object) in a constant expression
  SFINAE: SFINAE_Suppress
  Text: cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
note_constexpr_baa_insufficient_alignment:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:alignment of|offset of the aligned pointer from) the base pointee object \((.*) (?:byte|bytes)\) is (?:less than|not a multiple of) the asserted (.*) (?:byte|bytes)
  SFINAE: SFINAE_Suppress
  Text: '%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2'
note_constexpr_baa_value_insufficient_alignment:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: value of the aligned pointer \((.*)\) is not a multiple of the asserted (.*) (?:byte|bytes)
  SFINAE: SFINAE_Suppress
  Text: value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
note_constexpr_bit_cast_indet_dest:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: indeterminate value can only initialize an object of type 'unsigned char'(?:, 'char',|) or 'std::byte'; (.*) is invalid
  SFINAE: SFINAE_Suppress
  Text: indeterminate value can only initialize an object of type 'unsigned char'%select{, 'char',|}1 or 'std::byte'; %0 is invalid
note_constexpr_bit_cast_invalid_subtype:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: invalid type (.*) is a (?:member|base) of (.*)
  SFINAE: SFINAE_Suppress
  Text: invalid type %0 is a %select{member|base}1 of %2
note_constexpr_bit_cast_invalid_type:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: bit_cast (?:from|to) a (?:|type with a )(?:union|pointer|member pointer|volatile|reference) (?:type|member) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: bit_cast %select{from|to}0 a %select{|type with a }1%select{union|pointer|member pointer|volatile|reference}2 %select{type|member}1 is not allowed in a constant expression
note_constexpr_bit_cast_unrepresentable_value:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: value (.*) cannot be represented in type (.*)
  SFINAE: SFINAE_Suppress
  Text: value %1 cannot be represented in type %0
note_constexpr_bit_cast_unsupported_bitfield:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constexpr bit_cast involving bit-field is not yet supported
  SFINAE: SFINAE_Suppress
  Text: constexpr bit_cast involving bit-field is not yet supported
note_constexpr_bit_cast_unsupported_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constexpr bit_cast involving type (.*) is not yet supported
  SFINAE: SFINAE_Suppress
  Text: constexpr bit_cast involving type %0 is not yet supported
note_constexpr_body_previous_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous return statement is here
  SFINAE: SFINAE_Suppress
  Text: previous return statement is here
note_constexpr_call_here:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in call to '(.*)'
  SFINAE: SFINAE_Suppress
  Text: in call to '%0'
note_constexpr_call_limit_exceeded:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constexpr evaluation hit maximum call limit
  SFINAE: SFINAE_Suppress
  Text: constexpr evaluation hit maximum call limit
note_constexpr_calls_suppressed:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: \(skipping (.*) calls? in backtrace; use -fconstexpr-backtrace-limit=0 to see all\)
  SFINAE: SFINAE_Suppress
  Text: (skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
note_constexpr_compare_virtual_mem_ptr:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: comparison of pointer to virtual member function (.*) has unspecified value
  SFINAE: SFINAE_Suppress
  Text: comparison of pointer to virtual member function %0 has unspecified value
note_constexpr_conditional_never_const:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: both arms of conditional operator are unable to produce a constant expression
  SFINAE: SFINAE_Suppress
  Text: both arms of conditional operator are unable to produce a constant expression
note_constexpr_construct_complex_elem:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: construction of individual component of complex number is not yet supported in constant expressions
  SFINAE: SFINAE_Suppress
  Text: construction of individual component of complex number is not yet supported in constant expressions
note_constexpr_ctor_missing_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member not initialized by constructor
  SFINAE: SFINAE_Suppress
  Text: member not initialized by constructor
note_constexpr_deallocate_null:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''std::allocator<\.\.\.>::deallocate'' used to delete a null pointer'
  SFINAE: SFINAE_Suppress
  Text: '''std::allocator<...>::deallocate'' used to delete a null pointer'
note_constexpr_delete_base_nonvirt_dtor:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: delete of object with dynamic type (.*) through pointer to base class type (.*) with non-virtual destructor
  SFINAE: SFINAE_Suppress
  Text: delete of object with dynamic type %1 through pointer to base class type %0 with non-virtual destructor
note_constexpr_delete_not_heap_alloc:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: delete of pointer '(.*)' that does not point to a heap-allocated object
  SFINAE: SFINAE_Suppress
  Text: delete of pointer '%0' that does not point to a heap-allocated object
note_constexpr_delete_subobject:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'delete of pointer(?: to subobject|) ''(.*)'' (?:|that does not point to complete object)'
  SFINAE: SFINAE_Suppress
  Text: delete of pointer%select{ to subobject|}1 '%0' %select{|that does not point to complete object}1
note_constexpr_depth_limit_exceeded:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constexpr evaluation exceeded maximum depth of (.*) calls
  SFINAE: SFINAE_Suppress
  Text: constexpr evaluation exceeded maximum depth of %0 calls
note_constexpr_destroy_complex_elem:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: destruction of individual component of complex number is not yet supported in constant expressions
  SFINAE: SFINAE_Suppress
  Text: destruction of individual component of complex number is not yet supported in constant expressions
note_constexpr_destroy_out_of_lifetime:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: destroying object '(.*)' whose lifetime has already ended
  SFINAE: SFINAE_Suppress
  Text: destroying object '%0' whose lifetime has already ended
note_constexpr_double_delete:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: delete of pointer that has already been deleted
  SFINAE: SFINAE_Suppress
  Text: delete of pointer that has already been deleted
note_constexpr_double_destroy:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: destruction of object that is already being destroyed
  SFINAE: SFINAE_Suppress
  Text: destruction of object that is already being destroyed
note_constexpr_dtor_subobject:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:data member (.*)|base class (.*)) declared here
  SFINAE: SFINAE_Suppress
  Text: '%select{data member %1|base class %2}0 declared here'
note_constexpr_dynamic_alloc:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:pointer|reference) to (?:|subobject of )heap-allocated object is not a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{pointer|reference}0 to %select{|subobject of }1heap-allocated object is not a constant expression'
note_constexpr_dynamic_alloc_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: heap allocation performed here
  SFINAE: SFINAE_Suppress
  Text: heap allocation performed here
note_constexpr_dynamic_cast_to_reference_failed:
  ArgsCount: 8
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'reference dynamic_cast failed: (?:static type (.*) of operand is a non-public base class of dynamic type (.*)|dynamic type (.*) of operand does not have a base class of type (.*)|(.*) is an ambiguous base class of dynamic type (.*) of operand|(.*) is a non-public base class of dynamic type (.*) of operand)'
  SFINAE: SFINAE_Suppress
  Text: 'reference dynamic_cast failed: %select{static type %1 of operand is a non-public base class of dynamic type %2|dynamic type %2 of operand does not have a base class of type %3|%3 is an ambiguous base class of dynamic type %2 of operand|%3 is a non-public base class of dynamic type %2 of operand}0'
note_constexpr_dynamic_rounding:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot evaluate this expression if rounding mode is dynamic
  SFINAE: SFINAE_Suppress
  Text: cannot evaluate this expression if rounding mode is dynamic
note_constexpr_float_arithmetic:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: floating point arithmetic produces (?:an infinity|a NaN)
  SFINAE: SFINAE_Suppress
  Text: floating point arithmetic produces %select{an infinity|a NaN}0
note_constexpr_float_arithmetic_strict:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: compile time floating point arithmetic suppressed in strict evaluation modes
  SFINAE: SFINAE_Suppress
  Text: compile time floating point arithmetic suppressed in strict evaluation modes
note_constexpr_function_param_value_unknown:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: function parameter (.*) with unknown value cannot be used in a constant expression
  SFINAE: SFINAE_Suppress
  Text: function parameter %0 with unknown value cannot be used in a constant expression
note_constexpr_heap_alloc_limit_exceeded:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constexpr evaluation hit maximum heap allocation limit
  SFINAE: SFINAE_Suppress
  Text: constexpr evaluation hit maximum heap allocation limit
note_constexpr_inherited_ctor_call_here:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in implicit initialization for inherited constructor of (.*)
  SFINAE: SFINAE_Suppress
  Text: in implicit initialization for inherited constructor of %0
note_constexpr_invalid_alignment:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: requested alignment (.*) is not a positive power of two
  SFINAE: SFINAE_Suppress
  Text: requested alignment %0 is not a positive power of two
note_constexpr_invalid_cast:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from (.*)) is not allowed in a constant expression(?:| in C\+\+ standards before C\+\+20||)
  SFINAE: SFINAE_Suppress
  Text: '%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression%select{| in C++ standards before C++20||}0'
note_constexpr_invalid_downcast:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot cast object of dynamic type (.*) to type (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot cast object of dynamic type %0 to type %1
note_constexpr_invalid_function:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:non-constexpr|undefined) (?:function|constructor) (.*) cannot be used in a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression'
note_constexpr_invalid_inhctor:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constructor inherited from base class (.*) cannot be used in a constant expression; derived class cannot be implicitly initialized
  SFINAE: SFINAE_Suppress
  Text: constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
note_constexpr_invalid_template_arg:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:pointer|reference) to (?:|subobject of )(?:type_info object|string literal|temporary object|predefined '(.*)' variable) is not allowed in a template argument
  SFINAE: SFINAE_Suppress
  Text: '%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined ''%3'' variable}2 is not allowed in a template argument'
note_constexpr_large_shift:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: shift count (.*) >= width of type (.*) \((.*) bits?\)
  SFINAE: SFINAE_Suppress
  Text: shift count %0 >= width of type %1 (%2 bit%s2)
note_constexpr_lifetime_ended:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of) (?:temporary|variable) whose (?:storage duration|lifetime) has ended
  SFINAE: SFINAE_Suppress
  Text: '%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 %select{temporary|variable}1 whose %plural{8:storage duration|:lifetime}0 has ended'
note_constexpr_lshift_discards:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: signed left shift discards bits
  SFINAE: SFINAE_Suppress
  Text: signed left shift discards bits
note_constexpr_lshift_of_negative:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: left shift of negative value (.*)
  SFINAE: SFINAE_Suppress
  Text: left shift of negative value %0
note_constexpr_ltor_incomplete_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: read of incomplete type (.*) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: read of incomplete type %0 is not allowed in a constant expression
note_constexpr_ltor_non_const_int:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: read of non-const variable (.*) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: read of non-const variable %0 is not allowed in a constant expression
note_constexpr_ltor_non_constexpr:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: read of non-constexpr variable (.*) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: read of non-constexpr variable %0 is not allowed in a constant expression
note_constexpr_ltor_non_integral:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: read of variable (.*) of non-integral, non-enumeration type (.*) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: read of variable %0 of non-integral, non-enumeration type %1 is not allowed in a constant expression
note_constexpr_memchr_unsupported:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constant evaluation of (.*) on array of type (.*) is not supported; only arrays of narrow character types can be searched
  SFINAE: SFINAE_Suppress
  Text: constant evaluation of %0 on array of type %1 is not supported; only arrays of narrow character types can be searched
note_constexpr_memcmp_unsupported:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constant evaluation of (.*) between arrays of types (.*) and (.*) is not supported; only arrays of narrow character types can be compared
  SFINAE: SFINAE_Suppress
  Text: constant evaluation of %0 between arrays of types %1 and %2 is not supported; only arrays of narrow character types can be compared
note_constexpr_memcpy_incomplete_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot constant evaluate '(?:memcpy|memmove)' between objects of incomplete type (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot constant evaluate '%select{memcpy|memmove}0' between objects of incomplete type %1
note_constexpr_memcpy_nontrivial:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot constant evaluate '(?:memcpy|memmove)' between objects of non-trivially-copyable type (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
note_constexpr_memcpy_null:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:source|destination) of '(?:(?:memcpy|wmemcpy)|(?:memmove|wmemmove))' is (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{source|destination}2 of ''%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0'' is %3'
note_constexpr_memcpy_overlap:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(?:memcpy|wmemcpy)'' between overlapping memory regions'
  SFINAE: SFINAE_Suppress
  Text: '''%select{memcpy|wmemcpy}0'' between overlapping memory regions'
note_constexpr_memcpy_type_pun:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot constant evaluate '(?:memcpy|memmove)' from object of type (.*) to object of type (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
note_constexpr_memcpy_unsupported:
  ArgsCount: 7
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(?:(?:memcpy|wmemcpy)|(?:memmove|wmemmove))'' not supported: (?:size to copy \((.*)\) is not a multiple of size of element type (.*) \((.*)\)|source is not a contiguous array of at least (.*) elements of type (.*)|destination is not a contiguous array of at least (.*) elements of type (.*))'
  SFINAE: SFINAE_Suppress
  Text: '''%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0'' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2'
note_constexpr_memory_leak:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: allocation performed here was not deallocated(?:| \(along with (.*) other memory leaks?\))
  SFINAE: SFINAE_Suppress
  Text: 'allocation performed here was not deallocated%plural{0:|: (along with %0 other memory leak%s0)}0'
note_constexpr_modify_const_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: modification of object of const-qualified type (.*) is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: modification of object of const-qualified type %0 is not allowed in a constant expression
note_constexpr_modify_global:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: a constant expression cannot modify an object that is visible outside that expression
  SFINAE: SFINAE_Suppress
  Text: a constant expression cannot modify an object that is visible outside that expression
note_constexpr_negative_shift:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: negative shift count (.*)
  SFINAE: SFINAE_Suppress
  Text: negative shift count %0
note_constexpr_new:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: dynamic memory allocation is not permitted in constant expressions until C\+\+20
  SFINAE: SFINAE_Suppress
  Text: dynamic memory allocation is not permitted in constant expressions until C++20
note_constexpr_new_delete_mismatch:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:'delete' used to delete pointer to object allocated with 'std::allocator<\.\.\.>::allocate'|(?:non-array delete|array delete|'std::allocator<\.\.\.>::deallocate') used to delete pointer to (?:array object of type (.*)|non-array object of type (.*)|object allocated with 'new'))
  SFINAE: SFINAE_Suppress
  Text: '%plural{2:''delete'' used to delete pointer to object allocated with ''std::allocator<...>::allocate''|:%select{non-array delete|array delete|''std::allocator<...>::deallocate''}0 used to delete pointer to %select{array object of type %2|non-array object of type %2|object allocated with ''new''}0}1'
note_constexpr_new_negative:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot allocate array; evaluated array bound (.*) is negative
  SFINAE: SFINAE_Suppress
  Text: cannot allocate array; evaluated array bound %0 is negative
note_constexpr_new_non_replaceable:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: call to (?:placement|class-specific) (.*)
  SFINAE: SFINAE_Suppress
  Text: call to %select{placement|class-specific}0 %1
note_constexpr_new_not_complete_object_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot allocate memory of (?:incomplete|function) type (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot allocate memory of %select{incomplete|function}0 type %1
note_constexpr_new_placement:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: this placement new expression is not yet supported in constant expressions
  SFINAE: SFINAE_Suppress
  Text: this placement new expression is not yet supported in constant expressions
note_constexpr_new_too_large:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot allocate array; evaluated array bound (.*) is too large
  SFINAE: SFINAE_Suppress
  Text: cannot allocate array; evaluated array bound %0 is too large
note_constexpr_new_too_small:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot allocate array; evaluated array bound (.*) is too small to hold (.*) explicitly initialized elements
  SFINAE: SFINAE_Suppress
  Text: cannot allocate array; evaluated array bound %0 is too small to hold %1 explicitly initialized elements
note_constexpr_new_untyped:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot allocate untyped memory in a constant expression; use 'std::allocator<T>::allocate' to allocate memory of type 'T'
  SFINAE: SFINAE_Suppress
  Text: cannot allocate untyped memory in a constant expression; use 'std::allocator<T>::allocate' to allocate memory of type 'T'
note_constexpr_no_return:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: control reached end of constexpr function
  SFINAE: SFINAE_Suppress
  Text: control reached end of constexpr function
note_constexpr_non_global:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:pointer|reference) to (?:|subobject of )(?:temporary|(.*)) is not a constant expression
  SFINAE: SFINAE_Suppress
  Text: '%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression'
note_constexpr_nonliteral:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-literal type (.*) cannot be used in a constant expression
  SFINAE: SFINAE_Suppress
  Text: non-literal type %0 cannot be used in a constant expression
note_constexpr_not_static:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: address of non-static constexpr variable (.*) may differ on each invocation of the enclosing function; add 'static' to give it a constant address
  SFINAE: SFINAE_Suppress
  Text: address of non-static constexpr variable %0 may differ on each invocation of the enclosing function; add 'static' to give it a constant address
note_constexpr_null_subobject:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot (?:access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|access real component of|access imaginary component of) null pointer
  SFINAE: SFINAE_Suppress
  Text: cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|access real component of|access imaginary component of}0 null pointer
note_constexpr_operator_new_bad_size:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: allocated size (.*) is not a multiple of size (.*) of element type (.*)
  SFINAE: SFINAE_Suppress
  Text: allocated size %0 is not a multiple of size %1 of element type %2
note_constexpr_overflow:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: value (.*) is outside the range of representable values of type (.*)
  SFINAE: SFINAE_Suppress
  Text: value %0 is outside the range of representable values of type %1
note_constexpr_past_end:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: dereferenced pointer past the end of (?:|subobject of )(?:temporary|(.*)) is not a constant expression
  SFINAE: SFINAE_Suppress
  Text: dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
note_constexpr_past_end_subobject:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot (?:access base class of|access derived class of|access field of|access array element of|ERROR|access real component of|access imaginary component of) pointer past the end of object
  SFINAE: SFINAE_Suppress
  Text: cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|access real component of|access imaginary component of}0 pointer past the end of object
note_constexpr_placement_new_wrong_type:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: placement new would change type of storage from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: placement new would change type of storage from %0 to %1
note_constexpr_pointer_comparison_base_classes:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: comparison of addresses of subobjects of different base classes has unspecified value
  SFINAE: SFINAE_Suppress
  Text: comparison of addresses of subobjects of different base classes has unspecified value
note_constexpr_pointer_comparison_base_field:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: comparison of address of base class subobject (.*) of class (.*) to field (.*) has unspecified value
  SFINAE: SFINAE_Suppress
  Text: comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
note_constexpr_pointer_comparison_differing_access:
  ArgsCount: 5
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: comparison of address of fields (.*) and (.*) of (.*) with differing access specifiers \((.*) vs (.*)\) has unspecified value
  SFINAE: SFINAE_Suppress
  Text: comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
note_constexpr_pointer_comparison_unspecified:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: comparison has unspecified value
  SFINAE: SFINAE_Suppress
  Text: comparison has unspecified value
note_constexpr_pointer_subtraction_not_same_array:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: subtracted pointers are not elements of the same array
  SFINAE: SFINAE_Suppress
  Text: subtracted pointers are not elements of the same array
note_constexpr_pointer_subtraction_zero_size:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: subtraction of pointers to type (.*) of zero size
  SFINAE: SFINAE_Suppress
  Text: subtraction of pointers to type %0 of zero size
note_constexpr_polymorphic_unknown_dynamic_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|||||virtual function called on|dynamic_cast applied to|typeid applied to|construction of|destruction of) object '(.*)' whose dynamic type is not constant
  SFINAE: SFINAE_Suppress
  Text: '%select{|||||virtual function called on|dynamic_cast applied to|typeid applied to|construction of|destruction of}0 object ''%1'' whose dynamic type is not constant'
note_constexpr_pseudo_destructor:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: pseudo-destructor call is not permitted in constant expressions until C\+\+20
  SFINAE: SFINAE_Suppress
  Text: pseudo-destructor call is not permitted in constant expressions until C++20
note_constexpr_pure_virtual_call:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: pure virtual function (.*) called
  SFINAE: SFINAE_Suppress
  Text: pure virtual function %q0 called
note_constexpr_step_limit_exceeded:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constexpr evaluation hit maximum step limit; possible infinite loop\?
  SFINAE: SFINAE_Suppress
  Text: constexpr evaluation hit maximum step limit; possible infinite loop?
note_constexpr_stmt_expr_unsupported:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: this use of statement expressions is not supported in a constant expression
  SFINAE: SFINAE_Suppress
  Text: this use of statement expressions is not supported in a constant expression
note_constexpr_subobject_declared_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: subobject declared here
  SFINAE: SFINAE_Suppress
  Text: subobject declared here
note_constexpr_temporary_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: temporary created here
  SFINAE: SFINAE_Suppress
  Text: temporary created here
note_constexpr_this:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|implicit )use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
  SFINAE: SFINAE_Suppress
  Text: '%select{|implicit }0use of ''this'' pointer is only allowed within the evaluation of a call to a ''constexpr'' member function'
note_constexpr_typeid_polymorphic:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: typeid applied to expression of polymorphic type (.*) is not allowed in a constant expression in C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: typeid applied to expression of polymorphic type %0 is not allowed in a constant expression in C++ standards before C++20
note_constexpr_uninitialized:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|sub)object of type (.*) is not initialized
  SFINAE: SFINAE_Suppress
  Text: '%select{|sub}0object of type %1 is not initialized'
note_constexpr_union_member_change_during_init:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: assignment would change active union member during the initialization of a different member of the same union
  SFINAE: SFINAE_Suppress
  Text: assignment would change active union member during the initialization of a different member of the same union
note_constexpr_unsized_array_indexed:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: indexing of array without known bound is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: indexing of array without known bound is not allowed in a constant expression
note_constexpr_unsupported_destruction:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-trivial destruction of type (.*) in a constant expression is not supported
  SFINAE: SFINAE_Suppress
  Text: non-trivial destruction of type %0 in a constant expression is not supported
note_constexpr_unsupported_layout:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type (.*) has unexpected layout
  SFINAE: SFINAE_Suppress
  Text: type %0 has unexpected layout
note_constexpr_unsupported_temporary_nontrivial_dtor:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-trivial destruction of lifetime-extended temporary with type (.*) used in the result of a constant expression is not yet supported
  SFINAE: SFINAE_Suppress
  Text: non-trivial destruction of lifetime-extended temporary with type %0 used in the result of a constant expression is not yet supported
note_constexpr_unsupported_unsized_array:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: array-to-pointer decay of array member without known bound is not supported
  SFINAE: SFINAE_Suppress
  Text: array-to-pointer decay of array member without known bound is not supported
note_constexpr_use_uninit_reference:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use of reference outside its lifetime is not allowed in a constant expression
  SFINAE: SFINAE_Suppress
  Text: use of reference outside its lifetime is not allowed in a constant expression
note_constexpr_var_init_non_constant:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: initializer of (.*) is not a constant expression
  SFINAE: SFINAE_Suppress
  Text: initializer of %0 is not a constant expression
note_constexpr_var_init_unknown:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: initializer of (.*) is unknown
  SFINAE: SFINAE_Suppress
  Text: initializer of %0 is unknown
note_constexpr_var_init_weak:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: initializer of weak variable (.*) is not considered constant because it may be different at runtime
  SFINAE: SFINAE_Suppress
  Text: initializer of weak variable %0 is not considered constant because it may be different at runtime
note_constexpr_virtual_base:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot construct object of type (.*) with virtual base class in a constant expression
  SFINAE: SFINAE_Suppress
  Text: cannot construct object of type %0 with virtual base class in a constant expression
note_constexpr_virtual_base_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: virtual base class declared here
  SFINAE: SFINAE_Suppress
  Text: virtual base class declared here
note_constexpr_virtual_call:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot evaluate call to virtual function in a constant expression in C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: cannot evaluate call to virtual function in a constant expression in C++ standards before C++20
note_constexpr_void_comparison:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: comparison between unequal pointers to void has unspecified result
  SFINAE: SFINAE_Suppress
  Text: comparison between unequal pointers to void has unspecified result
note_constexpr_volatile_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: volatile (?:temporary created|object declared|member declared) here
  SFINAE: SFINAE_Suppress
  Text: volatile %select{temporary created|object declared|member declared}0 here
note_constinit_missing_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add the (?:'require_constant_initialization' attribute|'constinit' specifier) to the initializing declaration here
  SFINAE: SFINAE_Suppress
  Text: add the %select{'require_constant_initialization' attribute|'constinit' specifier}0 to the initializing declaration here
note_constinit_specified_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: variable declared constinit here
  SFINAE: SFINAE_Suppress
  Text: variable declared constinit here
note_constraint_normalization_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while calculating associated constraint of template '(.*)' here
  SFINAE: SFINAE_Suppress
  Text: while calculating associated constraint of template '%0' here
note_constraint_substitution_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while substituting template arguments into constraint expression here
  SFINAE: SFINAE_Suppress
  Text: while substituting template arguments into constraint expression here
note_conv_function_declared_at:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type conversion function declared here
  SFINAE: SFINAE_Suppress
  Text: type conversion function declared here
note_convert_inline_to_static:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use 'static' to give inline function (.*) internal linkage
  SFINAE: SFINAE_Suppress
  Text: use 'static' to give inline function %0 internal linkage
note_coroutine_function_declare_noexcept:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: must be declared with 'noexcept'
  SFINAE: SFINAE_Suppress
  Text: must be declared with 'noexcept'
note_coroutine_promise_call_implicitly_required:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: call to (.*) implicitly required by coroutine function here
  SFINAE: SFINAE_Suppress
  Text: call to %0 implicitly required by coroutine function here
note_coroutine_promise_implicit_await_transform_required_here:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: call to 'await_transform' implicitly required by 'co_await' here
  SFINAE: SFINAE_Suppress
  Text: call to 'await_transform' implicitly required by 'co_await' here
note_coroutine_promise_suspend_implicitly_required:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: call to '(?:initial_suspend|final_suspend)' implicitly required by the (?:initial suspend point|final suspend point)
  SFINAE: SFINAE_Suppress
  Text: call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
note_covariant_thunk:
  ArgsCount: 1
  CategoryName: VTable ABI Issue
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: covariant thunk required by (.*)
  SFINAE: SFINAE_Suppress
  Text: covariant thunk required by %0
note_cuda_conflicting_device_function_declared_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conflicting __device__ function declared here
  SFINAE: SFINAE_Suppress
  Text: conflicting __device__ function declared here
note_cuda_const_var_unpromoted:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: const variable cannot be emitted on device side due to dynamic initialization
  SFINAE: SFINAE_Suppress
  Text: const variable cannot be emitted on device side due to dynamic initialization
note_cuda_device_builtin_surftex_cls_should_have_match_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the (?:1st|2nd|3rd) template parameter of (.*) needs to be (?:a type|an integer or enum value)
  SFINAE: SFINAE_Suppress
  Text: the %select{1st|2nd|3rd}1 template parameter of %0 needs to be %select{a type|an integer or enum value}2
note_cuda_device_builtin_surftex_cls_should_have_n_args:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) needs to have exactly (.*) template parameters
  SFINAE: SFINAE_Suppress
  Text: '%0 needs to have exactly %1 template parameters'
note_cuda_device_builtin_surftex_should_be_template_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) needs to be instantiated from a class template with proper template arguments
  SFINAE: SFINAE_Suppress
  Text: '%0 needs to be instantiated from a class template with proper template arguments'
note_cuda_host_var:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: host variable declared here
  SFINAE: SFINAE_Suppress
  Text: host variable declared here
note_cuda_ovl_candidate_target_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: target attributes do not match'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: target attributes do not match'
note_cxx20_compat_utf8_string_remove_u8:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
  SFINAE: SFINAE_Suppress
  Text: remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
note_decl_hiding_tag_type:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) (.*) is hidden by a non-type declaration of (.*) here
  SFINAE: SFINAE_Suppress
  Text: '%1 %0 is hidden by a non-type declaration of %0 here'
note_decl_unguarded_availability_silence:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: annotate (?:(.*)|anonymous (.*)) with an availability attribute to silence this warning
  SFINAE: SFINAE_Suppress
  Text: annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
note_declaration_not_a_prototype:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: this declaration is not a prototype; add (?:'void'|parameter declarations) to make it (?:a prototype for a zero-parameter function|one)
  SFINAE: SFINAE_Suppress
  Text: this declaration is not a prototype; add %select{'void'|parameter declarations}0 to make it %select{a prototype for a zero-parameter function|one}0
note_declare_parameter_strong:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
  SFINAE: SFINAE_Suppress
  Text: declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
note_declared_at:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared here
  SFINAE: SFINAE_Suppress
  Text: declared here
note_declared_coroutine_here:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: function is a coroutine due to use of '(.*)' here
  SFINAE: SFINAE_Suppress
  Text: function is a coroutine due to use of '%0' here
note_declared_nonnull:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared (?:'returns_nonnull'|'nonnull') here
  SFINAE: SFINAE_Suppress
  Text: declared %select{'returns_nonnull'|'nonnull'}0 here
note_declared_required_constant_init_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: required by (?:'require_constant_initialization' attribute|'constinit' specifier) here
  SFINAE: SFINAE_Suppress
  Text: required by %select{'require_constant_initialization' attribute|'constinit' specifier}0 here
note_deduced_template_arg_substitution_here:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: during template argument deduction for (?:class|variable) template (?:partial specialization |)(.*) (.*)
  SFINAE: SFINAE_Suppress
  Text: during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
note_deduction_guide_access:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: deduction guide declared (.*) by intervening access specifier
  SFINAE: SFINAE_Suppress
  Text: deduction guide declared %0 by intervening access specifier
note_deduction_guide_template_access:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member template declared (.*) here
  SFINAE: SFINAE_Suppress
  Text: member template declared %0 here
note_default_arg_instantiation_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of default argument for '(.*)' required here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of default argument for '%0' required here
note_default_argument_declared_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: default argument declared here
  SFINAE: SFINAE_Suppress
  Text: default argument declared here
note_default_function_arg_instantiation_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of default function argument expression for '(.*)' required here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of default function argument expression for '%0' required here
note_default_member_initializer_not_yet_parsed:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: default member initializer declared here
  SFINAE: SFINAE_Suppress
  Text: default member initializer declared here
note_defaulted_comparison_ambiguous:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defaulted (.*) is implicitly deleted because implied (?:|'==' |'<' )comparison (?:|for member (.*) |for base class (.*) )is ambiguous
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because implied %select{|'==' |'<' }1comparison %select{|for member %3 |for base class %3 }2is ambiguous
note_defaulted_comparison_calls_deleted:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defaulted (.*) is implicitly deleted because it would invoke a deleted comparison function(?:| for member (.*)| for base class (.*))
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because it would invoke a deleted comparison function%select{| for member %2| for base class %2}1
note_defaulted_comparison_cannot_deduce:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: return type of defaulted 'operator<=>' cannot be deduced because return type (.*) of three-way comparison for (?:|member|base class) (.*) is not a standard comparison category type
  SFINAE: SFINAE_Suppress
  Text: return type of defaulted 'operator<=>' cannot be deduced because return type %2 of three-way comparison for %select{|member|base class}0 %1 is not a standard comparison category type
note_defaulted_comparison_cannot_deduce_callee:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: selected 'operator<=>' for (?:|member|base class) (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: selected 'operator<=>' for %select{|member|base class}0 %1 declared here
note_defaulted_comparison_cannot_deduce_undeduced_auto:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|member|base class) (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: '%select{|member|base class}0 %1 declared here'
note_defaulted_comparison_inaccessible:
  ArgsCount: 6
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'defaulted (.*) is implicitly deleted because it would invoke a (?:private|protected) (.*)(?: member of (.*)| member of (.*) to compare member (.*)| to compare base class (.*))'
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because it would invoke a %select{private|protected}3 %4%select{ member of %6| member of %6 to compare member %2| to compare base class %2}1
note_defaulted_comparison_no_viable_function:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defaulted (.*) is implicitly deleted because there is no viable (?:three-way comparison function|'operator==') for (?:|member |base class )(.*)
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because there is no viable %select{three-way comparison function|'operator=='}1 for %select{|member |base class }2%3
note_defaulted_comparison_no_viable_function_synthesized:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: three-way comparison cannot be synthesized because there is no viable function for (?:'=='|'<') comparison
  SFINAE: SFINAE_Suppress
  Text: three-way comparison cannot be synthesized because there is no viable function for %select{'=='|'<'}0 comparison
note_defaulted_comparison_not_constexpr:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-constexpr comparison function would be used to compare (?:|member (.*)|base class (.*))
  SFINAE: SFINAE_Suppress
  Text: non-constexpr comparison function would be used to compare %select{|member %1|base class %1}0
note_defaulted_comparison_not_constexpr_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-constexpr comparison function declared here
  SFINAE: SFINAE_Suppress
  Text: non-constexpr comparison function declared here
note_defaulted_comparison_not_rewritten_callee:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defaulted (.*) is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison
note_defaulted_comparison_not_rewritten_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defaulted (.*) is implicitly deleted because a builtin comparison function using this conversion would be the best match for the comparison
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because a builtin comparison function using this conversion would be the best match for the comparison
note_defaulted_comparison_reference_member:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defaulted (.*) is implicitly deleted because class (.*) has a reference member
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because class %1 has a reference member
note_defaulted_comparison_union:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defaulted (.*) is implicitly deleted because (.*) is a (?:union-like class|union) with variant members
  SFINAE: SFINAE_Suppress
  Text: defaulted %0 is implicitly deleted because %2 is a %select{union-like class|union}1 with variant members
note_defined_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) defined here
  SFINAE: SFINAE_Suppress
  Text: '%0 defined here'
note_delete_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conversion to pointer type (.*)
  SFINAE: SFINAE_Suppress
  Text: conversion to pointer type %0
note_delete_non_virtual:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: qualify call to silence this warning
  SFINAE: SFINAE_Suppress
  Text: qualify call to silence this warning
note_deleted_assign_field:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:copy|move) assignment operator of (.*) is implicitly deleted because field (.*) is of (?:reference|const-qualified) type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3'
note_deleted_copy_ctor_rvalue_reference:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: copy constructor of (.*) is implicitly deleted because field (.*) is of rvalue reference type (.*)
  SFINAE: SFINAE_Suppress
  Text: copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
note_deleted_copy_user_declared_move:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: copy (?:constructor|assignment operator) is implicitly deleted because (.*) has a user-declared move (?:constructor|assignment operator)
  SFINAE: SFINAE_Suppress
  Text: copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
note_deleted_default_ctor_all_const:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:default constructor of|constructor inherited by) (.*) is implicitly deleted because all (?:data members|data members of an anonymous union member) are const-qualified
  SFINAE: SFINAE_Suppress
  Text: '%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified'
note_deleted_default_ctor_uninit_field:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:default constructor of|constructor inherited by) (.*) is implicitly deleted because field (.*) of (?:reference|const-qualified) type (.*) would not be initialized
  SFINAE: SFINAE_Suppress
  Text: '%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized'
note_deleted_dtor_no_operator_delete:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: virtual destructor requires an unambiguous, accessible 'operator delete'
  SFINAE: SFINAE_Suppress
  Text: virtual destructor requires an unambiguous, accessible 'operator delete'
note_deleted_special_member_class_subobject:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by) (.*) is implicitly deleted because (?:base class (.*)|(?:||||variant )field (.*)) (?:has (?:no|a deleted|multiple|an inaccessible|a non-trivial) (?:(?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|(?:default|corresponding|default|default|default) constructor)|destructor)(?:||s||)|is an ObjC pointer)
  SFINAE: SFINAE_Suppress
  Text: '%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 %select{has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4|is an ObjC pointer}6'
note_deleted_type_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: function is implicitly deleted because its declared type does not match the type of an implicit (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor)
  SFINAE: SFINAE_Suppress
  Text: function is implicitly deleted because its declared type does not match the type of an implicit %sub{select_special_member_kind}0
note_dependent_function_template_spec_discard_reason:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate ignored: (?:not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization\?)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0'
note_dependent_member_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: must qualify identifier to find this declaration in dependent base class
  SFINAE: SFINAE_Suppress
  Text: must qualify identifier to find this declaration in dependent base class
note_dependent_non_type_default_arg_in_partial_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template parameter is used in default argument declared here
  SFINAE: SFINAE_Suppress
  Text: template parameter is used in default argument declared here
note_deprecated_this_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add an explicit capture of 'this' to capture '\*this' by reference
  SFINAE: SFINAE_Suppress
  Text: add an explicit capture of 'this' to capture '*this' by reference
note_designated_init_mixed:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: first non-designated initializer is here
  SFINAE: SFINAE_Suppress
  Text: first non-designated initializer is here
note_destructor_nontype_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-type declaration found by destructor name lookup
  SFINAE: SFINAE_Suppress
  Text: non-type declaration found by destructor name lookup
note_destructor_type_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type (.*) found by destructor name lookup
  SFINAE: SFINAE_Suppress
  Text: type %0 found by destructor name lookup
note_direct_member_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: direct member declared here
  SFINAE: SFINAE_Suppress
  Text: direct member declared here
note_direct_method_declared_at:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: direct method (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: direct method %0 declared here
note_doc_block_command_previous:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous command '(?:\\|@)(.*)' here
  SFINAE: SFINAE_Suppress
  Text: previous command '%select{\|@}0%1' here
note_doc_block_command_previous_alias:
  ArgsCount: 2
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous command '(?:\\|@)(.*)' \(an alias of '\\(.*)'\) here
  SFINAE: SFINAE_Suppress
  Text: previous command '%select{\|@}0%1' (an alias of '\%2') here
note_doc_html_end_tag:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: end tag
  SFINAE: SFINAE_Suppress
  Text: end tag
note_doc_html_tag_started_here:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: HTML tag started here
  SFINAE: SFINAE_Suppress
  Text: HTML tag started here
note_doc_param_name_suggestion:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean '(.*)'\?
  SFINAE: SFINAE_Suppress
  Text: did you mean '%0'?
note_doc_param_previous:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous documentation
  SFINAE: SFINAE_Suppress
  Text: previous documentation
note_doc_tparam_name_suggestion:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean '(.*)'\?
  SFINAE: SFINAE_Suppress
  Text: did you mean '%0'?
note_doc_tparam_previous:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_NOTE
  Component: Comment
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous documentation
  SFINAE: SFINAE_Suppress
  Text: previous documentation
note_drv_address_sanitizer_debug_runtime:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: AddressSanitizer doesn't support linking with debug runtime libraries yet
  SFINAE: SFINAE_Suppress
  Text: AddressSanitizer doesn't support linking with debug runtime libraries yet
note_drv_command_failed_diag_msg:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'diagnostic msg: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'diagnostic msg: %0'
note_drv_config_file_searched_in:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'was searched for in the directory: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'was searched for in the directory: %0'
note_drv_t_option_is_global:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the last '/TC' or '/TP' option takes precedence over earlier instances
  SFINAE: SFINAE_Suppress
  Text: the last '/TC' or '/TP' option takes precedence over earlier instances
note_drv_use_standard:
  ArgsCount: 8
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '(.*)'(?:| or '(.*)'|, '(.*)', or '(.*)'|, '(.*)', '(.*)', or '(.*)') for '(.*)' standard
  SFINAE: SFINAE_Suppress
  Text: use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
note_drv_verify_prefix_spelling:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: -verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
  SFINAE: SFINAE_Suppress
  Text: -verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
note_due_to_dllexported_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: due to (.*) being dllexported(?:|; try compiling in C\+\+11 mode)
  SFINAE: SFINAE_Suppress
  Text: due to %0 being dllexported%select{|; try compiling in C++11 mode}1
note_duplicate_asm_operand_name:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: asm operand name "(.*)" first referenced here
  SFINAE: SFINAE_Suppress
  Text: asm operand name "%0" first referenced here
note_duplicate_case_prev:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous case defined here
  SFINAE: SFINAE_Suppress
  Text: previous case defined here
note_duplicate_element:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: element (.*) also has value (.*)
  SFINAE: SFINAE_Suppress
  Text: element %0 also has value %1
note_empty_body_on_separate_line:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: put the semicolon on a separate line to silence this warning
  SFINAE: SFINAE_Suppress
  Text: put the semicolon on a separate line to silence this warning
note_empty_parens_default_ctor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove parentheses to declare a variable
  SFINAE: SFINAE_Suppress
  Text: remove parentheses to declare a variable
note_empty_parens_function_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: change this ',' to a ';' to call (.*)
  SFINAE: SFINAE_Suppress
  Text: change this ',' to a ';' to call %0
note_empty_parens_zero_initialize:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: replace parentheses with an initializer to declare a variable
  SFINAE: SFINAE_Suppress
  Text: replace parentheses with an initializer to declare a variable
note_empty_using_if_exists_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: using declaration annotated with 'using_if_exists' here
  SFINAE: SFINAE_Suppress
  Text: using declaration annotated with 'using_if_exists' here
note_enters_block_captures_cxx_obj:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters lifetime of block which captures a destructible C\+\+ object
  SFINAE: SFINAE_Suppress
  Text: jump enters lifetime of block which captures a destructible C++ object
note_enters_block_captures_non_trivial_c_struct:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters lifetime of block which captures a C struct that is non-trivial to destroy
  SFINAE: SFINAE_Suppress
  Text: jump enters lifetime of block which captures a C struct that is non-trivial to destroy
note_enters_block_captures_strong:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters lifetime of block which strongly captures a variable
  SFINAE: SFINAE_Suppress
  Text: jump enters lifetime of block which strongly captures a variable
note_enters_block_captures_weak:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters lifetime of block which weakly captures a variable
  SFINAE: SFINAE_Suppress
  Text: jump enters lifetime of block which weakly captures a variable
note_enters_compound_literal_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters lifetime of a compound literal that is non-trivial to destruct
  SFINAE: SFINAE_Suppress
  Text: jump enters lifetime of a compound literal that is non-trivial to destruct
note_entity_declared_at:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: '%0 declared here'
note_enum_specialized_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: enum (.*) was explicitly specialized here
  SFINAE: SFINAE_Suppress
  Text: enum %0 was explicitly specialized here
note_equality_comparison_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove extraneous parentheses around the comparison to silence this warning
  SFINAE: SFINAE_Suppress
  Text: remove extraneous parentheses around the comparison to silence this warning
note_equality_comparison_to_assign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '=' to turn this equality comparison into an assignment
  SFINAE: SFINAE_Suppress
  Text: use '=' to turn this equality comparison into an assignment
note_equivalent_internal_linkage_decl:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'declared here(?: in module ''(.*)''|)'
  SFINAE: SFINAE_Suppress
  Text: declared here%select{ in module '%1'|}0
note_evaluate_comparison_first:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: place parentheses around comparison expression to evaluate it first
  SFINAE: SFINAE_Suppress
  Text: place parentheses around comparison expression to evaluate it first
note_evaluating_exception_spec_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in evaluation of exception specification for (.*) needed here
  SFINAE: SFINAE_Suppress
  Text: in evaluation of exception specification for %q0 needed here
note_exception_spec_deprecated:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '(.*)' instead
  SFINAE: SFINAE_Suppress
  Text: use '%0' instead
note_exits___block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits scope of __block variable
  SFINAE: SFINAE_Suppress
  Text: jump exits scope of __block variable
note_exits_block_captures_cxx_obj:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits lifetime of block which captures a destructible C\+\+ object
  SFINAE: SFINAE_Suppress
  Text: jump exits lifetime of block which captures a destructible C++ object
note_exits_block_captures_non_trivial_c_struct:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits lifetime of block which captures a C struct that is non-trivial to destroy
  SFINAE: SFINAE_Suppress
  Text: jump exits lifetime of block which captures a C struct that is non-trivial to destroy
note_exits_block_captures_strong:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits lifetime of block which strongly captures a variable
  SFINAE: SFINAE_Suppress
  Text: jump exits lifetime of block which strongly captures a variable
note_exits_block_captures_weak:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits lifetime of block which weakly captures a variable
  SFINAE: SFINAE_Suppress
  Text: jump exits lifetime of block which weakly captures a variable
note_exits_cleanup:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits scope of variable with __attribute__\(\(cleanup\)\)
  SFINAE: SFINAE_Suppress
  Text: jump exits scope of variable with __attribute__((cleanup))
note_exits_compound_literal_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits lifetime of a compound literal that is non-trivial to destruct
  SFINAE: SFINAE_Suppress
  Text: jump exits lifetime of a compound literal that is non-trivial to destruct
note_exits_cxx_catch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits catch block
  SFINAE: SFINAE_Suppress
  Text: jump exits catch block
note_exits_cxx_try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits try block
  SFINAE: SFINAE_Suppress
  Text: jump exits try block
note_exits_dtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits scope of variable with non-trivial destructor
  SFINAE: SFINAE_Suppress
  Text: jump exits scope of variable with non-trivial destructor
note_exits_objc_autoreleasepool:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits autoreleasepool block
  SFINAE: SFINAE_Suppress
  Text: jump exits autoreleasepool block
note_exits_objc_catch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits @catch block
  SFINAE: SFINAE_Suppress
  Text: jump exits @catch block
note_exits_objc_finally:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits @finally block
  SFINAE: SFINAE_Suppress
  Text: jump exits @finally block
note_exits_objc_strong:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits scope of __strong variable
  SFINAE: SFINAE_Suppress
  Text: jump exits scope of __strong variable
note_exits_objc_synchronized:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits @synchronized block
  SFINAE: SFINAE_Suppress
  Text: jump exits @synchronized block
note_exits_objc_try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits @try block
  SFINAE: SFINAE_Suppress
  Text: jump exits @try block
note_exits_objc_weak:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits scope of __weak variable
  SFINAE: SFINAE_Suppress
  Text: jump exits scope of __weak variable
note_exits_seh_except:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits __except block
  SFINAE: SFINAE_Suppress
  Text: jump exits __except block
note_exits_seh_finally:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits __finally block
  SFINAE: SFINAE_Suppress
  Text: jump exits __finally block
note_exits_seh_try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits __try block
  SFINAE: SFINAE_Suppress
  Text: jump exits __try block
note_exits_temporary_dtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits scope of lifetime-extended temporary with non-trivial destructor
  SFINAE: SFINAE_Suppress
  Text: jump exits scope of lifetime-extended temporary with non-trivial destructor
note_explicit_ctor_deduction_guide_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit (?:constructor|deduction guide) declared here
  SFINAE: SFINAE_Suppress
  Text: explicit %select{constructor|deduction guide}0 declared here
note_explicit_instantiation_candidate:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit instantiation candidate function (.*) template here (.*)
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation candidate function %q0 template here %1
note_explicit_instantiation_definition_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit instantiation definition is here
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation definition is here
note_explicit_instantiation_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit instantiation refers here
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation refers here
note_explicit_specialization_declared_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit specialization declared here
  SFINAE: SFINAE_Suppress
  Text: explicit specialization declared here
note_explicit_template_arg_substitution_here:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while substituting explicitly-specified template arguments into function template (.*) (.*)
  SFINAE: SFINAE_Suppress
  Text: while substituting explicitly-specified template arguments into function template %0 %1
note_explicit_template_spec_does_not_need_header:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''template<>'' header not required for explicitly-specialized class (.*) declared here'
  SFINAE: SFINAE_Suppress
  Text: '''template<>'' header not required for explicitly-specialized class %0 declared here'
note_export:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: export block begins here
  SFINAE: SFINAE_Suppress
  Text: export block begins here
note_expr_divide_by_zero:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: division by zero
  SFINAE: SFINAE_Suppress
  Text: division by zero
note_expr_requirement_constraints_not_satisfied:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:and|because) type constraint ''(.*)'' was not satisfied:'
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 type constraint ''%1'' was not satisfied:'
note_expr_requirement_constraints_not_satisfied_simple:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:and|because) (.*) does not satisfy (.*):'
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 %1 does not satisfy %2:'
note_expr_requirement_expr_substitution_error:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:and|because) ''(.*)'' would be invalid: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid: %2'
note_expr_requirement_expr_unknown_substitution_error:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' would be invalid
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid'
note_expr_requirement_noexcept_not_met:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' may throw an exception
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' may throw an exception'
note_expr_requirement_type_requirement_substitution_error:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:and|because) ''(.*)'' would be invalid: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid: %2'
note_expr_requirement_type_requirement_unknown_substitution_error:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' would be invalid
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid'
note_extern_c_begins_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: extern "C" language linkage specification begins here
  SFINAE: SFINAE_Suppress
  Text: extern "C" language linkage specification begins here
note_extern_c_global_conflict:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared (?:in global scope|with C language linkage) here
  SFINAE: SFINAE_Suppress
  Text: declared %select{in global scope|with C language linkage}0 here
note_extra_comma_message_arg:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: comma separating Objective-C messaging arguments
  SFINAE: SFINAE_Suppress
  Text: comma separating Objective-C messaging arguments
note_fallthrough_insert_semi_fixit:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you forget ';'\?
  SFINAE: SFINAE_Suppress
  Text: did you forget ';'?
note_fe_backend_invalid_loc:
  ArgsCount: 3
  CategoryName: Backend Issue
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: could not determine the original source location for (.*):(.*):(.*)
  SFINAE: SFINAE_Suppress
  Text: could not determine the original source location for %0:%1:%2
note_fe_inline_asm_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: instantiated into assembly here
  SFINAE: SFINAE_Suppress
  Text: instantiated into assembly here
note_fe_linking_module:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'linking module ''(.*)'': (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'linking module ''%0'': %1'
note_field_designator_found:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: field designator refers here
  SFINAE: SFINAE_Suppress
  Text: field designator refers here
note_final_dtor_non_final_class_silence:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: mark (.*) as '(?:final|sealed)' to silence this warning
  SFINAE: SFINAE_Suppress
  Text: mark %0 as '%select{final|sealed}1' to silence this warning
note_final_overrider:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: final overrider of (.*) in (.*)
  SFINAE: SFINAE_Suppress
  Text: final overrider of %q0 in %1
note_first_module_difference:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in first definition, possible difference is here
  SFINAE: SFINAE_Suppress
  Text: in first definition, possible difference is here
note_fixit_applied:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: FIX-IT applied suggested code changes
  SFINAE: SFINAE_Suppress
  Text: FIX-IT applied suggested code changes
note_fixit_failed:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: FIX-IT unable to apply suggested code changes
  SFINAE: SFINAE_Suppress
  Text: FIX-IT unable to apply suggested code changes
note_fixit_in_macro:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: FIX-IT unable to apply suggested code changes in a macro
  SFINAE: SFINAE_Suppress
  Text: FIX-IT unable to apply suggested code changes in a macro
note_fixit_unfixed_error:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: FIX-IT detected an error it cannot fix
  SFINAE: SFINAE_Suppress
  Text: FIX-IT detected an error it cannot fix
note_flexible_array_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: initialized flexible array member (.*) is here
  SFINAE: SFINAE_Suppress
  Text: initialized flexible array member %0 is here
note_for_range_begin_end:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: selected '(?:begin|end)' (?:function|template )(.*) with iterator type (.*)
  SFINAE: SFINAE_Suppress
  Text: selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
note_for_range_invalid_iterator:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in implicit call to 'operator(?:!=|\*|\+\+)' for iterator of type (.*)
  SFINAE: SFINAE_Suppress
  Text: in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
note_for_range_member_begin_end_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member is not a candidate because range type (.*) has no '(?:end|begin)' member
  SFINAE: SFINAE_Suppress
  Text: member is not a candidate because range type %0 has no '%select{end|begin}1' member
note_force_empty_selector_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: or insert whitespace before ':' to use (.*) as parameter name and have an empty entry in the selector
  SFINAE: SFINAE_Suppress
  Text: or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
note_format_fix_specifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to use '(.*)'\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to use '%0'?
note_format_security_fixit:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: treat the string as an argument to avoid this
  SFINAE: SFINAE_Suppress
  Text: treat the string as an argument to avoid this
note_format_string_defined:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: format string is defined here
  SFINAE: SFINAE_Suppress
  Text: format string is defined here
note_forward_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: forward declaration of class here
  SFINAE: SFINAE_Suppress
  Text: forward declaration of class here
note_forward_class_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not defined, but forward declared here; conversion would be valid if it was derived from (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 is not defined, but forward declared here; conversion would be valid if it was derived from %1'
note_forward_declaration:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: forward declaration of (.*)
  SFINAE: SFINAE_Suppress
  Text: forward declaration of %0
note_forward_template_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: forward declaration of template entity is here
  SFINAE: SFINAE_Suppress
  Text: forward declaration of template entity is here
note_found_mutex_near_match:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: found near match '(.*)'
  SFINAE: SFINAE_Suppress
  Text: found near match '%0'
note_from_diagnose_if:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'from ''diagnose_if'' attribute on (.*):'
  SFINAE: SFINAE_Suppress
  Text: 'from ''diagnose_if'' attribute on %0:'
note_function_style_cast_add_parentheses:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add enclosing parentheses to perform a function-style cast
  SFINAE: SFINAE_Suppress
  Text: add enclosing parentheses to perform a function-style cast
note_function_suggestion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean (.*)\?
  SFINAE: SFINAE_Suppress
  Text: did you mean %0?
note_function_template_deduction_instantiation_here:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while substituting deduced template arguments into function template (.*) (.*)
  SFINAE: SFINAE_Suppress
  Text: while substituting deduced template arguments into function template %0 %1
note_function_template_spec_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of function template specialization (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of function template specialization %q0 requested here
note_function_template_spec_matched:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: function template (.*) matches specialization (.*)
  SFINAE: SFINAE_Suppress
  Text: function template %q0 matches specialization %1
note_function_to_function_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: suffix with parentheses to turn this into a function call
  SFINAE: SFINAE_Suppress
  Text: suffix with parentheses to turn this into a function call
note_function_warning_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: prefix with the address-of operator to silence this warning
  SFINAE: SFINAE_Suppress
  Text: prefix with the address-of operator to silence this warning
note_getter_unavailable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: or because setter is declared here, but no getter method (.*) is found
  SFINAE: SFINAE_Suppress
  Text: or because setter is declared here, but no getter method %0 is found
note_global_module_introducer_missing:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add 'module;' to the start of the file to introduce a global module fragment
  SFINAE: SFINAE_Suppress
  Text: add 'module;' to the start of the file to introduce a global module fragment
note_goto_ms_asm_label:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: inline assembly label (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: inline assembly label %0 declared here
note_guarded_by_declared_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: guarded_by declared here
  SFINAE: SFINAE_Suppress
  Text: guarded_by declared here
note_header_guard:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is defined here; did you mean (.*)\?
  SFINAE: SFINAE_Suppress
  Text: '%0 is defined here; did you mean %1?'
note_hidden_overloaded_virtual_declared_here:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'hidden overloaded virtual function (.*) declared here(?:|: different classes(?: \(\$ vs \$\)|)|: different number of parameters \((.*) vs (.*)\)|: type mismatch at \d+(?:st|nd|rd|th) parameter(?: \(\$ vs \$\)|)|: different return type(?: \(\$ vs \$\)|)|: different qualifiers \((.*) vs (.*)\)|: different exception specifications)'
  SFINAE: SFINAE_Suppress
  Text: 'hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%2 vs %3)|: different exception specifications}1'
note_hidden_tag:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type declaration hidden
  SFINAE: SFINAE_Suppress
  Text: type declaration hidden
note_hiding_object:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration hides type
  SFINAE: SFINAE_Suppress
  Text: declaration hides type
note_ice_conversion_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conversion to (?:integral|enumeration) type (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: conversion to %select{integral|enumeration}0 type %1 declared here
note_illegal_field_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: field of illegal (?:type|pointer type) (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: field of illegal %select{type|pointer type}0 %1 declared here
note_implementation_declared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class implementation is declared here
  SFINAE: SFINAE_Suppress
  Text: class implementation is declared here
note_implemented_by_class:
  ArgsCount: 1
  CategoryName: ARC Weak References
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: when implemented by class (.*)
  SFINAE: SFINAE_Suppress
  Text: when implemented by class %0
note_implicit_delete_this_in_destructor_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking implicit 'delete this' for virtual destructor
  SFINAE: SFINAE_Suppress
  Text: while checking implicit 'delete this' for virtual destructor
note_implicit_member_target_infer_collision:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'implicit (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) inferred target collision: call to both (?:__device__|__global__|__host__|__host__ __device__) and (?:__device__|__global__|__host__|__host__ __device__) members'
  SFINAE: SFINAE_Suppress
  Text: 'implicit %sub{select_special_member_kind}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members'
note_implicit_param_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is an implicit parameter
  SFINAE: SFINAE_Suppress
  Text: '%0 is an implicit parameter'
note_implicit_top_level_module_import_here:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: submodule of top-level module '(.*)' implicitly imported here
  SFINAE: SFINAE_Suppress
  Text: submodule of top-level module '%0' implicitly imported here
note_implicitly_deleted:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicitly defaulted function was implicitly deleted here
  SFINAE: SFINAE_Suppress
  Text: explicitly defaulted function was implicitly deleted here
note_imported_by_pch_module_not_found:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: consider adding '(.*)' to the header search path
  SFINAE: SFINAE_Suppress
  Text: consider adding '%0' to the header search path
note_in_binding_decl_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in implicit initialization of binding declaration (.*)
  SFINAE: SFINAE_Suppress
  Text: in implicit initialization of binding declaration %0
note_in_class_initializer_float_type_cxx11:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add 'constexpr'
  SFINAE: SFINAE_Suppress
  Text: add 'constexpr'
note_in_declaration_of_implicit_equality_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while declaring the corresponding implicit 'operator==' for this defaulted 'operator<=>'
  SFINAE: SFINAE_Suppress
  Text: while declaring the corresponding implicit 'operator==' for this defaulted 'operator<=>'
note_in_declaration_of_implicit_special_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while declaring the implicit (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) for (.*)
  SFINAE: SFINAE_Suppress
  Text: while declaring the implicit %sub{select_special_member_kind}1 for %0
note_in_for_range:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: when looking up '(?:begin|end)' function for range expression of type (.*)
  SFINAE: SFINAE_Suppress
  Text: when looking up '%select{begin|end}0' function for range expression of type %1
note_in_omitted_aggregate_initializer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in implicit initialization of (?:array element (.*) with omitted initializer|field (.*) with omitted initializer|trailing array elements in runtime-sized array new)
  SFINAE: SFINAE_Suppress
  Text: in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
note_in_reference_temporary_list_initializer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in initialization of temporary of type (.*) created to list-initialize this reference
  SFINAE: SFINAE_Suppress
  Text: in initialization of temporary of type %0 created to list-initialize this reference
note_include_header_or_declare:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: include the header <(.*)> or explicitly provide a declaration for '(.*)'
  SFINAE: SFINAE_Suppress
  Text: include the header <%0> or explicitly provide a declaration for '%1'
note_incompatible_analyzer_plugin_api:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: current API version is '(.*)', but plugin was compiled with version '(.*)'
  SFINAE: SFINAE_Suppress
  Text: current API version is '%0', but plugin was compiled with version '%1'
note_incomplete_class_and_qualified_id:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conformance of forward class (.*) to protocol (.*) can not be confirmed
  SFINAE: SFINAE_Suppress
  Text: conformance of forward class %0 to protocol %1 can not be confirmed
note_indirect_goto_target:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: possible target of (?:indirect|asm) goto statement
  SFINAE: SFINAE_Suppress
  Text: possible target of %select{indirect|asm}0 goto statement
note_indirection_through_null:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: consider using __builtin_trap\(\) or qualifying pointer with 'volatile'
  SFINAE: SFINAE_Suppress
  Text: consider using __builtin_trap() or qualifying pointer with 'volatile'
note_inequality_comparison_to_or_assign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '\|=' to turn this inequality comparison into an or-assignment
  SFINAE: SFINAE_Suppress
  Text: use '|=' to turn this inequality comparison into an or-assignment
note_init_list_at_beginning_of_macro_argument:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: cannot use initializer list at the beginning of a macro argument
  SFINAE: SFINAE_Suppress
  Text: cannot use initializer list at the beginning of a macro argument
note_init_list_narrowing_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: insert an explicit cast to silence this issue
  SFINAE: SFINAE_Suppress
  Text: insert an explicit cast to silence this issue
note_init_with_default_member_initalizer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: initializing field (.*) with default member initializer
  SFINAE: SFINAE_Suppress
  Text: initializing field %0 with default member initializer
note_initializer_out_of_order:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:field|base class) (.*) will be initialized after (?:field|base) (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3'
note_insert_break_fixit:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: insert 'break;' to avoid fall-through
  SFINAE: SFINAE_Suppress
  Text: insert 'break;' to avoid fall-through
note_insert_fallthrough_fixit:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: insert '(.*);' to silence this warning
  SFINAE: SFINAE_Suppress
  Text: insert '%0;' to silence this warning
note_inst_declaration_hint:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add an explicit instantiation declaration to suppress this warning if (.*) is explicitly instantiated in another translation unit
  SFINAE: SFINAE_Suppress
  Text: add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
note_instantiation_contexts_suppressed:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: \(skipping (.*) contexts? in backtrace; use -ftemplate-backtrace-limit=0 to see all\)
  SFINAE: SFINAE_Suppress
  Text: (skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
note_instantiation_required_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:implicit|explicit) instantiation first required here
  SFINAE: SFINAE_Suppress
  Text: '%select{implicit|explicit}0 instantiation first required here'
note_invalid_subexpr_in_const_expr:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: subexpression not valid in a constant expression
  SFINAE: SFINAE_Suppress
  Text: subexpression not valid in a constant expression
note_it_delegates_to:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: it delegates to
  SFINAE: SFINAE_Suppress
  Text: it delegates to
note_ivar_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: instance variable is declared here
  SFINAE: SFINAE_Suppress
  Text: instance variable is declared here
note_lambda_capture_initializer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:implicitly |)captured(?:| by reference)(?:(?: due to use|) here| via initialization of lambda capture (.*))'
  SFINAE: SFINAE_Suppress
  Text: '%select{implicitly |}2captured%select{| by reference}3%select{%select{ due to use|}2 here| via initialization of lambda capture %0}1'
note_lambda_decl:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: lambda expression begins here
  SFINAE: SFINAE_Suppress
  Text: lambda expression begins here
note_lambda_default_capture_fixit:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: default capture by (?:value|reference)
  SFINAE: SFINAE_Suppress
  Text: default capture by %select{value|reference}0
note_lambda_this_capture_fixit:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicitly capture 'this'
  SFINAE: SFINAE_Suppress
  Text: explicitly capture 'this'
note_lambda_to_block_conv:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: implicit capture of lambda object due to conversion to block pointer here
  SFINAE: SFINAE_Suppress
  Text: implicit capture of lambda object due to conversion to block pointer here
note_lambda_variable_capture_fixit:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: capture (.*) by (?:value|reference)
  SFINAE: SFINAE_Suppress
  Text: capture %0 by %select{value|reference}1
note_lifetime_extending_member_declared_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:(?:reference|'std::initializer_list') member|member with (?:reference|'std::initializer_list') subobject) declared here
  SFINAE: SFINAE_Suppress
  Text: '%select{%select{reference|''std::initializer_list''}0 member|member with %select{reference|''std::initializer_list''}0 subobject}1 declared here'
note_local_decl_close_match:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: local declaration nearly matches
  SFINAE: SFINAE_Suppress
  Text: local declaration nearly matches
note_local_decl_close_param_match:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'type of \d+(?:st|nd|rd|th) parameter of local declaration does not match definition(?: \(\$ vs \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
note_local_var_initializer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:via initialization of|binding reference) variable (?:(.*) |)here
  SFINAE: SFINAE_Suppress
  Text: '%select{via initialization of|binding reference}0 variable %select{%2 |}1here'
note_lock_exclusive_and_shared:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the other acquisition of (.*) '(.*)' is here
  SFINAE: SFINAE_Suppress
  Text: the other acquisition of %0 '%1' is here
note_locked_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) acquired here
  SFINAE: SFINAE_Suppress
  Text: '%0 acquired here'
note_logical_instead_of_bitwise_change_operator:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '(.*)' for a bitwise operation
  SFINAE: SFINAE_Suppress
  Text: use '%0' for a bitwise operation
note_logical_instead_of_bitwise_remove_constant:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove constant to silence this warning
  SFINAE: SFINAE_Suppress
  Text: remove constant to silence this warning
note_logical_not_fix:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add parentheses after the '!' to evaluate the (?:comparison|bitwise operator) first
  SFINAE: SFINAE_Suppress
  Text: add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
note_logical_not_silence_with_parens:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add parentheses around left hand side expression to silence this warning
  SFINAE: SFINAE_Suppress
  Text: add parentheses around left hand side expression to silence this warning
note_loop_iteration_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:decremented|incremented) here
  SFINAE: SFINAE_Suppress
  Text: '%select{decremented|incremented}0 here'
note_macro_expansion_here:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: expansion of macro (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: expansion of macro %0 requested here
note_macro_here:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: macro (.*) defined here
  SFINAE: SFINAE_Suppress
  Text: macro %0 defined here
note_main_change_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: change return type to 'int'
  SFINAE: SFINAE_Suppress
  Text: change return type to 'int'
note_main_remove_noreturn:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove '_Noreturn'
  SFINAE: SFINAE_Suppress
  Text: remove '_Noreturn'
note_matching:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: to match this (.*)
  SFINAE: SFINAE_Suppress
  Text: to match this %0
note_max_tokens_total_override:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: total token limit set here
  SFINAE: SFINAE_Suppress
  Text: total token limit set here
note_meant_to_use_typename:
  ArgsCount: 0
  CategoryName: Generics Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to use 'typename'\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to use 'typename'?
note_member_declared_at:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member is declared here
  SFINAE: SFINAE_Suppress
  Text: member is declared here
note_member_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: member %0 declared here
note_member_def_close_const_match:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member declaration does not match because it (?:is|is not) const qualified
  SFINAE: SFINAE_Suppress
  Text: member declaration does not match because it %select{is|is not}0 const qualified
note_member_def_close_match:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member declaration nearly matches
  SFINAE: SFINAE_Suppress
  Text: member declaration nearly matches
note_member_def_close_param_match:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'type of \d+(?:st|nd|rd|th) parameter of member declaration does not match definition(?: \(\$ vs \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
note_member_first_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: member (.*) first declared here
  SFINAE: SFINAE_Suppress
  Text: member %0 first declared here
note_member_reference_arrow_from_operator_arrow:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''->'' applied to return value of the operator->\(\) declared here'
  SFINAE: SFINAE_Suppress
  Text: '''->'' applied to return value of the operator->() declared here'
note_member_synthesized_at:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in (?:implicit|defaulted) (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) for (.*) first required here
  SFINAE: SFINAE_Suppress
  Text: in %select{implicit|defaulted}0 %sub{select_special_member_kind}1 for %2 first required here
note_memsize_comparison_cast_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicitly cast the argument to size_t to silence this warning
  SFINAE: SFINAE_Suppress
  Text: explicitly cast the argument to size_t to silence this warning
note_memsize_comparison_paren:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to compare the result of (.*) instead\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to compare the result of %0 instead?
note_method_declared_at:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: method (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: method %0 declared here
note_method_return_type_change:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: compiler has implicitly changed method (.*) return type
  SFINAE: SFINAE_Suppress
  Text: compiler has implicitly changed method %0 return type
note_method_sent_forward_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: method (.*) is used for the forward class
  SFINAE: SFINAE_Suppress
  Text: method %0 is used for the forward class
note_misplaced_ellipsis_vararg_add_comma:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: insert ',' before '\.\.\.' to silence this warning
  SFINAE: SFINAE_Suppress
  Text: insert ',' before '...' to silence this warning
note_misplaced_ellipsis_vararg_add_ellipsis:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: place '\.\.\.' (?:immediately before declared identifier|here) to declare a function parameter pack
  SFINAE: SFINAE_Suppress
  Text: place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
note_misplaced_ellipsis_vararg_existing_ellipsis:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: preceding '\.\.\.' declares a function parameter pack
  SFINAE: SFINAE_Suppress
  Text: preceding '...' declares a function parameter pack
note_missing_end_of_definition_before:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: still within definition of (.*) here
  SFINAE: SFINAE_Suppress
  Text: still within definition of %q0 here
note_missing_selector_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: introduce a parameter name to make (.*) part of the selector
  SFINAE: SFINAE_Suppress
  Text: introduce a parameter name to make %0 part of the selector
note_mmap_add_framework_keyword:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use 'framework module' to declare module '(.*)'
  SFINAE: SFINAE_Suppress
  Text: use 'framework module' to declare module '%0'
note_mmap_lbrace_match:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: to match this '\{'
  SFINAE: SFINAE_Suppress
  Text: to match this '{'
note_mmap_lsquare_match:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: to match this '\]'
  SFINAE: SFINAE_Suppress
  Text: to match this ']'
note_mmap_prev_definition:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previously defined here
  SFINAE: SFINAE_Suppress
  Text: previously defined here
note_mmap_rename_top_level_private_module:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: rename '(.*)' to ensure it can be found by name
  SFINAE: SFINAE_Suppress
  Text: rename '%0' to ensure it can be found by name
note_module_cache_path:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: after modifying system headers, please delete the module cache at '(.*)'
  SFINAE: SFINAE_Suppress
  Text: after modifying system headers, please delete the module cache at '%0'
note_module_def_undef_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: macro was (?:defined|#undef'd) here
  SFINAE: SFINAE_Suppress
  Text: macro was %select{defined|#undef'd}0 here
note_module_file_conflict:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: this is generally caused by modules with the same name found in multiple paths
  SFINAE: SFINAE_Suppress
  Text: this is generally caused by modules with the same name found in multiple paths
note_module_file_imported_by:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: imported by (?:|module '(.*)' in )'(.*)'
  SFINAE: SFINAE_Suppress
  Text: imported by %select{|module '%2' in }1'%0'
note_module_import_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module imported here
  SFINAE: SFINAE_Suppress
  Text: module imported here
note_module_import_not_at_top_level:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) begins here
  SFINAE: SFINAE_Suppress
  Text: '%0 begins here'
note_module_odr_violation_definition_data:
  ArgsCount: 6
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: but in '(.*)' found (?:(.*) base (?:class|classes)|(.*) virtual base (?:class|classes)|\d+(?:st|nd|rd|th) base class with different type (.*)|\d+(?:st|nd|rd|th) (?:non-virtual|virtual) base class (.*)|\d+(?:st|nd|rd|th) base class (.*) with (?:public|protected|private|no) access specifier)
  SFINAE: SFINAE_Suppress
  Text: but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
note_module_odr_violation_different_definitions:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: definition in module '(.*)' is here
  SFINAE: SFINAE_Suppress
  Text: definition in module '%0' is here
note_module_odr_violation_enum:
  ArgsCount: 6
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: but in '(.*)' found (?:enum that is (?:not scoped|scoped)|enum scoped with keyword (?:struct|class)|enum (?:without|with) specified type|enum with specified type (.*)|enum with (.*) elements?|\d+(?:st|nd|rd|th) element has name (.*)|\d+(?:st|nd|rd|th) element (.*) (?:has|does not have) an initializer|\d+(?:st|nd|rd|th) element (.*) has different initializer|)
  SFINAE: SFINAE_Suppress
  Text: but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
note_module_odr_violation_function:
  ArgsCount: 5
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: but in '(.*)' found (?:different return type (.*)|\d+(?:st|nd|rd|th) parameter with name (.*)|\d+(?:st|nd|rd|th) parameter with type (.*)(?:| decayed from (.*))|\d+(?:st|nd|rd|th) parameter with(?:out|) a default argument|\d+(?:st|nd|rd|th) parameter with a different default argument|a different body)
  SFINAE: SFINAE_Suppress
  Text: but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
note_module_odr_violation_mismatch_decl:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: but in '(.*)' found (?:end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template)
  SFINAE: SFINAE_Suppress
  Text: but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template}1
note_module_odr_violation_mismatch_decl_diff:
  ArgsCount: 54
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: but in '(.*)' found (?:static assert with different condition|static assert with different message|static assert with (?:|no )message|field (.*)|field (.*) with type (.*)|(?:non-|)bitfield (.*)|bitfield (.*) with different width expression|(?:non-|)mutable field (.*)|field (.*) with (?:no|an) initializer|field (.*) with a different initializer|(?:method (.*)|constructor|destructor)|(?:method (.*)|constructor|destructor) is (?:not deleted|deleted)|(?:method (.*)|constructor|destructor) is (?:not defaulted|defaulted)|(?:method (.*)|constructor|destructor) is (?:|pure )(?:not virtual|virtual)|(?:method (.*)|constructor|destructor) is (?:not static|static)|(?:method (.*)|constructor|destructor) is (?:not volatile|volatile)|(?:method (.*)|constructor|destructor) is (?:not const|const)|(?:method (.*)|constructor|destructor) is (?:not inline|inline)|(?:method (.*)|constructor|destructor) that has (.*) parameters?|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter of type (.*)(?:| decayed from (.*))|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter named (.*)|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter with(?:out|) a default argument|(?:method (.*)|constructor|destructor) with \d+(?:st|nd|rd|th) parameter with a different default argument|(?:method (.*)|constructor|destructor) with (?:no |)template arguments|(?:method (.*)|constructor|destructor) with (.*) template arguments?|(?:method (.*)|constructor|destructor) with (.*) for \d+(?:st|nd|rd|th) template argument|(?:method (.*)|constructor|destructor) with (?:no body|body)|(?:method (.*)|constructor|destructor) with different body|(?:typedef|type alias) name (.*)|(?:typedef|type alias) (.*) with different underlying type (.*)|data member with name (.*)|data member (.*) with different type (.*)|data member (.*) with(?:out|) an initializer|data member (.*) with a different initializer|data member (.*) (?:is constexpr|is not constexpr)|friend (?:class|function)|friend (.*)|friend function (.*)|function template (.*) with (.*) template parameters?|function template (.*) with \d+(?:st|nd|rd|th) template paramter being a (?:type|non-type|template) template parameter|function template (.*) with \d+(?:st|nd|rd|th) template parameter (?:with no name|named (.*))|function template (.*) with \d+(?:st|nd|rd|th) template parameter with (?:no |)default argument|function template (.*) with \d+(?:st|nd|rd|th) template parameter with default argument (.*)|function template (.*) with \d+(?:st|nd|rd|th) template parameter with different type|function template (.*) with \d+(?:st|nd|rd|th) template parameter (?:not |)being a template parameter pack|)
  SFINAE: SFINAE_Suppress
  Text: but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4|data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|}1
note_module_odr_violation_mismatch_decl_unknown:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: but in '(.*)' found (?:||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl)
  SFINAE: SFINAE_Suppress
  Text: but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl}1
note_module_odr_violation_no_possible_decls:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: definition has no member (.*)
  SFINAE: SFINAE_Suppress
  Text: definition has no member %0
note_module_odr_violation_possible_decl:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declaration of (.*) does not match
  SFINAE: SFINAE_Suppress
  Text: declaration of %0 does not match
note_module_odr_violation_template_parameter:
  ArgsCount: 3
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: but in '(.*)' found (?:unnamed template parameter (.*)|template parameter (.*)|template parameter with (?:no |)default argument|template parameter with different default argument)
  SFINAE: SFINAE_Suppress
  Text: but in '%0' found %select{unnamed template parameter %2|template parameter %3|template parameter with %select{no |}2default argument|template parameter with different default argument}1
note_mt_message:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: \[rewriter\] (.*)
  SFINAE: SFINAE_Suppress
  Text: '[rewriter] %0'
note_multiversioning_caused_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: function multiversioning caused by this declaration
  SFINAE: SFINAE_Suppress
  Text: function multiversioning caused by this declaration
note_musttail_callconv_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: target function has calling convention (.*) \(expected (.*)\)
  SFINAE: SFINAE_Suppress
  Text: target function has calling convention %1 (expected %0)
note_musttail_callee_defined_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: '%0 declared here'
note_musttail_fix_non_prototype:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add 'void' to the parameter list to turn an old-style K&R function declaration into a prototype
  SFINAE: SFINAE_Suppress
  Text: add 'void' to the parameter list to turn an old-style K&R function declaration into a prototype
note_musttail_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'target function (?:is a member of different class(?: \(expected \$ but has \$\)|)|has different number of parameters \(expected (.*) but has (.*)\)|has type mismatch at \d+(?:st|nd|rd|th) parameter(?: \(expected \$ but has \$\)|)|has different return type(?: \(\$ expected but has \$\)|))'
  SFINAE: SFINAE_Suppress
  Text: target function %select{is a member of different class%diff{ (expected $ but has $)|}1,2|has different number of parameters (expected %1 but has %2)|has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}1,2|has different return type%diff{ ($ expected but has $)|}1,2}0
note_musttail_structors_forbidden:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: target (?:constructor|destructor) is declared here
  SFINAE: SFINAE_Suppress
  Text: target %select{constructor|destructor}0 is declared here
note_namespace_defined_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: namespace (.*) defined here
  SFINAE: SFINAE_Suppress
  Text: namespace %0 defined here
note_neon_vector_initializer_non_portable:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: consider using vld1_(.*)(.*)\(\) to initialize a vector from memory, or vcreate_(.*)(.*)\(\) to initialize from an integer constant
  SFINAE: SFINAE_Suppress
  Text: consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
note_neon_vector_initializer_non_portable_q:
  ArgsCount: 8
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: consider using vld1q_(.*)(.*)\(\) to initialize a vector from memory, or vcombine_(.*)(.*)\(vcreate_(.*)(.*)\(\), vcreate_(.*)(.*)\(\)\) to initialize from integer constants
  SFINAE: SFINAE_Suppress
  Text: consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
note_nested_requirement_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking the satisfaction of nested requirement requested here
  SFINAE: SFINAE_Suppress
  Text: while checking the satisfaction of nested requirement requested here
note_nested_requirement_substitution_error:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:and|because) ''(.*)'' would be invalid: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid: %2'
note_nested_requirement_unknown_substitution_error:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' would be invalid
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid'
note_next_field_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: next field declaration is here
  SFINAE: SFINAE_Suppress
  Text: next field declaration is here
note_next_ivar_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: next (?:instance variable declaration|synthesized instance variable) is here
  SFINAE: SFINAE_Suppress
  Text: next %select{instance variable declaration|synthesized instance variable}0 is here
note_non_c_like_anon_struct:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type is not C-compatible due to this (?:base class|default member initializer|lambda expression|friend declaration|member declaration)
  SFINAE: SFINAE_Suppress
  Text: type is not C-compatible due to this %select{base class|default member initializer|lambda expression|friend declaration|member declaration}0
note_non_deducible_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-deducible template parameter (.*)
  SFINAE: SFINAE_Suppress
  Text: non-deducible template parameter %0
note_non_instantiated_member_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: not-yet-instantiated member is declared here
  SFINAE: SFINAE_Suppress
  Text: not-yet-instantiated member is declared here
note_non_literal_base_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not literal because it has base class (.*) of non-literal type
  SFINAE: SFINAE_Suppress
  Text: '%0 is not literal because it has base class %1 of non-literal type'
note_non_literal_field:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not literal because it has data member (.*) of (?:non-literal|volatile) type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2'
note_non_literal_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: incomplete type (.*) is not a literal type
  SFINAE: SFINAE_Suppress
  Text: incomplete type %0 is not a literal type
note_non_literal_lambda:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: lambda closure types are non-literal types before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: lambda closure types are non-literal types before C++17
note_non_literal_no_constexpr_ctors:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
  SFINAE: SFINAE_Suppress
  Text: '%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors'
note_non_literal_non_constexpr_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not literal because its destructor is not constexpr
  SFINAE: SFINAE_Suppress
  Text: '%0 is not literal because its destructor is not constexpr'
note_non_literal_nontrivial_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not literal because it has a non-trivial destructor
  SFINAE: SFINAE_Suppress
  Text: '%0 is not literal because it has a non-trivial destructor'
note_non_literal_user_provided_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not literal because it has a user-provided destructor
  SFINAE: SFINAE_Suppress
  Text: '%0 is not literal because it has a user-provided destructor'
note_non_literal_virtual_base:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:struct|interface|class) with virtual base (?:class|classes) is not a literal type
  SFINAE: SFINAE_Suppress
  Text: '%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type'
note_non_null_attribute_failed:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: null passed to a callee that requires a non-null argument
  SFINAE: SFINAE_Suppress
  Text: null passed to a callee that requires a non-null argument
note_non_template_in_template_id_found:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-template declaration found by name lookup
  SFINAE: SFINAE_Suppress
  Text: non-template declaration found by name lookup
note_non_trivial_c_union:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:(.*) has subobjects that are|(.*) has type (.*) that is) non-trivial to (?:default-initialize|destruct|copy)
  SFINAE: SFINAE_Suppress
  Text: '%select{%2 has subobjects that are|%3 has type %2 that is}0 non-trivial to %select{default-initialize|destruct|copy}1'
note_non_usual_function_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-usual (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: non-usual %0 declared here
note_nontemplate_decl_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-templated declaration is here
  SFINAE: SFINAE_Suppress
  Text: non-templated declaration is here
note_nontrivial_default_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because it has a default argument
  SFINAE: SFINAE_Suppress
  Text: because it has a default argument
note_nontrivial_default_member_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because field (.*) has an initializer
  SFINAE: SFINAE_Suppress
  Text: because field %0 has an initializer
note_nontrivial_field:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: field is non-trivial to (?:copy|default-initialize)
  SFINAE: SFINAE_Suppress
  Text: field is non-trivial to %select{copy|default-initialize}0
note_nontrivial_has_virtual:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because type (.*) has a virtual (?:member function|base class)
  SFINAE: SFINAE_Suppress
  Text: because type %0 has a virtual %select{member function|base class}1
note_nontrivial_no_copy:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because no (?:<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>) can be used to (?:<<ERROR>>|copy|move|copy|move|<<ERROR>>) (?:base class|field|an object) of type (.*)
  SFINAE: SFINAE_Suppress
  Text: because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
note_nontrivial_no_def_ctor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because (?:base class of |field of |)type (.*) has no default constructor
  SFINAE: SFINAE_Suppress
  Text: because %select{base class of |field of |}0type %1 has no default constructor
note_nontrivial_objc_ownership:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because type (.*) has a member with (?:no|no|__strong|__weak|__autoreleasing) ownership
  SFINAE: SFINAE_Suppress
  Text: because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
note_nontrivial_param_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because its parameter is (?:of type \$, not \$|of the wrong type)
  SFINAE: SFINAE_Suppress
  Text: because its parameter is %diff{of type $, not $|of the wrong type}2,3
note_nontrivial_subobject:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because the function selected to (?:construct|copy|move|copy|move|destroy) (?:base class|field) of type (.*) is not trivial
  SFINAE: SFINAE_Suppress
  Text: because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
note_nontrivial_user_provided:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because (?:base class of |field of |)type (.*) has a user-provided (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor)
  SFINAE: SFINAE_Suppress
  Text: because %select{base class of |field of |}0type %1 has a user-provided %sub{select_special_member_kind}2
note_nontrivial_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because it is a variadic function
  SFINAE: SFINAE_Suppress
  Text: because it is a variadic function
note_nontrivial_virtual_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: destructor for (.*) is not trivial because it is virtual
  SFINAE: SFINAE_Suppress
  Text: destructor for %0 is not trivial because it is virtual
note_not_found_by_two_phase_lookup:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) should be declared prior to the call site(?:| or in (.*)| or in an associated namespace of one of its arguments)
  SFINAE: SFINAE_Suppress
  Text: '%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1'
note_not_module_interface_add_export:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add 'export' here if this is intended to be a module interface unit
  SFINAE: SFINAE_Suppress
  Text: add 'export' here if this is intended to be a module interface unit
note_not_structural_mutable_field:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not a structural type because it has a mutable non-static data member
  SFINAE: SFINAE_Suppress
  Text: '%0 is not a structural type because it has a mutable non-static data member'
note_not_structural_non_public:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not a structural type because it has a (?:non-static data member|base class) that is not public
  SFINAE: SFINAE_Suppress
  Text: '%0 is not a structural type because it has a %select{non-static data member|base class}1 that is not public'
note_not_structural_rvalue_ref_field:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not a structural type because it has a non-static data member of rvalue reference type
  SFINAE: SFINAE_Suppress
  Text: '%0 is not a structural type because it has a non-static data member of rvalue reference type'
note_not_structural_subobject:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is not a structural type because it has a (?:non-static data member|base class) of non-structural type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 is not a structural type because it has a %select{non-static data member|base class}1 of non-structural type %2'
note_nsdictionary_duplicate_key_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous equal key is here
  SFINAE: SFINAE_Suppress
  Text: previous equal key is here
note_nullability_fix_it:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: insert '(?:_Nonnull|_Nullable|_Null_unspecified)' if the (?:pointer|block pointer|member pointer|array parameter) (?:should never be null|may be null|should not declare nullability)
  SFINAE: SFINAE_Suppress
  Text: insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
note_nullability_here:
  ArgsCount: 1
  CategoryName: Nullability Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) specified here
  SFINAE: SFINAE_Suppress
  Text: '%0 specified here'
note_nullability_type_specifier:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use nullability type specifier (.*) to affect the innermost pointer type of (.*)
  SFINAE: SFINAE_Suppress
  Text: use nullability type specifier %0 to affect the innermost pointer type of %1
note_objc_circular_container_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: '%0 declared here'
note_objc_container_start:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:class|protocol|category|class extension|implementation|category implementation) started here
  SFINAE: SFINAE_Suppress
  Text: '%select{class|protocol|category|class extension|implementation|category implementation}0 started here'
note_objc_designated_init_marked_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: method marked as designated initializer of the class here
  SFINAE: SFINAE_Suppress
  Text: method marked as designated initializer of the class here
note_objc_literal_comparison_isequal:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use 'isEqual:' instead
  SFINAE: SFINAE_Suppress
  Text: use 'isEqual:' instead
note_objc_literal_method_param:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:first|second|third) parameter has unexpected type (.*) \(should be (.*)\)
  SFINAE: SFINAE_Suppress
  Text: '%select{first|second|third}0 parameter has unexpected type %1 (should be %2)'
note_objc_literal_method_return:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: method returns unexpected type (.*) \(should be an object type\)
  SFINAE: SFINAE_Suppress
  Text: method returns unexpected type %0 (should be an object type)
note_objc_needs_superclass:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add a super class to fix this problem
  SFINAE: SFINAE_Suppress
  Text: add a super class to fix this problem
note_objc_type_param_here:
  ArgsCount: 1
  CategoryName: Generics Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type parameter (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: type parameter %0 declared here
note_objc_unsafe_perform_selector_method_declared_here:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: method (.*) that returns (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: method %0 that returns %1 declared here
note_odr_base:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class has base type (.*)
  SFINAE: SFINAE_Suppress
  Text: class has base type %0
note_odr_bit_field:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: bit-field (.*) with type (.*) and length (.*) here
  SFINAE: SFINAE_Suppress
  Text: bit-field %0 with type %1 and length %2 here
note_odr_enumerator:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: enumerator (.*) with value (.*) here
  SFINAE: SFINAE_Suppress
  Text: enumerator %0 with value %1 here
note_odr_field:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: field (.*) has type (.*) here
  SFINAE: SFINAE_Suppress
  Text: field %0 has type %1 here
note_odr_field_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: field has name (.*) here
  SFINAE: SFINAE_Suppress
  Text: field has name %0 here
note_odr_friend:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: friend declared here
  SFINAE: SFINAE_Suppress
  Text: friend declared here
note_odr_missing_base:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no corresponding base class here
  SFINAE: SFINAE_Suppress
  Text: no corresponding base class here
note_odr_missing_enumerator:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no corresponding enumerator here
  SFINAE: SFINAE_Suppress
  Text: no corresponding enumerator here
note_odr_missing_field:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no corresponding field here
  SFINAE: SFINAE_Suppress
  Text: no corresponding field here
note_odr_missing_friend:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no corresponding friend here
  SFINAE: SFINAE_Suppress
  Text: no corresponding friend here
note_odr_not_bit_field:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: field (.*) is not a bit-field
  SFINAE: SFINAE_Suppress
  Text: field %0 is not a bit-field
note_odr_number_of_bases:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class has (.*) base (?:class|classes)
  SFINAE: SFINAE_Suppress
  Text: class has %0 base %plural{1:class|:classes}0
note_odr_objc_method_here:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:class|instance) method (.*) also declared here
  SFINAE: SFINAE_Suppress
  Text: '%select{class|instance}0 method %1 also declared here'
note_odr_objc_missing_superclass:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: no corresponding superclass here
  SFINAE: SFINAE_Suppress
  Text: no corresponding superclass here
note_odr_objc_property_impl_kind:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: property (.*) is implemented with (?:@synthesize|@dynamic) here
  SFINAE: SFINAE_Suppress
  Text: property %0 is implemented with %select{@synthesize|@dynamic}1 here
note_odr_objc_superclass:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: inherits from superclass (.*) here
  SFINAE: SFINAE_Suppress
  Text: inherits from superclass %0 here
note_odr_objc_synthesize_ivar_here:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: property is synthesized to ivar (.*) here
  SFINAE: SFINAE_Suppress
  Text: property is synthesized to ivar %0 here
note_odr_parameter_pack_non_pack:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:parameter|parameter pack) declared here
  SFINAE: SFINAE_Suppress
  Text: '%select{parameter|parameter pack}0 declared here'
note_odr_tag_kind_here:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is a (?:struct|interface|union|class|enum) here
  SFINAE: SFINAE_Suppress
  Text: '%0 is a %select{struct|interface|union|class|enum}1 here'
note_odr_template_parameter_here:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template parameter declared here
  SFINAE: SFINAE_Suppress
  Text: template parameter declared here
note_odr_template_parameter_list:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template parameter list also declared here
  SFINAE: SFINAE_Suppress
  Text: template parameter list also declared here
note_odr_value_here:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared here with type (.*)
  SFINAE: SFINAE_Suppress
  Text: declared here with type %0
note_odr_virtual_base:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:non-virtual|virtual) derivation here
  SFINAE: SFINAE_Suppress
  Text: '%select{non-virtual|virtual}0 derivation here'
note_omp_assumption_clause_continue_here:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the ignored tokens spans until here
  SFINAE: SFINAE_Suppress
  Text: the ignored tokens spans until here
note_omp_atomic_capture:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression)
  SFINAE: SFINAE_Suppress
  Text: '%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0'
note_omp_atomic_compare:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:expected compound statement|expected exactly one expression statement|expected assignment statement|expected conditional operator|expect result value to be at false expression|expect binary operator in conditional expression|expect '<', '>' or '==' as order operator|expect comparison in a form of 'x == e', 'e == x', 'x ordop expr', or 'expr ordop x'|expect lvalue for result value|expect scalar value|expect integer value)
  SFINAE: SFINAE_Suppress
  Text: '%select{expected compound statement|expected exactly one expression statement|expected assignment statement|expected conditional operator|expect result value to be at false expression|expect binary operator in conditional expression|expect ''<'', ''>'' or ''=='' as order operator|expect comparison in a form of ''x == e'', ''e == x'', ''x ordop expr'', or ''expr ordop x''|expect lvalue for result value|expect scalar value|expect integer value}0'
note_omp_atomic_read_write:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression)
  SFINAE: SFINAE_Suppress
  Text: '%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0'
note_omp_atomic_update:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '\+', '\*', '-', '/', '&', '\^', '\|', '<<', or '>>' built-in operations|expected in right hand side of expression)
  SFINAE: SFINAE_Suppress
  Text: '%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of ''+'', ''*'', ''-'', ''/'', ''&'', ''^'', ''%|'', ''<<'', or ''>>'' built-in operations|expected in right hand side of expression}0'
note_omp_collapse_ordered_expr:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: as specified in (?:'collapse'|'ordered'|'collapse' and 'ordered') clause(?:||s)
  SFINAE: SFINAE_Suppress
  Text: as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
note_omp_conversion_here:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conversion to (?:integral|enumeration) type (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: conversion to %select{integral|enumeration}0 type %1 declared here
note_omp_critical_hint_here:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|previous )'hint' clause with value '(.*)'
  SFINAE: SFINAE_Suppress
  Text: '%select{|previous }0''hint'' clause with value ''%1'''
note_omp_critical_no_hint:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|previous )directive with no 'hint' clause specified
  SFINAE: SFINAE_Suppress
  Text: '%select{|previous }0directive with no ''hint'' clause specified'
note_omp_ctx_compatible_set_and_selector_for_property:
  ArgsCount: 6
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the context property '(.*)' can be nested in the context selector '(.*)' which is nested in the context set '(.*)'; try 'match\((.*)=\{(.*)\((.*)\)\}\)'
  SFINAE: SFINAE_Suppress
  Text: the context property '%0' can be nested in the context selector '%1' which is nested in the context set '%2'; try 'match(%2={%1(%0)})'
note_omp_ctx_compatible_set_for_selector:
  ArgsCount: 4
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the context selector '(.*)' can be nested in the context set '(.*)'; try 'match\((.*)=\{(.*)(?:|\(property\))\}\)'
  SFINAE: SFINAE_Suppress
  Text: the context selector '%0' can be nested in the context set '%1'; try 'match(%1={%0%select{|(property)}2})'
note_omp_declare_variant_ctx_continue_here:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the ignored (?:set|selector|property) spans until here
  SFINAE: SFINAE_Suppress
  Text: the ignored %select{set|selector|property}0 spans until here
note_omp_declare_variant_ctx_is_a:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' is a context (?:set|selector|property) not a context (?:set|selector|property)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is a context %select{set|selector|property}1 not a context %select{set|selector|property}2'
note_omp_declare_variant_ctx_options:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'context (?:set|selector|property) options are: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'context %select{set|selector|property}0 options are: %1'
note_omp_declare_variant_ctx_try:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: try 'match\((.*)=\{(.*)(.*)\}\)'
  SFINAE: SFINAE_Suppress
  Text: try 'match(%0={%1%2})'
note_omp_declare_variant_ctx_used_here:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: the previous context (?:set|selector|property) '(.*)' used here
  SFINAE: SFINAE_Suppress
  Text: the previous context %select{set|selector|property}0 '%1' used here
note_omp_default_dsa_none:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit data sharing attribute requested here
  SFINAE: SFINAE_Suppress
  Text: explicit data sharing attribute requested here
note_omp_defaultmap_attr_none:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit data sharing attribute, data mapping attribute, or is_device_ptr clause requested here
  SFINAE: SFINAE_Suppress
  Text: explicit data sharing attribute, data mapping attribute, or is_device_ptr clause requested here
note_omp_directive_here:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' directive found here'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' directive found here'
note_omp_exits_structured_block:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump exits scope of OpenMP structured block
  SFINAE: SFINAE_Suppress
  Text: jump exits scope of OpenMP structured block
note_omp_explicit_dsa:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: defined as (.*)
  SFINAE: SFINAE_Suppress
  Text: defined as %0
note_omp_flush_order_clause_here:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: memory order clause '(.*)' is specified here
  SFINAE: SFINAE_Suppress
  Text: memory order clause '%0' is specified here
note_omp_implicit_dsa:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: implicitly determined as (.*)
  SFINAE: SFINAE_Suppress
  Text: implicitly determined as %0
note_omp_invalid_length_on_this_ptr_mapping:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: expected length on mapping of 'this' array section expression to be '1'
  SFINAE: SFINAE_Suppress
  Text: expected length on mapping of 'this' array section expression to be '1'
note_omp_invalid_lower_bound_on_this_ptr_mapping:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: expected lower bound on mapping of 'this' array section expression to be '0' or not specified
  SFINAE: SFINAE_Suppress
  Text: expected lower bound on mapping of 'this' array section expression to be '0' or not specified
note_omp_invalid_subscript_on_this_ptr_map:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: expected 'this' subscript expression on map clause to be 'this\[0\]'
  SFINAE: SFINAE_Suppress
  Text: expected 'this' subscript expression on map clause to be 'this[0]'
note_omp_loop_cond_requres_compatible_incr:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: loop step is expected to be (?:negative|positive) due to this condition
  SFINAE: SFINAE_Suppress
  Text: loop step is expected to be %select{negative|positive}0 due to this condition
note_omp_marked_declare_variant_here:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: marked as 'declare variant' here
  SFINAE: SFINAE_Suppress
  Text: marked as 'declare variant' here
note_omp_marked_device_type_here:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: marked as 'device_type\((.*)\)' here
  SFINAE: SFINAE_Suppress
  Text: marked as 'device_type(%0)' here
note_omp_nested_statement_here:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:statement|directive) outside teams construct here
  SFINAE: SFINAE_Suppress
  Text: '%select{statement|directive}0 outside teams construct here'
note_omp_nested_teams_construct_here:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: nested teams construct here
  SFINAE: SFINAE_Suppress
  Text: nested teams construct here
note_omp_nowait_clause_here:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''nowait'' clause is here'
  SFINAE: SFINAE_Suppress
  Text: '''nowait'' clause is here'
note_omp_ordered_param:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''ordered'' clause(?:| with specified parameter)'
  SFINAE: SFINAE_Suppress
  Text: '''ordered'' clause%select{| with specified parameter}0'
note_omp_predefined_allocator:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: predefined trait '(.*)' used here
  SFINAE: SFINAE_Suppress
  Text: predefined trait '%0' used here
note_omp_predetermined_dsa:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private)(?:|; perhaps you forget to enclose 'omp (.*)' directive into a parallel or another task region\?)
  SFINAE: SFINAE_Suppress
  Text: '%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose ''omp %2'' directive into a parallel or another task region?}1'
note_omp_previous_allocator:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous allocator is specified here
  SFINAE: SFINAE_Suppress
  Text: previous allocator is specified here
note_omp_previous_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' clause is specified here'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' clause is specified here'
note_omp_previous_critical_region:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous 'critical' region starts here
  SFINAE: SFINAE_Suppress
  Text: previous 'critical' region starts here
note_omp_previous_directive:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous '(.*)' directive used here
  SFINAE: SFINAE_Suppress
  Text: previous '%0' directive used here
note_omp_previous_inscan_reduction:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''reduction'' clause with ''inscan'' modifier is used here'
  SFINAE: SFINAE_Suppress
  Text: '''reduction'' clause with ''inscan'' modifier is used here'
note_omp_previous_mem_order_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' clause used here'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' clause used here'
note_omp_previous_named_if_clause:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous clause with directive name modifier specified here
  SFINAE: SFINAE_Suppress
  Text: previous clause with directive name modifier specified here
note_omp_previous_reduction_identifier:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previously marked as task_reduction with different reduction operation
  SFINAE: SFINAE_Suppress
  Text: previously marked as task_reduction with different reduction operation
note_omp_protected_structured_block:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses OpenMP structured block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses OpenMP structured block
note_omp_referenced:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previously referenced here
  SFINAE: SFINAE_Suppress
  Text: previously referenced here
note_omp_requires_encountered_directive:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' previously encountered here'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' previously encountered here'
note_omp_requires_previous_clause:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) clause previously used here
  SFINAE: SFINAE_Suppress
  Text: '%0 clause previously used here'
note_omp_task_predetermined_firstprivate_here:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: predetermined as a firstprivate in a task construct here
  SFINAE: SFINAE_Suppress
  Text: predetermined as a firstprivate in a task construct here
note_opencl_typedef_access_qualifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previously declared '(.*)' here
  SFINAE: SFINAE_Suppress
  Text: previously declared '%0' here
note_operator_arrow_depth:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use -foperator-arrow-depth=N to increase 'operator->' limit
  SFINAE: SFINAE_Suppress
  Text: use -foperator-arrow-depth=N to increase 'operator->' limit
note_operator_arrow_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''operator->'' declared here produces an object of type (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''operator->'' declared here produces an object of type %0'
note_operator_arrows_suppressed:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: \(skipping (.*) 'operator->'s? in backtrace\)
  SFINAE: SFINAE_Suppress
  Text: (skipping %0 'operator->'%s0 in backtrace)
note_overridden_marked_noescape:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: parameter of overridden method is annotated with __attribute__\(\(noescape\)\)
  SFINAE: SFINAE_Suppress
  Text: parameter of overridden method is annotated with __attribute__((noescape))
note_overridden_method:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: overridden method is here
  SFINAE: SFINAE_Suppress
  Text: overridden method is here
note_overridden_virtual_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: overridden virtual function is here
  SFINAE: SFINAE_Suppress
  Text: overridden virtual function is here
note_ovl_ambiguous_oper_binary_reversed_candidate:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: ambiguous candidate function with reversed arguments
  SFINAE: SFINAE_Suppress
  Text: ambiguous candidate function with reversed arguments
note_ovl_ambiguous_oper_binary_reversed_self:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: ambiguity is between a regular call to this operator and a call with the argument order reversed
  SFINAE: SFINAE_Suppress
  Text: ambiguity is between a regular call to this operator and a call with the argument order reversed
note_ovl_ambiguous_oper_binary_selected_candidate:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: candidate function with non-reversed arguments
  SFINAE: SFINAE_Suppress
  Text: candidate function with non-reversed arguments
note_ovl_builtin_candidate:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: built-in candidate (.*)
  SFINAE: SFINAE_Suppress
  Text: built-in candidate %0
note_ovl_candidate:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*))(?:| has different class(?: \(expected \$ but has \$\)|)| has different number of parameters \(expected (.*) but has (.*)\)| has type mismatch at \d+(?:st|nd|rd|th) parameter(?: \(expected \$ but has \$\)|)| has different return type(?: \(\$ expected but has \$\)|)| has different qualifiers \(expected (.*) but found (.*)\)| has different exception specification)'
  SFINAE: SFINAE_Suppress
  Text: candidate %sub{select_ovl_candidate_kind}0,1,3%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %5 but found %6)| has different exception specification}4
note_ovl_candidate_arity:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: requires(?: at least| at most|) (.*) arguments?, but (.*) (?:was|were) provided'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided'
note_ovl_candidate_arity_one:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: (?:requires at least|allows at most single|requires single) argument (.*), but (?:no|(.*)) arguments were provided'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided'
note_ovl_candidate_bad_addrspace:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: cannot (?:pass pointer to|bind reference in) (.*) (?:as a pointer to|to object in) (.*) in \d+(?:st|nd|rd|th) argument'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: cannot %select{pass pointer to|bind reference in}5 %3 %select{as a pointer to|to object in}5 %4 in %ordinal6 argument'
note_ovl_candidate_bad_addrspace_this:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: ''this'' object is in (.*), but method expects object in (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: ''this'' object is in %3, but method expects object in %4'
note_ovl_candidate_bad_arc_conv:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: cannot implicitly convert argument (?:of type \$ to \$|type to parameter type) for (?:\d+(?:st|nd|rd|th) argument|object argument) under ARC'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC'
note_ovl_candidate_bad_base_to_derived_conv:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: cannot (?:convert from|convert from|bind) (?:base class pointer|superclass|base class object of type) (.*) to (?:derived class pointer|subclass|derived class reference) (.*) for \d+(?:st|nd|rd|th) argument'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument'
note_ovl_candidate_bad_conv:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: no known conversion (?:from \$ to \$|from argument type to parameter type) for (?:\d+(?:st|nd|rd|th) argument|object argument)(?:|; dereference the argument with \*|; take the address of the argument with &|; remove \*|; remove &)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7'
note_ovl_candidate_bad_conv_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: cannot convert argument of incomplete type (?:\$ to \$|to parameter type) for (?:\d+(?:st|nd|rd|th) argument|object argument)(?:|; dereference the argument with \*|; take the address of the argument with &|; remove \*|; remove &)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7'
note_ovl_candidate_bad_cvr:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: \d+(?:st|nd|rd|th) argument \((.*)\) would lose (?:const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict) qualifier(?:||s||s|s|s)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4'
note_ovl_candidate_bad_cvr_this:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: ''this'' argument has type (.*), but method is not marked (?:const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: ''this'' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4'
note_ovl_candidate_bad_deduction:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: failed template argument deduction'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: failed template argument deduction'
note_ovl_candidate_bad_gc:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: (?:\d+(?:st|nd|rd|th)|''this'') argument \((.*)\) has (?:no|__weak|__strong) ownership, but parameter has (?:no|__weak|__strong) ownership'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: %select{%ordinal7|''this''}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership'
note_ovl_candidate_bad_list_argument:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: (?:cannot convert initializer list|too few initializers in list|too many initializers in list) argument to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: %select{cannot convert initializer list|too few initializers in list|too many initializers in list}7 argument to %4'
note_ovl_candidate_bad_overload:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: no overload of (.*) matching (.*) for \d+(?:st|nd|rd|th) argument'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: no overload of %4 matching %3 for %ordinal5 argument'
note_ovl_candidate_bad_ownership:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: (?:\d+(?:st|nd|rd|th)|''this'') argument \((.*)\) has (?:no|__unsafe_unretained|__strong|__weak|__autoreleasing) ownership, but parameter has (?:no|__unsafe_unretained|__strong|__weak|__autoreleasing) ownership'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: %select{%ordinal7|''this''}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership'
note_ovl_candidate_bad_target:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: call to (?:__device__|__global__|__host__|__host__ __device__|invalid) function from (?:__device__|__global__|__host__|__host__ __device__|invalid) function'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function'
note_ovl_candidate_bad_unaligned:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: \d+(?:st|nd|rd|th) argument \((.*)\) would lose __unaligned qualifier'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier'
note_ovl_candidate_bad_value_category:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: expects an (?:lvalue|rvalue) for (?:\d+(?:st|nd|rd|th) argument|object argument)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: expects an %select{lvalue|rvalue}5 for %select{%ordinal4 argument|object argument}3'
note_ovl_candidate_constraints_not_satisfied:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit ''operator=='' for this ''operator<=>\)''|inherited constructor)(?:| template| (.*)) not viable: constraints not satisfied'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %sub{select_ovl_candidate_kind}0,1,2 not viable: constraints not satisfied'
note_ovl_candidate_deduced_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: deduced type (?:\$ of (?:|element of )\d+(?:st|nd|rd|th) parameter does not match adjusted type \$ of (?:|element of )argument|of (?:|element of )\d+(?:st|nd|rd|th) parameter does not match adjusted type of (?:|element of )argument)(.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3'
note_ovl_candidate_deleted:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: candidate (?:function|function|function \(with reversed parameter order\)|constructor|constructor \(the implicit default constructor\)|constructor \(the implicit copy constructor\)|constructor \(the implicit move constructor\)|function \(the implicit copy assignment operator\)|function \(the implicit move assignment operator\)|function \(the implicit 'operator==' for this 'operator<=>\)'|inherited constructor)(?:| template| (.*)) has been (?:explicitly made unavailable|explicitly deleted|implicitly deleted)
  SFINAE: SFINAE_Suppress
  Text: candidate %sub{select_ovl_candidate_kind}0,1,2 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
note_ovl_candidate_disabled_by_enable_if:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: disabled by (.*)(.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: disabled by %0%1'
note_ovl_candidate_disabled_by_function_cond_attr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate disabled: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate disabled: %0'
note_ovl_candidate_disabled_by_requirement:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: requirement ''(.*)'' was not satisfied(.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: requirement ''%0'' was not satisfied%1'
note_ovl_candidate_explicit:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit (?:constructor|conversion function|deduction guide) is not a candidate(?:| \(explicit specifier evaluates to true\))
  SFINAE: SFINAE_Suppress
  Text: explicit %select{constructor|conversion function|deduction guide}0 is not a candidate%select{| (explicit specifier evaluates to true)}1
note_ovl_candidate_explicit_arg_mismatch_named:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: invalid explicitly-specified argument for template parameter (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: invalid explicitly-specified argument for template parameter %0'
note_ovl_candidate_explicit_arg_mismatch_unnamed:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: invalid explicitly-specified argument for \d+(?:st|nd|rd|th) template parameter'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter'
note_ovl_candidate_has_pass_object_size_params:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: candidate address cannot be taken because parameter (.*) has pass_object_size attribute
  SFINAE: SFINAE_Suppress
  Text: candidate address cannot be taken because parameter %0 has pass_object_size attribute
note_ovl_candidate_illegal_constructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:constructor|template) ignored: instantiation (?:takes|would take) its own class type by value'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value'
note_ovl_candidate_illegal_constructor_adrspace_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate constructor ignored: cannot be used to construct an object in address space (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate constructor ignored: cannot be used to construct an object in address space %0'
note_ovl_candidate_incomplete_deduction:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: couldn''t infer template argument (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: couldn''t infer template argument %0'
note_ovl_candidate_incomplete_deduction_pack:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: deduced too few arguments for expanded pack (.*); no argument for \d+(?:st|nd|rd|th) expanded parameter in deduced argument pack (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2'
note_ovl_candidate_inconsistent_deduction:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: deduced (?:conflicting types|conflicting values|conflicting templates|packs of different lengths) for parameter (.*)(?: \(\$ vs\. \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: deduced %select{conflicting types|conflicting values|conflicting templates|packs of different lengths}0 for parameter %1%diff{ ($ vs. $)|}2,3'
note_ovl_candidate_inconsistent_deduction_types:
  ArgsCount: 6
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: deduced values (?:of conflicting types for parameter (.*) \((.*) of type \$ vs\. (.*) of type \$\)|(.*) and (.*) of conflicting types for parameter (.*))'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4'
note_ovl_candidate_inherited_constructor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: constructor from base class (.*) inherited here
  SFINAE: SFINAE_Suppress
  Text: constructor from base class %0 inherited here
note_ovl_candidate_inherited_constructor_slice:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate (?:constructor|template) ignored: inherited constructor cannot be used to (?:copy|move) object'
  SFINAE: SFINAE_Suppress
  Text: 'candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object'
note_ovl_candidate_instantiation_depth:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: substitution exceeded maximum template instantiation depth'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: substitution exceeded maximum template instantiation depth'
note_ovl_candidate_non_deduced_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: could not match (?:\$ against \$|types)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: could not match %diff{$ against $|types}0,1'
note_ovl_candidate_non_deduced_mismatch_qualified:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: could not match (.*) against (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: could not match %q0 against %q1'
note_ovl_candidate_substitution_failure:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: substitution failure(.*)(.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: substitution failure%0%1'
note_ovl_candidate_underqualified:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: cannot deduce a type for (.*) that would make (.*) equal (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1'
note_ovl_candidate_unsatisfied_constraints:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'candidate template ignored: constraints not satisfied(.*)'
  SFINAE: SFINAE_Suppress
  Text: 'candidate template ignored: constraints not satisfied%0'
note_ovl_surrogate_cand:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conversion candidate of type (.*)
  SFINAE: SFINAE_Suppress
  Text: conversion candidate of type %0
note_ovl_too_many_candidates:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remaining (.*) candidates? omitted; pass -fshow-overloads=all to show them
  SFINAE: SFINAE_Suppress
  Text: remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
note_ownership_returns_index_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared with index (.*) here
  SFINAE: SFINAE_Suppress
  Text: declared with index %0 here
note_parameter_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: passing argument to parameter here
  SFINAE: SFINAE_Suppress
  Text: passing argument to parameter here
note_parameter_mapping_substitution_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while substituting into concept arguments here; substitution failures not allowed in concept arguments
  SFINAE: SFINAE_Suppress
  Text: while substituting into concept arguments here; substitution failures not allowed in concept arguments
note_parameter_named_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: passing argument to parameter (.*) here
  SFINAE: SFINAE_Suppress
  Text: passing argument to parameter %0 here
note_parameter_pack_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: parameter pack (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: parameter pack %0 declared here
note_parameter_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: parameter of type (.*) is declared here
  SFINAE: SFINAE_Suppress
  Text: parameter of type %0 is declared here
note_partial_availability_specified_here:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) has been marked as being introduced in (.*) (.*) here, but the deployment target is (.*) (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3'
note_partial_spec_match:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: partial specialization matches (.*)
  SFINAE: SFINAE_Suppress
  Text: partial specialization matches %0
note_partial_specialization_declared_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicit specialization declared here
  SFINAE: SFINAE_Suppress
  Text: explicit specialization declared here
note_pch_rebuild_required:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: please rebuild precompiled header '(.*)'
  SFINAE: SFINAE_Suppress
  Text: please rebuild precompiled header '%0'
note_pch_required_by:
  ArgsCount: 2
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' required by ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: '''%0'' required by ''%1'''
note_performs_forbidden_arc_conversion:
  ArgsCount: 0
  CategoryName: ARC Restrictions
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: inline function performs a conversion which is forbidden in ARC
  SFINAE: SFINAE_Suppress
  Text: inline function performs a conversion which is forbidden in ARC
note_pointer_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: pointer (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: pointer %0 declared here
note_possibility:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: one possibility
  SFINAE: SFINAE_Suppress
  Text: one possibility
note_possible_target_of_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: possible target for call
  SFINAE: SFINAE_Suppress
  Text: possible target for call
note_pp_ambiguous_macro_chosen:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: expanding this definition of (.*)
  SFINAE: SFINAE_Suppress
  Text: expanding this definition of %0
note_pp_ambiguous_macro_other:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: other definition of (.*)
  SFINAE: SFINAE_Suppress
  Text: other definition of %0
note_pp_framework_without_header:
  ArgsCount: 3
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did not find header '(.*)' in framework '(.*)' \(loaded from '(.*)'\)
  SFINAE: SFINAE_Suppress
  Text: did not find header '%0' in framework '%1' (loaded from '%2')
note_pp_macro_annotation:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: macro marked '(?:deprecated|restrict_expansion|final)' here
  SFINAE: SFINAE_Suppress
  Text: macro marked '%select{deprecated|restrict_expansion|final}0' here
note_pp_module_begin_here:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: entering module '(.*)' due to this pragma
  SFINAE: SFINAE_Suppress
  Text: entering module '%0' due to this pragma
note_pragma_attribute_applied_decl_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: when applied to this declaration
  SFINAE: SFINAE_Suppress
  Text: when applied to this declaration
note_pragma_attribute_namespace_on_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: omit the namespace to add attributes to the most-recently pushed attribute group
  SFINAE: SFINAE_Suppress
  Text: omit the namespace to add attributes to the most-recently pushed attribute group
note_pragma_attribute_region_ends_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''#pragma clang attribute push'' regions ends here'
  SFINAE: SFINAE_Suppress
  Text: '''#pragma clang attribute push'' regions ends here'
note_pragma_attribute_use_attribute_kw:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use the GNU '__attribute__' syntax
  SFINAE: SFINAE_Suppress
  Text: use the GNU '__attribute__' syntax
note_pragma_entered_here:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '#pragma entered here'
  SFINAE: SFINAE_Suppress
  Text: '#pragma entered here'
note_pragma_loop_invalid_vectorize_option:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: vectorize_width loop hint malformed; use vectorize_width\(X, fixed\) or vectorize_width\(X, scalable\) where X is an integer, or vectorize_width\('fixed' or 'scalable'\)
  SFINAE: SFINAE_Suppress
  Text: vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
note_pragma_pack_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous '#pragma pack' directive that modifies alignment is here
  SFINAE: SFINAE_Suppress
  Text: previous '#pragma pack' directive that modifies alignment is here
note_pragma_pack_pop_instead_reset:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you intend to use '#pragma pack \(pop\)' instead of '#pragma pack\(\)'\?
  SFINAE: SFINAE_Suppress
  Text: did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
note_precedence_bitwise_first:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: place parentheses around the (.*) expression to evaluate it first
  SFINAE: SFINAE_Suppress
  Text: place parentheses around the %0 expression to evaluate it first
note_precedence_conditional_first:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: place parentheses around the '\?:' expression to evaluate it first
  SFINAE: SFINAE_Suppress
  Text: place parentheses around the '?:' expression to evaluate it first
note_precedence_silence:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: place parentheses around the '(.*)' expression to silence this warning
  SFINAE: SFINAE_Suppress
  Text: place parentheses around the '%0' expression to silence this warning
note_prev_module_declaration:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous module declaration is here
  SFINAE: SFINAE_Suppress
  Text: previous module declaration is here
note_prev_module_definition:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previously defined here
  SFINAE: SFINAE_Suppress
  Text: previously defined here
note_prev_module_definition_from_ast_file:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module loaded from '(.*)'
  SFINAE: SFINAE_Suppress
  Text: module loaded from '%0'
note_prev_partial_spec_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous declaration of class template partial specialization (.*) is here
  SFINAE: SFINAE_Suppress
  Text: previous declaration of class template partial specialization %0 is here
note_previous_access_declaration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previously declared '(.*)' here
  SFINAE: SFINAE_Suppress
  Text: previously declared '%1' here
note_previous_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous attribute is here
  SFINAE: SFINAE_Suppress
  Text: previous attribute is here
note_previous_builtin_declaration:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is a builtin with type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 is a builtin with type %1'
note_previous_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: '%0 declared here'
note_previous_declaration:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous declaration is here
  SFINAE: SFINAE_Suppress
  Text: previous declaration is here
note_previous_default_assoc:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous default generic association is here
  SFINAE: SFINAE_Suppress
  Text: previous default generic association is here
note_previous_definition:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous definition is here
  SFINAE: SFINAE_Suppress
  Text: previous definition is here
note_previous_exception_handler:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: for type (.*)
  SFINAE: SFINAE_Suppress
  Text: for type %0
note_previous_explicit_instantiation:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous explicit instantiation is here
  SFINAE: SFINAE_Suppress
  Text: previous explicit instantiation is here
note_previous_field_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous initialization for field (.*) is here
  SFINAE: SFINAE_Suppress
  Text: previous initialization for field %0 is here
note_previous_implicit_declaration:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous implicit declaration is here
  SFINAE: SFINAE_Suppress
  Text: previous implicit declaration is here
note_previous_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous initialization (?:|with side effects )is here(?:| \(side effects will not occur at run time\))
  SFINAE: SFINAE_Suppress
  Text: previous initialization %select{|with side effects }0is here%select{| (side effects will not occur at run time)}0
note_previous_ms_inheritance:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous inheritance model specified here
  SFINAE: SFINAE_Suppress
  Text: previous inheritance model specified here
note_previous_namespace_alias:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previously defined as an alias for (.*)
  SFINAE: SFINAE_Suppress
  Text: previously defined as an alias for %0
note_previous_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous statement is here
  SFINAE: SFINAE_Suppress
  Text: previous statement is here
note_previous_template_specialization:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous template specialization is here
  SFINAE: SFINAE_Suppress
  Text: previous template specialization is here
note_previous_use:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous use is here
  SFINAE: SFINAE_Suppress
  Text: previous use is here
note_previous_uuid:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous uuid specified here
  SFINAE: SFINAE_Suppress
  Text: previous uuid specified here
note_printf_c_str:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to call the (.*) method\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to call the %0 method?
note_prior_template_arg_substitution:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while substituting prior template arguments into (?:non-type|template) template parameter(.*) (.*)
  SFINAE: SFINAE_Suppress
  Text: while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
note_private_extern:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use __attribute__\(\(visibility\("hidden"\)\)\) attribute instead
  SFINAE: SFINAE_Suppress
  Text: use __attribute__((visibility("hidden"))) attribute instead
note_private_module_fragment:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: private module fragment begins here
  SFINAE: SFINAE_Suppress
  Text: private module fragment begins here
note_private_top_level_defined:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: module defined here
  SFINAE: SFINAE_Suppress
  Text: module defined here
note_property_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: property (.*) is declared (?:deprecated|unavailable|partial) here
  SFINAE: SFINAE_Suppress
  Text: property %0 is declared %select{deprecated|unavailable|partial}1 here
note_property_declare:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: property declared here
  SFINAE: SFINAE_Suppress
  Text: property declared here
note_property_synthesize:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: property synthesized here
  SFINAE: SFINAE_Suppress
  Text: property synthesized here
note_protected_by___block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses setup of __block variable
  SFINAE: SFINAE_Suppress
  Text: jump bypasses setup of __block variable
note_protected_by_cleanup:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of variable with __attribute__\(\(cleanup\)\)
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of variable with __attribute__((cleanup))
note_protected_by_consteval_if:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters controlled statement of consteval if
  SFINAE: SFINAE_Suppress
  Text: jump enters controlled statement of consteval if
note_protected_by_constexpr_if:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters controlled statement of constexpr if
  SFINAE: SFINAE_Suppress
  Text: jump enters controlled statement of constexpr if
note_protected_by_cxx_catch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of catch block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of catch block
note_protected_by_cxx_try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of try block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of try block
note_protected_by_if_available:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters controlled statement of if available
  SFINAE: SFINAE_Suppress
  Text: jump enters controlled statement of if available
note_protected_by_non_trivial_c_struct_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of variable of non-trivial C struct type
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of variable of non-trivial C struct type
note_protected_by_objc_autoreleasepool:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses auto release push of @autoreleasepool block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses auto release push of @autoreleasepool block
note_protected_by_objc_catch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of @catch block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of @catch block
note_protected_by_objc_fast_enumeration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump enters Objective-C fast enumeration loop
  SFINAE: SFINAE_Suppress
  Text: jump enters Objective-C fast enumeration loop
note_protected_by_objc_finally:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of @finally block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of @finally block
note_protected_by_objc_strong_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of __strong variable
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of __strong variable
note_protected_by_objc_synchronized:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of @synchronized block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of @synchronized block
note_protected_by_objc_try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of @try block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of @try block
note_protected_by_objc_weak_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of __weak variable
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of __weak variable
note_protected_by_seh_except:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of __except block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of __except block
note_protected_by_seh_finally:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of __finally block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of __finally block
note_protected_by_seh_try:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of __try block
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of __try block
note_protected_by_variable_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses variable initialization
  SFINAE: SFINAE_Suppress
  Text: jump bypasses variable initialization
note_protected_by_variable_non_pod:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of non-POD variable
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of non-POD variable
note_protected_by_variable_nontriv_destructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses variable with a non-trivial destructor
  SFINAE: SFINAE_Suppress
  Text: jump bypasses variable with a non-trivial destructor
note_protected_by_vla:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of variable length array
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of variable length array
note_protected_by_vla_type_alias:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of VLA type alias
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of VLA type alias
note_protected_by_vla_typedef:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: jump bypasses initialization of VLA typedef
  SFINAE: SFINAE_Suppress
  Text: jump bypasses initialization of VLA typedef
note_protocol_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: protocol is declared here
  SFINAE: SFINAE_Suppress
  Text: protocol is declared here
note_protocol_decl_undefined:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: protocol (.*) has no definition
  SFINAE: SFINAE_Suppress
  Text: protocol %0 has no definition
note_protocol_method:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: protocol method is here
  SFINAE: SFINAE_Suppress
  Text: protocol method is here
note_protocol_property_declare:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: it could also be property (?:of type (.*)|without attribute '(.*)'|with attribute '(.*)'|with getter (.*)|with setter (.*)) declared here
  SFINAE: SFINAE_Suppress
  Text: it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
note_pure_qualified_call_kext:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: qualified call to (.*)::(.*) is treated as a virtual call to (.*) due to -fapple-kext
  SFINAE: SFINAE_Suppress
  Text: qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
note_pure_virtual_function:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: unimplemented pure virtual method (.*) in (.*)
  SFINAE: SFINAE_Suppress
  Text: unimplemented pure virtual method %0 in %1
note_raii_guard_add_name:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add a variable name to declare a (.*) initialized with (.*)
  SFINAE: SFINAE_Suppress
  Text: add a variable name to declare a %0 initialized with %1
note_receiver_class_declared:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: receiver is instance of class declared here
  SFINAE: SFINAE_Suppress
  Text: receiver is instance of class declared here
note_receiver_expr_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: receiver expression is here
  SFINAE: SFINAE_Suppress
  Text: receiver expression is here
note_receiver_is_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: receiver is treated with 'id' type for purpose of method lookup
  SFINAE: SFINAE_Suppress
  Text: receiver is treated with 'id' type for purpose of method lookup
note_recursive_default_argument_used_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: default argument used here
  SFINAE: SFINAE_Suppress
  Text: default argument used here
note_redefinition_include_same_file:
  ArgsCount: 1
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' included multiple times, additional include site here'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' included multiple times, additional include site here'
note_redefinition_modules_same_file:
  ArgsCount: 2
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '''(.*)'' included multiple times, additional include site in header from module ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: '''%0'' included multiple times, additional include site in header from module ''%1'''
note_ref_or_ptr_member_declared_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:reference|pointer) member declared here
  SFINAE: SFINAE_Suppress
  Text: '%select{reference|pointer}0 member declared here'
note_refconst_member_not_initialized:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:const|reference) member (.*) will never be initialized
  SFINAE: SFINAE_Suppress
  Text: '%select{const|reference}0 member %1 will never be initialized'
note_reference_is_return_value:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) returns a reference
  SFINAE: SFINAE_Suppress
  Text: '%0 returns a reference'
note_referenced_class_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class template declared here
  SFINAE: SFINAE_Suppress
  Text: class template declared here
note_reinterpret_updowncast_use_static:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use 'static_cast' to adjust the pointer correctly while (?:upcasting|downcasting)
  SFINAE: SFINAE_Suppress
  Text: use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
note_related_result_type_explicit:
  ArgsCount: 0
  CategoryName: Related Result Type Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:overridden|current) method is explicitly declared 'instancetype'(?:| and is expected to return an instance of its class type)
  SFINAE: SFINAE_Suppress
  Text: '%select{overridden|current}0 method is explicitly declared ''instancetype''%select{| and is expected to return an instance of its class type}0'
note_related_result_type_family:
  ArgsCount: 0
  CategoryName: Related Result Type Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:overridden|current) method is part of the '(?:|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self)' method family(?:| and is expected to return an instance of its class type)
  SFINAE: SFINAE_Suppress
  Text: '%select{overridden|current}0 method is part of the ''%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1'' method family%select{| and is expected to return an instance of its class type}0'
note_related_result_type_inferred:
  ArgsCount: 2
  CategoryName: Related Result Type Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:class|instance) method (.*) is assumed to return an instance of its receiver type \((.*)\)
  SFINAE: SFINAE_Suppress
  Text: '%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)'
note_related_result_type_overridden:
  ArgsCount: 0
  CategoryName: Related Result Type Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: overridden method returns an instance of its class type
  SFINAE: SFINAE_Suppress
  Text: overridden method returns an instance of its class type
note_remove_abs:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove the call to '(.*)' since unsigned values cannot be negative
  SFINAE: SFINAE_Suppress
  Text: remove the call to '%0' since unsigned values cannot be negative
note_remove_max_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove call to max function and unsigned zero argument
  SFINAE: SFINAE_Suppress
  Text: remove call to max function and unsigned zero argument
note_remove_move:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove std::move call here
  SFINAE: SFINAE_Suppress
  Text: remove std::move call here
note_remove_parens_for_variable_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove parentheses to silence this warning
  SFINAE: SFINAE_Suppress
  Text: remove parentheses to silence this warning
note_replace_abs_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use function '(.*)' instead
  SFINAE: SFINAE_Suppress
  Text: use function '%0' instead
note_rewriting_operator_as_spaceship:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while rewriting comparison as call to 'operator<=>' declared here
  SFINAE: SFINAE_Suppress
  Text: while rewriting comparison as call to 'operator<=>' declared here
note_riscv_repeated_interrupt_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: repeated RISC-V 'interrupt' attribute is here
  SFINAE: SFINAE_Suppress
  Text: repeated RISC-V 'interrupt' attribute is here
note_second_module_difference:
  ArgsCount: 0
  CategoryName: AST Deserialization Issue
  Class: CLASS_NOTE
  Component: Serialization
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in second definition, possible difference is here
  SFINAE: SFINAE_Suppress
  Text: in second definition, possible difference is here
note_sentinel_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:function|method|block) has been explicitly marked sentinel here
  SFINAE: SFINAE_Suppress
  Text: '%select{function|method|block}0 has been explicitly marked sentinel here'
note_shadow_field:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared here
  SFINAE: SFINAE_Suppress
  Text: declared here
note_silence_aligned_allocation_unavailable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
  SFINAE: SFINAE_Suppress
  Text: if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
note_single_arg_concept_specialization_constraint_evaluated_to_false:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) (.*) does not satisfy (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 %1 does not satisfy %2'
note_specialized_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: attempt to specialize declaration here
  SFINAE: SFINAE_Suppress
  Text: attempt to specialize declaration here
note_specialized_entity:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: explicitly specialized declaration is here
  SFINAE: SFINAE_Suppress
  Text: explicitly specialized declaration is here
note_static_for_internal_linkage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declare 'static' if the (?:variable|function) is not intended to be used outside of this translation unit
  SFINAE: SFINAE_Suppress
  Text: declare 'static' if the %select{variable|function}0 is not intended to be used outside of this translation unit
note_string_plus_scalar_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use array indexing to silence this warning
  SFINAE: SFINAE_Suppress
  Text: use array indexing to silence this warning
note_strlcpycat_wrong_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: change size argument to be the size of the destination
  SFINAE: SFINAE_Suppress
  Text: change size argument to be the size of the destination
note_strncat_wrong_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: change the argument to be the free space in the destination buffer minus the terminating null byte
  SFINAE: SFINAE_Suppress
  Text: change the argument to be the free space in the destination buffer minus the terminating null byte
note_struct_class_suggestion:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean (?:struct|interface|class) here\?
  SFINAE: SFINAE_Suppress
  Text: did you mean %select{struct|interface|class}0 here?
note_substituted_constraint_expr_is_ill_formed:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: because substituted constraint expression is ill-formed(.*)
  SFINAE: SFINAE_Suppress
  Text: because substituted constraint expression is ill-formed%0
note_suggest_disabling_all_checkers:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use -analyzer-disable-all-checks to disable all static analyzer checkers
  SFINAE: SFINAE_Suppress
  Text: use -analyzer-disable-all-checks to disable all static analyzer checkers
note_suggest_parens_for_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: parentheses are required around macro argument containing braced initializer list
  SFINAE: SFINAE_Suppress
  Text: parentheses are required around macro argument containing braced initializer list
note_suppress_ctad_maybe_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add a deduction guide to suppress this warning
  SFINAE: SFINAE_Suppress
  Text: add a deduction guide to suppress this warning
note_suppressed_class_declare:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class with specified objc_requires_property_definitions attribute is declared here
  SFINAE: SFINAE_Suppress
  Text: class with specified objc_requires_property_definitions attribute is declared here
note_surrounding_namespace_ends_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: surrounding namespace with visibility attribute ends here
  SFINAE: SFINAE_Suppress
  Text: surrounding namespace with visibility attribute ends here
note_surrounding_namespace_starts_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: surrounding namespace with visibility attribute starts here
  SFINAE: SFINAE_Suppress
  Text: surrounding namespace with visibility attribute starts here
note_suspicious_bzero_size_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: parenthesize the second argument to silence
  SFINAE: SFINAE_Suppress
  Text: parenthesize the second argument to silence
note_suspicious_sizeof_memset_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:parenthesize the third argument|cast the second argument to 'int') to silence
  SFINAE: SFINAE_Suppress
  Text: '%select{parenthesize the third argument|cast the second argument to ''int''}0 to silence'
note_switch_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conversion to (?:integral|enumeration) type (.*)
  SFINAE: SFINAE_Suppress
  Text: conversion to %select{integral|enumeration}0 type %1
note_tail_call_required:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: tail call required by (.*) attribute here
  SFINAE: SFINAE_Suppress
  Text: tail call required by %0 attribute here
note_template_arg_internal_object:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-type template argument refers to (?:function|object) here
  SFINAE: SFINAE_Suppress
  Text: non-type template argument refers to %select{function|object}0 here
note_template_arg_refers_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: non-type template argument refers here
  SFINAE: SFINAE_Suppress
  Text: non-type template argument refers here
note_template_arg_refers_here_func:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template argument refers to function template (.*), here
  SFINAE: SFINAE_Suppress
  Text: template argument refers to function template %0, here
note_template_class_explicit_specialization_was_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class template (.*) was explicitly specialized here
  SFINAE: SFINAE_Suppress
  Text: class template %0 was explicitly specialized here
note_template_class_instantiation_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of template class (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of template class %q0 requested here
note_template_class_instantiation_was_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: class template (.*) was instantiated here
  SFINAE: SFINAE_Suppress
  Text: class template %0 was instantiated here
note_template_decl_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template is declared here
  SFINAE: SFINAE_Suppress
  Text: template is declared here
note_template_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:function template|class template|variable template|type alias template|template template parameter) (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: '%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here'
note_template_default_arg_checking:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: while checking a default template argument used here
  SFINAE: SFINAE_Suppress
  Text: while checking a default template argument used here
note_template_enum_def_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of enumeration (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of enumeration %q0 requested here
note_template_exception_spec_instantiation_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of exception specification for (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of exception specification for %0 requested here
note_template_kw_refers_to_non_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: declared as a non-template here
  SFINAE: SFINAE_Suppress
  Text: declared as a non-template here
note_template_member_class_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of member class (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of member class %q0 requested here
note_template_member_function_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of member function (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of member function %q0 requested here
note_template_nontype_parm_different_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template non-type parameter has a different type (.*) in template argument
  SFINAE: SFINAE_Suppress
  Text: template non-type parameter has a different type %0 in template argument
note_template_nontype_parm_prev_declaration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous non-type template parameter with type (.*) is here
  SFINAE: SFINAE_Suppress
  Text: previous non-type template parameter with type %0 is here
note_template_nsdmi_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of default member initializer (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of default member initializer %q0 requested here
note_template_param_different_kind:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template parameter has a different kind in template argument
  SFINAE: SFINAE_Suppress
  Text: template parameter has a different kind in template argument
note_template_param_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: template parameter is declared here
  SFINAE: SFINAE_Suppress
  Text: template parameter is declared here
note_template_param_list_different_arity:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:too few|too many) template parameters in template template argument
  SFINAE: SFINAE_Suppress
  Text: '%select{too few|too many}0 template parameters in template template argument'
note_template_param_prev_default_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous default template argument defined here
  SFINAE: SFINAE_Suppress
  Text: previous default template argument defined here
note_template_parameter_pack_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous (?:template type|non-type template|template template) parameter(?:| pack) declared here
  SFINAE: SFINAE_Suppress
  Text: previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
note_template_parameter_pack_non_pack:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:template type|non-type template|template template) parameter(?:| pack) does not match (?:template type|non-type template|template template) parameter(?: pack|) in template argument'
  SFINAE: SFINAE_Suppress
  Text: '%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument'
note_template_prev_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous template (?:declaration|template parameter) is here
  SFINAE: SFINAE_Suppress
  Text: previous template %select{declaration|template parameter}0 is here
note_template_recursion_depth:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use -ftemplate-depth=N to increase recursive template instantiation depth
  SFINAE: SFINAE_Suppress
  Text: use -ftemplate-depth=N to increase recursive template instantiation depth
note_template_requirement_instantiation_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of requirement here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of requirement here
note_template_static_data_member_def_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of static data member (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of static data member %q0 requested here
note_template_type_alias_instantiation_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of template type alias (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of template type alias %0 requested here
note_template_unnamed_type_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: unnamed type used in template argument was declared here
  SFINAE: SFINAE_Suppress
  Text: unnamed type used in template argument was declared here
note_template_variable_def_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in instantiation of variable template specialization (.*) requested here
  SFINAE: SFINAE_Suppress
  Text: in instantiation of variable template specialization %q0 requested here
note_thread_warning_in_fun:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: thread warning in function (.*)
  SFINAE: SFINAE_Suppress
  Text: thread warning in function %0
note_throw_in_dtor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:destructor|deallocator) has a (?:non-throwing|implicit non-throwing) exception specification
  SFINAE: SFINAE_Suppress
  Text: '%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification'
note_throw_in_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: function declared non-throwing here
  SFINAE: SFINAE_Suppress
  Text: function declared non-throwing here
note_throw_underaligned_obj:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: required alignment of type (.*) \((.*) bytes\) is larger than the supported alignment of C\+\+ exception objects on this target \((.*) bytes\)
  SFINAE: SFINAE_Suppress
  Text: required alignment of type %0 (%1 bytes) is larger than the supported alignment of C++ exception objects on this target (%2 bytes)
note_transparent_union_first_field_size_align:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:alignment|size) of first field is (.*) bits
  SFINAE: SFINAE_Suppress
  Text: '%select{alignment|size}0 of first field is %1 bits'
note_type_being_defined:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: definition of (.*) is not complete until the closing '\}'
  SFINAE: SFINAE_Suppress
  Text: definition of %0 is not complete until the closing '}'
note_type_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) is incomplete
  SFINAE: SFINAE_Suppress
  Text: '%0 is incomplete'
note_type_requirement_substitution_error:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: '(?:and|because) ''(.*)'' would be invalid: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid: %2'
note_type_requirement_unknown_substitution_error:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:and|because) '(.*)' would be invalid
  SFINAE: SFINAE_Suppress
  Text: '%select{and|because}0 ''%1'' would be invalid'
note_typecheck_assign_const:
  ArgsCount: 6
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:function (.*) which returns const-qualified type (.*) declared here|variable (.*) declared const here|(?:non-|)static data member (.*) declared const here|member function (.*) is declared const here|(?:|nested )data member (.*) declared const here)
  SFINAE: SFINAE_Suppress
  Text: '%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0'
note_typecheck_invalid_operands_converted:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:first|second) operand was implicitly converted to type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{first|second}0 operand was implicitly converted to type %1'
note_typecheck_member_reference_suggestion:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to use '\.' instead\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to use '.' instead?
note_typedef_for_linkage_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: type is given name (.*) for linkage purposes by this (?:typedef|alias) declaration
  SFINAE: SFINAE_Suppress
  Text: type is given name %0 for linkage purposes by this %select{typedef|alias}1 declaration
note_typename_member_refers_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: referenced member (.*) is declared here
  SFINAE: SFINAE_Suppress
  Text: referenced member %0 is declared here
note_typename_refers_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: referenced (.*) is declared here
  SFINAE: SFINAE_Suppress
  Text: referenced %0 is declared here
note_ucn_four_not_eight:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_NOTE
  Component: Lex
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to use '\\u'\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to use '\u'?
note_unguarded_available_silence:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: enclose (.*) in (?:an @available|a __builtin_available) check to silence this warning
  SFINAE: SFINAE_Suppress
  Text: enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
note_unimplemented_constexpr_lambda_feature_ast:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: AST
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'unimplemented constexpr lambda feature: (.*) \(coming soon!\)'
  SFINAE: SFINAE_Suppress
  Text: 'unimplemented constexpr lambda feature: %0 (coming soon!)'
note_uninit_fixit_remove_cond:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: remove the (?:'(.*)' if its condition|condition if it) is always (?:false|true)
  SFINAE: SFINAE_Suppress
  Text: remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
note_uninit_in_this_constructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: during field initialization in (?:this|the implicit default) constructor
  SFINAE: SFINAE_Suppress
  Text: during field initialization in %select{this|the implicit default}0 constructor
note_uninit_reference_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: uninitialized reference member is here
  SFINAE: SFINAE_Suppress
  Text: uninitialized reference member is here
note_uninit_var_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:uninitialized use occurs|variable is captured by block) here
  SFINAE: SFINAE_Suppress
  Text: '%select{uninitialized use occurs|variable is captured by block}0 here'
note_unlocked_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (.*) released here
  SFINAE: SFINAE_Suppress
  Text: '%0 released here'
note_unparenthesized_non_primary_expr_in_requires_clause:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_NOTE
  Component: Parse
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: parentheses are required around this expression in a requires clause
  SFINAE: SFINAE_Suppress
  Text: parentheses are required around this expression in a requires clause
note_unreachable_entity:
  ArgsCount: 0
  CategoryName: Modules Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:declaration|definition|default argument declared|explicit specialization declared|partial specialization declared) here is not (?:visible|reachable|reachable|reachable|reachable|reachable)
  SFINAE: SFINAE_Suppress
  Text: '%select{declaration|definition|default argument declared|explicit specialization declared|partial specialization declared}0 here is not %select{visible|reachable|reachable|reachable|reachable|reachable}0'
note_unreachable_silence:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: silence by adding parentheses to mark code as explicitly dead
  SFINAE: SFINAE_Suppress
  Text: silence by adding parentheses to mark code as explicitly dead
note_use_dashdash:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Driver
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use '--' to treat subsequent arguments as filenames
  SFINAE: SFINAE_Suppress
  Text: use '--' to treat subsequent arguments as filenames
note_use_ifdef_guards:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'unguarded header; consider using #ifdef guards or #pragma once'
  SFINAE: SFINAE_Suppress
  Text: 'unguarded header; consider using #ifdef guards or #pragma once'
note_use_non_reference_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use non-reference type (.*)
  SFINAE: SFINAE_Suppress
  Text: use non-reference type %0
note_use_reference_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use reference type (.*) to prevent copying
  SFINAE: SFINAE_Suppress
  Text: use reference type %0 to prevent copying
note_use_thread_local:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use 'thread_local' to allow this
  SFINAE: SFINAE_Suppress
  Text: use 'thread_local' to allow this
note_use_type_or_non_reference:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use non-reference type (.*) to make construction explicit or type (.*) to prevent copying
  SFINAE: SFINAE_Suppress
  Text: use non-reference type %0 to make construction explicit or type %1 to prevent copying
note_used_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: used here
  SFINAE: SFINAE_Suppress
  Text: used here
note_used_in_initialization_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: used in initialization here
  SFINAE: SFINAE_Suppress
  Text: used in initialization here
note_user_declared_ctor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: implicit default constructor suppressed by user-declared constructor
  SFINAE: SFINAE_Suppress
  Text: implicit default constructor suppressed by user-declared constructor
note_using:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: using
  SFINAE: SFINAE_Suppress
  Text: using
note_using_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|previous )using declaration
  SFINAE: SFINAE_Suppress
  Text: '%select{|previous }0using declaration'
note_using_decl_class_member_workaround:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: use (?:an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable) instead
  SFINAE: SFINAE_Suppress
  Text: use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
note_using_decl_conflict:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: conflicting declaration
  SFINAE: SFINAE_Suppress
  Text: conflicting declaration
note_using_decl_target:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: target of using declaration
  SFINAE: SFINAE_Suppress
  Text: target of using declaration
note_using_enum_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:|previous )using-enum declaration
  SFINAE: SFINAE_Suppress
  Text: '%select{|previous }0using-enum declaration'
note_using_value_decl_missing_typename:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: add 'typename' to treat this using declaration as a type
  SFINAE: SFINAE_Suppress
  Text: add 'typename' to treat this using declaration as a type
note_valid_options:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Common
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: 'valid target CPU values are: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'valid target CPU values are: %0'
note_value_initialization_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: in value-initialization of type (.*) here
  SFINAE: SFINAE_Suppress
  Text: in value-initialization of type %0 here
note_var_declared_here:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: variable (.*) is declared here
  SFINAE: SFINAE_Suppress
  Text: variable %0 is declared here
note_var_explicitly_captured_here:
  ArgsCount: 1
  CategoryName: Lambda Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: variable (.*) is(?:| explicitly) captured here
  SFINAE: SFINAE_Suppress
  Text: variable %0 is%select{| explicitly}1 captured here
note_var_fixit_add_initialization:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: initialize the variable (.*) to silence this warning
  SFINAE: SFINAE_Suppress
  Text: initialize the variable %0 to silence this warning
note_var_prev_partial_spec_here:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: previous declaration of variable template partial specialization is here
  SFINAE: SFINAE_Suppress
  Text: previous declaration of variable template partial specialization is here
note_vbase_moved_here:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: (?:(.*) is a virtual base class of base class (.*) declared here|virtual base class (.*) declared here)
  SFINAE: SFINAE_Suppress
  Text: '%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0'
note_verify_ambiguous_marker:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: ambiguous marker '(.*)' is defined here
  SFINAE: SFINAE_Suppress
  Text: ambiguous marker '%0' is defined here
note_vla_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: variable length arrays are not supported for the current target
  SFINAE: SFINAE_Suppress
  Text: variable length arrays are not supported for the current target
note_which_delegates_to:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: which delegates to
  SFINAE: SFINAE_Suppress
  Text: which delegates to
note_while_in_implementation:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: detected while default synthesizing properties in class implementation
  SFINAE: SFINAE_Suppress
  Text: detected while default synthesizing properties in class implementation
note_widen_bitfield:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: widen this field to (.*) bits to store all values of (.*)
  SFINAE: SFINAE_Suppress
  Text: widen this field to %0 bits to store all values of %1
note_within_field_of_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: within field of type (.*) declared here
  SFINAE: SFINAE_Suppress
  Text: within field of type %0 declared here
note_xor_used_as_pow_silence:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: replace expression with '(.*)' (?:|or use 'xor' instead of '\^' )to silence this warning
  SFINAE: SFINAE_Suppress
  Text: replace expression with '%0' %select{|or use 'xor' instead of '^' }1to silence this warning
null_in_char_or_string:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: null-character
  Regex: null character\(s\) preserved in (?:char|string) literal
  SFINAE: SFINAE_Suppress
  Text: null character(s) preserved in %select{char|string}0 literal
null_in_file:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: null-character
  Regex: null character ignored
  SFINAE: SFINAE_Suppress
  Text: null character ignored
override_keyword_hides_virtual_member_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: non-virtual member function marked '(.*)' hides virtual member (?:function|functions)
  SFINAE: SFINAE_SubstitutionFailure
  Text: non-virtual member function marked '%0' hides virtual member %select{function|functions}1
override_keyword_only_allowed_on_virtual_member_functions:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: only virtual member functions can be marked '(.*)'
  SFINAE: SFINAE_SubstitutionFailure
  Text: only virtual member functions can be marked '%0'
pp_disabled_macro_expansion:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: disabled-macro-expansion
  Regex: disabled expansion of recursive macro
  SFINAE: SFINAE_Suppress
  Text: disabled expansion of recursive macro
pp_err_elif_after_else:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:#elif|#elifdef|#elifndef) after #else'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{#elif|#elifdef|#elifndef}0 after #else'
pp_err_elif_without_if:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '(?:#elif|#elifdef|#elifndef) without #if'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '%select{#elif|#elifdef|#elifndef}0 without #if'
pp_err_else_after_else:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#else after #else'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#else after #else'
pp_err_else_without_if:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: '#else without #if'
  SFINAE: SFINAE_SubstitutionFailure
  Text: '#else without #if'
pp_include_macros_out_of_predefines:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_ERROR
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: None
  Regex: 'the #__include_macros directive is only for internal use by -imacros'
  SFINAE: SFINAE_SubstitutionFailure
  Text: 'the #__include_macros directive is only for internal use by -imacros'
pp_include_next_absolute_path:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: include-next-absolute-path
  Regex: '#include_next in file found relative to primary source file or found by absolute path; will search from start of include path'
  SFINAE: SFINAE_Suppress
  Text: '#include_next in file found relative to primary source file or found by absolute path; will search from start of include path'
pp_include_next_in_primary:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: include-next-outside-header
  Regex: '#include_next in primary source file; will search from start of include path'
  SFINAE: SFINAE_Suppress
  Text: '#include_next in primary source file; will search from start of include path'
pp_invalid_string_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: invalid string literal, ignoring final '\\'
  SFINAE: SFINAE_Suppress
  Text: invalid string literal, ignoring final '\'
pp_macro_not_used:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: unused-macros
  Regex: macro is not used
  SFINAE: SFINAE_Suppress
  Text: macro is not used
pp_nonportable_path:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: nonportable-include-path
  Regex: non-portable path to file '(.*)'; specified path differs in case from file name on disk
  SFINAE: SFINAE_Suppress
  Text: non-portable path to file '%0'; specified path differs in case from file name on disk
pp_nonportable_system_path:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: nonportable-system-include-path
  Regex: non-portable path to file '(.*)'; specified path differs in case from file name on disk
  SFINAE: SFINAE_Suppress
  Text: non-portable path to file '%0'; specified path differs in case from file name on disk
pp_out_of_date_dependency:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: current file is older than dependency (.*)
  SFINAE: SFINAE_Suppress
  Text: current file is older than dependency %0
pp_poisoning_existing_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: poisoning existing macro
  SFINAE: SFINAE_Suppress
  Text: poisoning existing macro
pp_pragma_once_in_main_file:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: pragma-once-outside-header
  Regex: '#pragma once in main file'
  SFINAE: SFINAE_Suppress
  Text: '#pragma once in main file'
pp_pragma_sysheader_in_main_file:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: pragma-system-header-outside-header
  Regex: '#pragma system_header ignored in main file'
  SFINAE: SFINAE_Suppress
  Text: '#pragma system_header ignored in main file'
remark_cc1_round_trip_generated:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_REMARK
  Component: Driver
  DefaultSeverity: SEV_Ignored
  Group: round-trip-cc1-args
  Regex: 'generated arguments #(.*) in round-trip: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'generated arguments #%0 in round-trip: %1'
remark_fe_backend_optimization_remark_analysis_aliasing:
  ArgsCount: 1
  CategoryName: Backend Issue
  Class: CLASS_REMARK
  Component: Frontend
  DefaultSeverity: SEV_Ignored
  Group: pass-analysis
  Regex: (.*); allow reordering by specifying '#pragma clang loop vectorize\(enable\)' before the loop\. If the arrays will always be independent specify '#pragma clang loop vectorize\(assume_safety\)' before the loop or provide the '__restrict__' qualifier with the independent array arguments\. Erroneous results will occur if these options are incorrectly applied!
  SFINAE: SFINAE_Suppress
  Text: '%0; allow reordering by specifying ''#pragma clang loop vectorize(enable)'' before the loop. If the arrays will always be independent specify ''#pragma clang loop vectorize(assume_safety)'' before the loop or provide the ''__restrict__'' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!'
remark_fe_backend_optimization_remark_analysis_fpcommute:
  ArgsCount: 1
  CategoryName: Backend Issue
  Class: CLASS_REMARK
  Component: Frontend
  DefaultSeverity: SEV_Ignored
  Group: pass-analysis
  Regex: (.*); allow reordering by specifying '#pragma clang loop vectorize\(enable\)' before the loop or by providing the compiler option '-ffast-math'\.
  SFINAE: SFINAE_Suppress
  Text: '%0; allow reordering by specifying ''#pragma clang loop vectorize(enable)'' before the loop or by providing the compiler option ''-ffast-math''.'
remark_module_build:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_REMARK
  Component: Frontend
  DefaultSeverity: SEV_Ignored
  Group: module-build
  Regex: building module '(.*)' as '(.*)'
  SFINAE: SFINAE_Suppress
  Text: building module '%0' as '%1'
remark_module_build_done:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_REMARK
  Component: Frontend
  DefaultSeverity: SEV_Ignored
  Group: module-build
  Regex: finished building module '(.*)'
  SFINAE: SFINAE_Suppress
  Text: finished building module '%0'
remark_module_import:
  ArgsCount: 3
  CategoryName: AST Deserialization Issue
  Class: CLASS_REMARK
  Component: Serialization
  DefaultSeverity: SEV_Ignored
  Group: module-import
  Regex: importing module '(.*)'(?:| into '(.*)') from '(.*)'
  SFINAE: SFINAE_Suppress
  Text: importing module '%0'%select{| into '%3'}2 from '%1'
remark_module_lock:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_REMARK
  Component: Frontend
  DefaultSeverity: SEV_Ignored
  Group: module-lock
  Regex: locking '(.*)' to build module '(.*)'
  SFINAE: SFINAE_Suppress
  Text: locking '%0' to build module '%1'
remark_module_lock_failure:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_REMARK
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: module-build
  Regex: 'could not acquire lock file for module ''(.*)'': (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'could not acquire lock file for module ''%0'': %1'
remark_module_lock_timeout:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_REMARK
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: module-build
  Regex: timed out waiting to acquire lock file for module '(.*)'
  SFINAE: SFINAE_Suppress
  Text: timed out waiting to acquire lock file for module '%0'
remark_pp_search_path_usage:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_REMARK
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: search-path-usage
  Regex: 'search path used: ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'search path used: ''%0'''
remark_sanitize_address_insert_extra_padding_accepted:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_REMARK
  Component: AST
  DefaultSeverity: SEV_Ignored
  Group: sanitize-address
  Regex: -fsanitize-address-field-padding applied to (.*)
  SFINAE: SFINAE_Suppress
  Text: -fsanitize-address-field-padding applied to %0
remark_sanitize_address_insert_extra_padding_rejected:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_REMARK
  Component: AST
  DefaultSeverity: SEV_Ignored
  Group: sanitize-address
  Regex: -fsanitize-address-field-padding ignored for (.*) because it (?:is not C\+\+|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a ignorelisted file|is ignorelisted)
  SFINAE: SFINAE_Suppress
  Text: -fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a ignorelisted file|is ignorelisted}1
trigraph_converted:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: trigraphs
  Regex: trigraph converted to '(.*)' character
  SFINAE: SFINAE_Suppress
  Text: trigraph converted to '%0' character
trigraph_ends_block_comment:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: trigraphs
  Regex: trigraph ends block comment
  SFINAE: SFINAE_Suppress
  Text: trigraph ends block comment
trigraph_ignored:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: trigraphs
  Regex: trigraph ignored
  SFINAE: SFINAE_Suppress
  Text: trigraph ignored
trigraph_ignored_block_comment:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: trigraphs
  Regex: ignored trigraph would end block comment
  SFINAE: SFINAE_Suppress
  Text: ignored trigraph would end block comment
warn_O4_is_O3:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: deprecated
  Regex: -O4 is equivalent to -O3
  SFINAE: SFINAE_Suppress
  Text: -O4 is equivalent to -O3
warn_abs_too_small:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: absolute-value
  Regex: absolute value function (.*) given an argument of type (.*) but has parameter of type (.*) which may cause truncation of value
  SFINAE: SFINAE_Suppress
  Text: absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
warn_abstract_final_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: abstract-final-class
  Regex: abstract class is marked '(?:final|sealed)'
  SFINAE: SFINAE_Suppress
  Text: abstract class is marked '%select{final|sealed}0'
warn_abstract_vbase_init_ignored:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: abstract-vbase-init
  Regex: initializer for virtual base class (.*) of abstract class (.*) will never be used
  SFINAE: SFINAE_Suppress
  Text: initializer for virtual base class %0 of abstract class %1 will never be used
warn_access_decl_deprecated:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated
  Regex: access declarations are deprecated; use using declarations instead
  SFINAE: SFINAE_Suppress
  Text: access declarations are deprecated; use using declarations instead
warn_accessor_property_type_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: type of property (.*) does not match type of accessor (.*)
  SFINAE: SFINAE_Suppress
  Text: type of property %0 does not match type of accessor %1
warn_acquire_requires_negative_cap:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-negative
  Regex: acquiring (.*) '(.*)' requires negative capability '(.*)'
  SFINAE: SFINAE_Suppress
  Text: acquiring %0 '%1' requires negative capability '%2'
warn_acquired_before:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (.*) '(.*)' must be acquired before '(.*)'
  SFINAE: SFINAE_Suppress
  Text: '%0 ''%1'' must be acquired before ''%2'''
warn_acquired_before_after_cycle:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: Cycle in acquired_before/after dependencies, starting with '(.*)'
  SFINAE: SFINAE_Suppress
  Text: Cycle in acquired_before/after dependencies, starting with '%0'
warn_addition_in_bitshift:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: shift-op-parentheses
  Regex: operator '(.*)' has lower precedence than '(.*)'; '(.*)' will be evaluated first
  SFINAE: SFINAE_Suppress
  Text: operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
warn_address_of_reference_bool_conversion:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: undefined-bool-conversion
  Regex: reference cannot be bound to dereferenced null pointer in well-defined C\+\+ code; pointer may be assumed to always convert to true
  SFINAE: SFINAE_Suppress
  Text: reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
warn_address_of_reference_null_compare:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-undefined-compare
  Regex: reference cannot be bound to dereferenced null pointer in well-defined C\+\+ code; comparison may be assumed to always evaluate to (?:true|false)
  SFINAE: SFINAE_Suppress
  Text: reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
warn_alias_to_weak_alias:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (?:alias|ifunc) will always resolve to (.*) even if weak definition of (.*) is overridden
  SFINAE: SFINAE_Suppress
  Text: '%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden'
warn_alias_with_section:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (?:alias|ifunc) will not be in section '(.*)' but in the same section as the (?:aliasee|resolver)
  SFINAE: SFINAE_Suppress
  Text: '%select{alias|ifunc}1 will not be in section ''%0'' but in the same section as the %select{aliasee|resolver}2'
warn_aligned_attr_underaligned:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: requested alignment is less than minimum alignment of (.*) for type (.*)
  SFINAE: SFINAE_Suppress
  Text: requested alignment is less than minimum alignment of %1 for type %0
warn_alignment_builtin_useless:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-compare
  Regex: (?:aligning a value|the result of checking whether a value is aligned) to 1 byte is (?:a no-op|always true)
  SFINAE: SFINAE_Suppress
  Text: '%select{aligning a value|the result of checking whether a value is aligned}0 to 1 byte is %select{a no-op|always true}0'
warn_alignment_not_power_of_two:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: non-power-of-two-alignment
  Regex: requested alignment is not a power of 2
  SFINAE: SFINAE_Suppress
  Text: requested alignment is not a power of 2
warn_alloca:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: alloca
  Regex: use of function (.*) is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability
  SFINAE: SFINAE_Suppress
  Text: use of function %0 is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability
warn_alloca_align_alignof:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: alloca-with-align-alignof
  Regex: second argument to __builtin_alloca_with_align is supposed to be in bits
  SFINAE: SFINAE_Suppress
  Text: second argument to __builtin_alloca_with_align is supposed to be in bits
warn_always_inline_coroutine:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: always-inline-coroutine
  Regex: this coroutine may be split into pieces; not every piece is guaranteed to be inlined
  SFINAE: SFINAE_Suppress
  Text: this coroutine may be split into pieces; not every piece is guaranteed to be inlined
warn_ambiguous_suitable_delete_function_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ambiguous-delete
  Regex: multiple suitable (.*) functions for (.*); no 'operator delete' function will be invoked if initialization throws an exception
  SFINAE: SFINAE_Suppress
  Text: multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
warn_anyx86_interrupt_regsave:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: interrupt-service-routine
  Regex: interrupt service routine should only call a function with attribute 'no_caller_saved_registers'
  SFINAE: SFINAE_Suppress
  Text: interrupt service routine should only call a function with attribute 'no_caller_saved_registers'
warn_arc_bridge_cast_nonarc:
  ArgsCount: 1
  CategoryName: ARC Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: arc-bridge-casts-disallowed-in-nonarc
  Regex: '''(.*)'' casts have no effect when not using ARC'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' casts have no effect when not using ARC'
warn_arc_lifetime_result_type:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-qualifiers
  Regex: ARC (?:unused|__unsafe_unretained|__strong|__weak|__autoreleasing) lifetime qualifier on return type is ignored
  SFINAE: SFINAE_Suppress
  Text: ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
warn_arc_literal_assign:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: arc-unsafe-retained-assign
  Regex: assigning (?:array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal) to a weak (?:property|variable); object will be released after assignment
  SFINAE: SFINAE_Suppress
  Text: assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
warn_arc_object_memaccess:
  ArgsCount: 2
  CategoryName: ARC Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: arc-non-pod-memaccess
  Regex: (?:destination for|source of) this (.*) call is a pointer to ownership-qualified type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2'
warn_arc_perform_selector_leaks:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: arc-performSelector-leaks
  Regex: performSelector may cause a leak because its selector is unknown
  SFINAE: SFINAE_Suppress
  Text: performSelector may cause a leak because its selector is unknown
warn_arc_possible_repeated_use_of_weak:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: arc-maybe-repeated-use-of-weak
  Regex: weak (?:variable|property|implicit property|instance variable) (.*) may be accessed multiple times in this (?:function|method|block|lambda) and may be unpredictably set to nil; assign to a strong variable to keep the object alive
  SFINAE: SFINAE_Suppress
  Text: weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
warn_arc_repeated_use_of_weak:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: arc-repeated-use-of-weak
  Regex: weak (?:variable|property|implicit property|instance variable) (.*) is accessed multiple times in this (?:function|method|block|lambda) but may be unpredictably set to nil; assign to a strong variable to keep the object alive
  SFINAE: SFINAE_Suppress
  Text: weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
warn_arc_retain_cycle:
  ArgsCount: 1
  CategoryName: ARC Retain Cycle
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: arc-retain-cycles
  Regex: capturing (.*) strongly in this block is likely to lead to a retain cycle
  SFINAE: SFINAE_Suppress
  Text: capturing %0 strongly in this block is likely to lead to a retain cycle
warn_arc_retained_assign:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: arc-unsafe-retained-assign
  Regex: assigning retained object to (?:weak|unsafe_unretained) (?:property|variable); object will be released after assignment
  SFINAE: SFINAE_Suppress
  Text: assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
warn_arc_retained_property_assign:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: arc-unsafe-retained-assign
  Regex: assigning retained object to unsafe property; object will be released after assignment
  SFINAE: SFINAE_Suppress
  Text: assigning retained object to unsafe property; object will be released after assignment
warn_arc_strong_pointer_objc_pointer:
  ArgsCount: 1
  CategoryName: ARC Restrictions
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: explicit-ownership-type
  Regex: method parameter of type (.*) with no explicit ownership
  SFINAE: SFINAE_Suppress
  Text: method parameter of type %0 with no explicit ownership
warn_arcmt_nsalloc_realloc:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: \[rewriter\] call returns pointer to GC managed memory; it will become unmanaged in ARC
  SFINAE: SFINAE_Suppress
  Text: '[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC'
warn_argument_invalid_range:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: argument-outside-range
  Regex: argument value (.*) is outside the valid range \[(.*), (.*)\]
  SFINAE: SFINAE_Suppress
  Text: argument value %0 is outside the valid range [%1, %2]
warn_argument_undefined_behaviour:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: argument-undefined-behaviour
  Regex: argument value (.*) will result in undefined behaviour
  SFINAE: SFINAE_Suppress
  Text: argument value %0 will result in undefined behaviour
warn_arith_conv_enum_float:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: enum-float-conversion
  Regex: (?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) (?:floating-point|enumeration) type (.*) (?:with|from|and) (?:enumeration|floating-point) type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3'
warn_arith_conv_enum_float_cxx20:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-enum-float-conversion
  Regex: (?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) (?:floating-point|enumeration) type (.*) (?:with|from|and) (?:enumeration|floating-point) type (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3 is deprecated'
warn_arith_conv_mixed_anon_enum_types:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: anon-enum-enum-conversion
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2'
warn_arith_conv_mixed_anon_enum_types_cxx20:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-anon-enum-enum-conversion
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|) is deprecated'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated'
warn_arith_conv_mixed_enum_types:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: enum-enum-conversion
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2'
warn_arith_conv_mixed_enum_types_cxx20:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-enum-enum-conversion
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|) is deprecated'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated'
warn_arm_interrupt_calling_convention:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: extra
  Regex: call to function without interrupt attribute could clobber interruptee's VFP registers
  SFINAE: SFINAE_Suppress
  Text: call to function without interrupt attribute could clobber interruptee's VFP registers
warn_array_index_exceeds_bounds:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: array-bounds
  Regex: array index (.*) is past the end of the array \(which contains (.*) elements?\)
  SFINAE: SFINAE_Suppress
  Text: array index %0 is past the end of the array (which contains %1 element%s2)
warn_array_index_exceeds_max_addressable_bounds:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: array-bounds
  Regex: array index (.*) refers past the last possible element for an array in (.*)-bit address space containing (.*)-bit \((.*)-byte\) elements \(max possible (.*) elements?\)
  SFINAE: SFINAE_Suppress
  Text: array index %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
warn_array_index_precedes_bounds:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: array-bounds
  Regex: array index (.*) is before the beginning of the array
  SFINAE: SFINAE_Suppress
  Text: array index %0 is before the beginning of the array
warn_asm_label_on_auto_decl:
  ArgsCount: 1
  CategoryName: Inline Assembly Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: ignored asm label '(.*)' on automatic variable
  SFINAE: SFINAE_Suppress
  Text: ignored asm label '%0' on automatic variable
warn_asm_mismatched_size_modifier:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: asm-operand-widths
  Regex: value size does not match register size specified by the constraint and modifier
  SFINAE: SFINAE_Suppress
  Text: value size does not match register size specified by the constraint and modifier
warn_assume_aligned_too_great:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: builtin-assume-aligned-alignment
  Regex: requested alignment must be (.*) bytes or smaller; maximum alignment assumed
  SFINAE: SFINAE_Suppress
  Text: requested alignment must be %0 bytes or smaller; maximum alignment assumed
warn_assume_attribute_string_unknown:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unknown-assumption
  Regex: unknown assumption string '(.*)'; attribute is potentially ignored
  SFINAE: SFINAE_Suppress
  Text: unknown assumption string '%0'; attribute is potentially ignored
warn_assume_attribute_string_unknown_suggested:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: misspelled-assumption
  Regex: unknown assumption string '(.*)' may be misspelled; attribute is potentially ignored, did you mean '(.*)'\?
  SFINAE: SFINAE_Suppress
  Text: unknown assumption string '%0' may be misspelled; attribute is potentially ignored, did you mean '%1'?
warn_assume_side_effects:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: assume
  Regex: the argument to (.*) has side effects that will be discarded
  SFINAE: SFINAE_Suppress
  Text: the argument to %0 has side effects that will be discarded
warn_at_available_unchecked_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unsupported-availability-guard
  Regex: (?:@available|__builtin_available) does not guard availability here; use if \((?:@available|__builtin_available)\) instead
  SFINAE: SFINAE_Suppress
  Text: '%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead'
warn_atimport_in_framework_header:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: atimport-in-framework-header
  Regex: use of '@import' in framework header is discouraged, including this header requires -fmodules
  SFINAE: SFINAE_Suppress
  Text: use of '@import' in framework header is discouraged, including this header requires -fmodules
warn_atl_uuid_deprecated:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-declarations
  Regex: specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
  SFINAE: SFINAE_Suppress
  Text: specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
warn_atomic_implicit_seq_cst:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: atomic-implicit-seq-cst
  Regex: implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
  SFINAE: SFINAE_Suppress
  Text: implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
warn_atomic_op_has_invalid_memory_order:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: atomic-memory-ordering
  Regex: memory order argument to atomic operation is invalid
  SFINAE: SFINAE_Suppress
  Text: memory order argument to atomic operation is invalid
warn_atomic_op_misaligned:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: atomic-alignment
  Regex: misaligned atomic operation may incur significant performance penalty; the expected alignment \((.*) bytes\) exceeds the actual alignment \((.*) bytes\)
  SFINAE: SFINAE_Suppress
  Text: misaligned atomic operation may incur significant performance penalty; the expected alignment (%0 bytes) exceeds the actual alignment (%1 bytes)
warn_atomic_op_oversized:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: atomic-alignment
  Regex: large atomic operation may incur significant performance penalty; the access size \((.*) bytes\) exceeds the max lock-free size \((.*)  bytes\)
  SFINAE: SFINAE_Suppress
  Text: large atomic operation may incur significant performance penalty; the access size (%0 bytes) exceeds the max lock-free size (%1  bytes)
warn_atomic_property_rule:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: atomic-property-with-user-defined-accessor
  Regex: writable atomic property (.*) cannot pair a synthesized (?:getter|setter) with a user defined (?:getter|setter)
  SFINAE: SFINAE_Suppress
  Text: writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
warn_attr_abi_tag_namespace:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''abi_tag'' attribute on (?:non-inline|anonymous) namespace ignored'
  SFINAE: SFINAE_Suppress
  Text: '''abi_tag'' attribute on %select{non-inline|anonymous}0 namespace ignored'
warn_attr_on_unconsumable_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: consumed analysis attribute is attached to member of class (.*) which isn't marked as consumable
  SFINAE: SFINAE_Suppress
  Text: consumed analysis attribute is attached to member of class %0 which isn't marked as consumable
warn_attr_swift_name_decl_kind:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute cannot be applied to this declaration
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute cannot be applied to this declaration'
warn_attr_swift_name_decl_missing_params:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute cannot be applied to a (?:function|method) with no parameters
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute cannot be applied to a %select{function|method}1 with no parameters'
warn_attr_swift_name_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute argument must be a string literal specifying a Swift function name
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute argument must be a string literal specifying a Swift function name'
warn_attr_swift_name_getter_parameters:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute for getter must not have any parameters besides 'self:'
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute for getter must not have any parameters besides ''self:'''
warn_attr_swift_name_invalid_identifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute has invalid identifier for the (?:base|context|parameter) name
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute has invalid identifier for the %select{base|context|parameter}1 name'
warn_attr_swift_name_missing_parameters:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute is missing parameter label clause
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute is missing parameter label clause'
warn_attr_swift_name_multiple_selfs:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute cannot specify more than one 'self:' parameter
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute cannot specify more than one ''self:'' parameter'
warn_attr_swift_name_num_params:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: too (?:few|many) parameters in the signature specified by the (.*) attribute \(expected (.*); got (.*)\)
  SFINAE: SFINAE_Suppress
  Text: too %select{few|many}0 parameters in the signature specified by the %1 attribute (expected %2; got %3)
warn_attr_swift_name_setter_parameters:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute for setter must have one parameter for new value
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute for setter must have one parameter for new value'
warn_attr_swift_name_subscript_getter_newValue:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute for 'subscript' getter cannot have a 'newValue:' parameter
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute for ''subscript'' getter cannot have a ''newValue:'' parameter'
warn_attr_swift_name_subscript_invalid_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute for 'subscript' must (?:be a getter or setter|have at least one parameter|have a 'self:' parameter)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute for ''subscript'' must %select{be a getter or setter|have at least one parameter|have a ''self:'' parameter}1'
warn_attr_swift_name_subscript_setter_multiple_newValues:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute for 'subscript' setter cannot have multiple 'newValue:' parameters
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute for ''subscript'' setter cannot have multiple ''newValue:'' parameters'
warn_attr_swift_name_subscript_setter_no_newValue:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: swift-name-attribute
  Regex: (.*) attribute for 'subscript' setter must have a 'newValue:' parameter
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute for ''subscript'' setter must have a ''newValue:'' parameter'
warn_attribute_address_multiple_identical_qualifiers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: duplicate-decl-specifier
  Regex: multiple identical address spaces specified for type
  SFINAE: SFINAE_Suppress
  Text: multiple identical address spaces specified for type
warn_attribute_after_definition_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) after definition is ignored
  SFINAE: SFINAE_Suppress
  Text: attribute %0 after definition is ignored
warn_attribute_argument_n_negative:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: cuda-compat
  Regex: (.*) attribute parameter (.*) is negative and will be ignored
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute parameter %1 is negative and will be ignored'
warn_attribute_cmse_entry_static:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''cmse_nonsecure_entry'' cannot be applied to functions with internal linkage'
  SFINAE: SFINAE_Suppress
  Text: '''cmse_nonsecure_entry'' cannot be applied to functions with internal linkage'
warn_attribute_dll_instantiated_base_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unsupported-dll-base-class-template
  Regex: propagating dll attribute to (?:already instantiated|explicitly specialized) base class template without dll attribute is not supported
  SFINAE: SFINAE_Suppress
  Text: propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
warn_attribute_dll_redeclaration:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dll-attribute-on-redeclaration
  Regex: redeclaration of (.*) should not add (.*) attribute
  SFINAE: SFINAE_Suppress
  Text: redeclaration of %q0 should not add %q1 attribute
warn_attribute_dllexport_explicit_instantiation_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dllexport-explicit-instantiation-decl
  Regex: explicit instantiation declaration should not be 'dllexport'
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation declaration should not be 'dllexport'
warn_attribute_dllexport_explicit_instantiation_def:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''dllexport'' attribute ignored on explicit instantiation definition'
  SFINAE: SFINAE_Suppress
  Text: '''dllexport'' attribute ignored on explicit instantiation definition'
warn_attribute_dllimport_static_field_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dllimport-static-field-def
  Regex: definition of dllimport static field
  SFINAE: SFINAE_Suppress
  Text: definition of dllimport static field
warn_attribute_has_no_effect_on_compile_time_if:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) has no effect when annotating an 'if (?:constexpr|consteval)' statement
  SFINAE: SFINAE_Suppress
  Text: attribute %0 has no effect when annotating an 'if %select{constexpr|consteval}1' statement
warn_attribute_has_no_effect_on_infinite_loop:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) has no effect when annotating an infinite loop
  SFINAE: SFINAE_Suppress
  Text: attribute %0 has no effect when annotating an infinite loop
warn_attribute_iboutlet:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute can only be applied to instance variables or properties
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute can only be applied to instance variables or properties'
warn_attribute_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute ignored
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute ignored'
warn_attribute_ignored_for_field_of_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute ignored for field of type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute ignored for field of type %1'
warn_attribute_ignored_on_inline:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute ignored on inline function
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute ignored on inline function'
warn_attribute_ignored_on_non_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute ignored on a non-definition declaration
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute ignored on a non-definition declaration'
warn_attribute_invalid_on_definition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''(.*)'' attribute cannot be specified on a definition'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' attribute cannot be specified on a definition'
warn_attribute_no_builtin_invalid_builtin_name:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-no-builtin-names
  Regex: '''(.*)'' is not a valid builtin name for (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is not a valid builtin name for %1'
warn_attribute_no_decl:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) ignored, because it is not attached to a declaration
  SFINAE: SFINAE_Suppress
  Text: attribute %0 ignored, because it is not attached to a declaration
warn_attribute_nonnull_no_pointers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''nonnull'' attribute applied to function with no pointer arguments'
  SFINAE: SFINAE_Suppress
  Text: '''nonnull'' attribute applied to function with no pointer arguments'
warn_attribute_nonnull_parm_no_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''nonnull'' attribute when used on parameters takes no arguments'
  SFINAE: SFINAE_Suppress
  Text: '''nonnull'' attribute when used on parameters takes no arguments'
warn_attribute_not_on_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute ignored when parsing type
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute ignored when parsing type'
warn_attribute_on_function_definition:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: GCC does not allow (.*) attribute in this position on a function definition
  SFINAE: SFINAE_Suppress
  Text: GCC does not allow %0 attribute in this position on a function definition
warn_attribute_packed_for_bitfield:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: attribute-packed-for-bitfield
  Regex: '''packed'' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang'
  SFINAE: SFINAE_Suppress
  Text: '''packed'' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang'
warn_attribute_pointer_or_reference_only:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to a pointer or reference \((.*) is invalid\)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to a pointer or reference (%1 is invalid)'
warn_attribute_pointers_only:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to(?:| constant) pointer arguments
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to%select{| constant}1 pointer arguments'
warn_attribute_precede_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute declaration must precede definition
  SFINAE: SFINAE_Suppress
  Text: attribute declaration must precede definition
warn_attribute_protected_visibility:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unsupported-visibility
  Regex: target does not support 'protected' visibility; using 'default'
  SFINAE: SFINAE_Suppress
  Text: target does not support 'protected' visibility; using 'default'
warn_attribute_return_pointers_only:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to return values that are pointers
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to return values that are pointers'
warn_attribute_return_pointers_refs_only:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to return values that are pointers or references
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to return values that are pointers or references'
warn_attribute_section_drectve:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-drectve-section
  Regex: '#pragma (.*)\("\.drectve"\) has undefined behavior, use #pragma comment\(linker, \.\.\.\) instead'
  SFINAE: SFINAE_Suppress
  Text: '#pragma %0(".drectve") has undefined behavior, use #pragma comment(linker, ...) instead'
warn_attribute_section_on_redeclaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: section
  Regex: section attribute is specified on redeclared variable
  SFINAE: SFINAE_Suppress
  Text: section attribute is specified on redeclared variable
warn_attribute_sentinel_named_arguments:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''sentinel'' attribute requires named arguments'
  SFINAE: SFINAE_Suppress
  Text: '''sentinel'' attribute requires named arguments'
warn_attribute_sentinel_not_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''sentinel'' attribute only supported for variadic (?:functions|blocks)'
  SFINAE: SFINAE_Suppress
  Text: '''sentinel'' attribute only supported for variadic %select{functions|blocks}0'
warn_attribute_type_not_supported:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '(.*) attribute argument not supported: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute argument not supported: %1'
warn_attribute_unknown_visibility:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: unknown visibility (.*)
  SFINAE: SFINAE_Suppress
  Text: unknown visibility %0
warn_attribute_void_function_method:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) cannot be applied to (?:functions|Objective-C method) without return value
  SFINAE: SFINAE_Suppress
  Text: attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
warn_attribute_weak_on_field:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: __weak attribute cannot be specified on a field declaration
  SFINAE: SFINAE_Suppress
  Text: __weak attribute cannot be specified on a field declaration
warn_attribute_weak_on_local:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: __weak attribute cannot be specified on an automatic variable when ARC is not enabled
  SFINAE: SFINAE_Suppress
  Text: __weak attribute cannot be specified on an automatic variable when ARC is not enabled
warn_attribute_wrong_decl_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to (?:functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1'
warn_attribute_wrong_decl_type_str:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to %1'
warn_attributes_likelihood_ifstmt_conflict:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: conflicting attributes (.*) are ignored
  SFINAE: SFINAE_Suppress
  Text: conflicting attributes %0 are ignored
warn_auto_implicit_atomic_property:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-atomic-properties
  Regex: property is assumed atomic when auto-synthesizing the property
  SFINAE: SFINAE_Suppress
  Text: property is assumed atomic when auto-synthesizing the property
warn_auto_module_import:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: auto-import
  Regex: 'treating #(?:include|import|include_next|__include_macros) as an import of module ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'treating #%select{include|import|include_next|__include_macros}0 as an import of module ''%1'''
warn_auto_readonly_iboutlet_property:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: readonly-iboutlet-property
  Regex: readonly IBOutlet property (.*) when auto-synthesized may not work correctly with 'nib' loader
  SFINAE: SFINAE_Suppress
  Text: readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
warn_auto_storage_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat
  Regex: '''auto'' storage class specifier is redundant and incompatible with C\+\+11'
  SFINAE: SFINAE_Suppress
  Text: '''auto'' storage class specifier is redundant and incompatible with C++11'
warn_auto_synthesizing_protocol_property:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-protocol-property-synthesis
  Regex: auto property synthesis will not synthesize property (.*) declared in protocol (.*)
  SFINAE: SFINAE_Suppress
  Text: auto property synthesis will not synthesize property %0 declared in protocol %1
warn_auto_var_is_id:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: auto-var-id
  Regex: '''auto'' deduced as ''id'' in declaration of (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''auto'' deduced as ''id'' in declaration of %0'
warn_autosynthesis_property_in_superclass:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-synthesis
  Regex: auto property synthesis will not synthesize property (.*); it will be implemented by its superclass, use @dynamic to acknowledge intention
  SFINAE: SFINAE_Suppress
  Text: auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
warn_autosynthesis_property_ivar_match:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-autosynthesis-property-ivar-name-match
  Regex: autosynthesized property (.*) will use (?:|synthesized) instance variable (.*), not existing instance variable (.*)
  SFINAE: SFINAE_Suppress
  Text: autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
warn_availability_and_unavailable:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: '''unavailable'' availability overrides all other availability information'
  SFINAE: SFINAE_Suppress
  Text: '''unavailable'' availability overrides all other availability information'
warn_availability_fuchsia_unavailable_minor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: Fuchsia API Level prohibits specifying a minor or sub-minor version
  SFINAE: SFINAE_Suppress
  Text: Fuchsia API Level prohibits specifying a minor or sub-minor version
warn_availability_on_static_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: ignoring availability attribute (?:on '\+load' method|with constructor attribute|with destructor attribute)
  SFINAE: SFINAE_Suppress
  Text: ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
warn_availability_swift_unavailable_deprecated_only:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: only 'unavailable' and 'deprecated' are supported for Swift availability
  SFINAE: SFINAE_Suppress
  Text: only 'unavailable' and 'deprecated' are supported for Swift availability
warn_availability_unknown_platform:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: unknown platform (.*) in availability macro
  SFINAE: SFINAE_Suppress
  Text: unknown platform %0 in availability macro
warn_availability_version_ordering:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: feature cannot be (?:introduced|deprecated|obsoleted) in (.*) version (.*) before it was (?:introduced|deprecated|obsoleted) in version (.*); attribute ignored
  SFINAE: SFINAE_Suppress
  Text: feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
warn_avx_calling_convention:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: psabi
  Regex: AVX vector (?:return|argument) of type (.*) without '(.*)' enabled changes the ABI
  SFINAE: SFINAE_Suppress
  Text: AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
warn_bad_character_encoding:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: invalid-source-encoding
  Regex: illegal character encoding in character literal
  SFINAE: SFINAE_Suppress
  Text: illegal character encoding in character literal
warn_bad_cxx_cast_nested_pointer_addr_space:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-pointer-types-discards-qualifiers
  Regex: (?:reinterpret_cast|C-style cast) from (.*) to (.*) changes address space of nested pointers
  SFINAE: SFINAE_Suppress
  Text: '%select{reinterpret_cast|C-style cast}0 from %1 to %2 changes address space of nested pointers'
warn_bad_function_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bad-function-cast
  Regex: cast from function call of type (.*) to non-matching type (.*)
  SFINAE: SFINAE_Suppress
  Text: cast from function call of type %0 to non-matching type %1
warn_bad_receiver_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: receiver-expr
  Regex: receiver type (.*) is not 'id' or interface pointer, consider casting it to 'id'
  SFINAE: SFINAE_Suppress
  Text: receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
warn_bad_string_encoding:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: invalid-source-encoding
  Regex: illegal character encoding in string literal
  SFINAE: SFINAE_Suppress
  Text: illegal character encoding in string literal
warn_base_class_is_uninit:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: uninitialized
  Regex: base class (.*) is uninitialized when used here to access (.*)
  SFINAE: SFINAE_Suppress
  Text: base class %0 is uninitialized when used here to access %q1
warn_bind_ref_member_to_parameter:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling-field
  Regex: binding reference member (.*) to stack allocated (?:variable|parameter) (.*)
  SFINAE: SFINAE_Suppress
  Text: binding reference member %0 to stack allocated %select{variable|parameter}2 %1
warn_binding_null_to_reference:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: null-dereference
  Regex: binding dereferenced null pointer to reference has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: binding dereferenced null pointer to reference has undefined behavior
warn_bitfield_too_small_for_enum:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bitfield-enum-conversion
  Regex: bit-field (.*) is not wide enough to store all enumerators of (.*)
  SFINAE: SFINAE_Suppress
  Text: bit-field %0 is not wide enough to store all enumerators of %1
warn_bitfield_width_exceeds_type_width:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: bitfield-width
  Regex: width of bit-field (.*) \((.*) bits\) exceeds the width of its type; value will be truncated to (.*) bits?
  SFINAE: SFINAE_Suppress
  Text: width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
warn_bitwise_instead_of_logical:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bitwise-instead-of-logical
  Regex: use of bitwise '(.*)' with boolean operands
  SFINAE: SFINAE_Suppress
  Text: use of bitwise '%0' with boolean operands
warn_bitwise_negation_bool:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bool-operation
  Regex: bitwise negation of a boolean expression(?:;| always evaluates to 'true';) did you mean logical negation\?
  SFINAE: SFINAE_Suppress
  Text: bitwise negation of a boolean expression%select{;| always evaluates to 'true';}0 did you mean logical negation?
warn_bitwise_op_in_bitwise_op:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bitwise-op-parentheses
  Regex: '''(.*)'' within ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: '''%0'' within ''%1'''
warn_block_capture_autoreleasing:
  ArgsCount: 0
  CategoryName: ARC Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: block-capture-autoreleasing
  Regex: block captures an autoreleasing out-parameter, which may result in use-after-free bugs
  SFINAE: SFINAE_Suppress
  Text: block captures an autoreleasing out-parameter, which may result in use-after-free bugs
warn_block_literal_attributes_on_omitted_return_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) ignored, because it cannot be applied to omitted return type
  SFINAE: SFINAE_Suppress
  Text: attribute %0 ignored, because it cannot be applied to omitted return type
warn_block_literal_qualifiers_on_omitted_return_type:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-qualifiers
  Regex: '''(.*)'' qualifier on omitted return type (.*) has no effect'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' qualifier on omitted return type %1 has no effect'
warn_bool_switch_condition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: switch-bool
  Regex: switch condition has boolean value
  SFINAE: SFINAE_Suppress
  Text: switch condition has boolean value
warn_braces_around_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: braced-scalar-init
  Regex: braces around (?:scalar |)initializer
  SFINAE: SFINAE_Suppress
  Text: braces around %select{scalar |}0initializer
warn_break_binds_to_switch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: '''break'' is bound to loop, GCC binds it to switch'
  SFINAE: SFINAE_Suppress
  Text: '''break'' is bound to loop, GCC binds it to switch'
warn_builtin_chk_overflow:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: builtin-memcpy-chk-size
  Regex: '''(.*)'' will always overflow; destination buffer has size (.*), but size argument is (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' will always overflow; destination buffer has size %1, but size argument is %2'
warn_builtin_unknown:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: implicit-function-declaration
  Regex: use of unknown builtin (.*)
  SFINAE: SFINAE_Suppress
  Text: use of unknown builtin %0
warn_c17_compat_bit_int:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c2x-compat
  Regex: '''_BitInt'' is incompatible with C standards before C2x'
  SFINAE: SFINAE_Suppress
  Text: '''_BitInt'' is incompatible with C standards before C2x'
warn_c17_compat_static_assert_no_message:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c2x-compat
  Regex: '''_Static_assert'' with no message is incompatible with C standards before C2x'
  SFINAE: SFINAE_Suppress
  Text: '''_Static_assert'' with no message is incompatible with C standards before C2x'
warn_c2x_compat_digit_separator:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: pre-c2x-compat
  Regex: digit separators are incompatible with C standards before C2x
  SFINAE: SFINAE_Suppress
  Text: digit separators are incompatible with C standards before C2x
warn_c99_compat_unicode_id:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c99-compat
  Regex: (?:using this character in an identifier|starting an identifier with this character) is incompatible with C99
  SFINAE: SFINAE_Suppress
  Text: '%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99'
warn_c99_compat_unicode_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c99-compat
  Regex: unicode literals are incompatible with C99
  SFINAE: SFINAE_Suppress
  Text: unicode literals are incompatible with C99
warn_c_kext:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: ignoring -fapple-kext which is valid for C\+\+ and Objective-C\+\+ only
  SFINAE: SFINAE_Suppress
  Text: ignoring -fapple-kext which is valid for C++ and Objective-C++ only
warn_call_to_pure_virtual_member_function_from_ctor_dtor:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: call-to-pure-virtual-from-ctor-dtor
  Regex: call to pure virtual member function (.*) has undefined behavior; overrides of (.*) in subclasses are not available in the (?:constructor|destructor) of (.*)
  SFINAE: SFINAE_Suppress
  Text: call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
warn_call_wrong_number_of_arguments:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: too (?:few|many) arguments in call to (.*)
  SFINAE: SFINAE_Suppress
  Text: too %select{few|many}0 arguments in call to %1
warn_called_once_gets_called_twice:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: called-once-parameter
  Regex: (.*) parameter marked 'called_once' is called twice
  SFINAE: SFINAE_Suppress
  Text: '%0 parameter marked ''called_once'' is called twice'
warn_called_once_never_called:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: called-once-parameter
  Regex: (?:|captured )(.*) parameter marked 'called_once' is never called
  SFINAE: SFINAE_Suppress
  Text: '%select{|captured }1%0 parameter marked ''called_once'' is never called'
warn_called_once_never_called_when:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: called-once-parameter
  Regex: (.*) parameter marked 'called_once' is never (?:used|called) when (?:taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches)
  SFINAE: SFINAE_Suppress
  Text: '%0 parameter marked ''called_once'' is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2'
warn_cannot_pass_non_pod_arg_to_vararg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: non-pod-varargs
  Regex: cannot pass object of (?:non-POD|non-trivial) type (.*) through variadic (?:function|block|method|constructor); call will abort at runtime
  SFINAE: SFINAE_Suppress
  Text: cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
warn_cannot_resolve_lock:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: cannot resolve lock expression
  SFINAE: SFINAE_Suppress
  Text: cannot resolve lock expression
warn_case_empty_range:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: empty case range specified
  SFINAE: SFINAE_Suppress
  Text: empty case range specified
warn_case_value_overflow:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: switch
  Regex: overflow converting case value to switch condition type \((.*) to (.*)\)
  SFINAE: SFINAE_Suppress
  Text: overflow converting case value to switch condition type (%0 to %1)
warn_cast_align:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: cast-align
  Regex: cast from (.*) to (.*) increases required alignment from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: cast from %0 to %1 increases required alignment from %2 to %3
warn_cast_calling_conv:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: cast-calling-convention
  Regex: cast between incompatible calling conventions '(.*)' and '(.*)'; calls through this pointer may abort at runtime
  SFINAE: SFINAE_Suppress
  Text: cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
warn_cast_function_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: cast-function-type
  Regex: cast (?:from \$ to \$ |)converts to incompatible function type
  SFINAE: SFINAE_Suppress
  Text: cast %diff{from $ to $ |}0,1converts to incompatible function type
warn_cast_nonnull_to_bool:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-bool-conversion
  Regex: nonnull (?:function call|parameter) '(.*)' will evaluate to 'true' on first encounter
  SFINAE: SFINAE_Suppress
  Text: nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
warn_cast_pointer_from_sel:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: cast-of-sel-type
  Regex: cast of type (.*) to (.*) is deprecated; use sel_getName instead
  SFINAE: SFINAE_Suppress
  Text: cast of type %0 to %1 is deprecated; use sel_getName instead
warn_cast_qual:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: cast-qual
  Regex: cast from (.*) to (.*) drops (?:const and volatile qualifiers|const qualifier|volatile qualifier)
  SFINAE: SFINAE_Suppress
  Text: cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
warn_cast_qual2:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: cast-qual
  Regex: cast from (.*) to (.*) must have all intermediate pointers const qualified to be safe
  SFINAE: SFINAE_Suppress
  Text: cast from %0 to %1 must have all intermediate pointers const qualified to be safe
warn_category_method_impl_match:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-protocol-method-implementation
  Regex: category is implementing a method which will also be implemented by its primary class
  SFINAE: SFINAE_Suppress
  Text: category is implementing a method which will also be implemented by its primary class
warn_cconv_knr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-prototype-for-cc
  Regex: function with no prototype cannot use the (.*) calling convention
  SFINAE: SFINAE_Suppress
  Text: function with no prototype cannot use the %0 calling convention
warn_cconv_unsupported:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) calling convention is not supported (?:for this target|on variadic function|on constructor/destructor|on builtin function)
  SFINAE: SFINAE_Suppress
  Text: '%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1'
warn_cdtor_function_try_handler_mem_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: exceptions
  Regex: cannot refer to a non-static member from the handler of a (?:constructor|destructor) function try block
  SFINAE: SFINAE_Suppress
  Text: cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
warn_cfstring_truncated:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: CFString-literal
  Regex: input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
  SFINAE: SFINAE_Suppress
  Text: input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
warn_char_constant_too_large:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: character constant too long for its type
  SFINAE: SFINAE_Suppress
  Text: character constant too long for its type
warn_class_method_not_found:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-method-access
  Regex: class method (.*) not found \(return type defaults to 'id'\)
  SFINAE: SFINAE_Suppress
  Text: class method %objcclass0 not found (return type defaults to 'id')
warn_class_method_not_found_with_typo:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-method-access
  Regex: class method (.*) not found \(return type defaults to 'id'\); did you mean (.*)\?
  SFINAE: SFINAE_Suppress
  Text: class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
warn_cleanup_ext:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
  SFINAE: SFINAE_Suppress
  Text: GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
warn_cmse_nonsecure_union:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: cmse-union-leak
  Regex: passing union across security boundary via (?:parameter (.*)|return value) may leak information
  SFINAE: SFINAE_Suppress
  Text: passing union across security boundary via %select{parameter %1|return value}0 may leak information
warn_cocoa_naming_owned_rule:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-matches-cocoa-ownership-rule
  Regex: property follows Cocoa naming convention for returning 'owned' objects
  SFINAE: SFINAE_Suppress
  Text: property follows Cocoa naming convention for returning 'owned' objects
warn_collection_expr_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: collection expression type (.*) may not respond to (.*)
  SFINAE: SFINAE_Suppress
  Text: collection expression type %0 may not respond to %1
warn_comma_operator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: comma
  Regex: possible misuse of comma operator here
  SFINAE: SFINAE_Suppress
  Text: possible misuse of comma operator here
warn_comparison_always:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-compare
  Regex: (?:self-|array )comparison always evaluates to (?:a constant|true|false|'std::strong_ordering::equal')
  SFINAE: SFINAE_Suppress
  Text: '%select{self-|array }0comparison always evaluates to %select{a constant|true|false|''std::strong_ordering::equal''}1'
warn_comparison_bitwise_always:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-bitwise-compare
  Regex: bitwise comparison always evaluates to (?:false|true)
  SFINAE: SFINAE_Suppress
  Text: bitwise comparison always evaluates to %select{false|true}0
warn_comparison_bitwise_or:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-bitwise-compare
  Regex: bitwise or with non-zero value always evaluates to true
  SFINAE: SFINAE_Suppress
  Text: bitwise or with non-zero value always evaluates to true
warn_comparison_mixed_enum_types:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: enum-compare
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2'
warn_comparison_mixed_enum_types_cxx20:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-enum-compare
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|) is deprecated'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated'
warn_comparison_of_mixed_enum_types_switch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: enum-compare-switch
  Regex: 'comparison of different enumeration types in switch statement(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: comparison of different enumeration types in switch statement%diff{ ($ and $)|}0,1
warn_completion_handler_called_twice:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: completion-handler
  Regex: completion handler is called twice
  SFINAE: SFINAE_Suppress
  Text: completion handler is called twice
warn_completion_handler_never_called:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: completion-handler
  Regex: (?:|captured )completion handler is never called
  SFINAE: SFINAE_Suppress
  Text: '%select{|captured }1completion handler is never called'
warn_completion_handler_never_called_when:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: completion-handler
  Regex: completion handler is never (?:used|called) when (?:taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches)
  SFINAE: SFINAE_Suppress
  Text: completion handler is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
warn_compound_token_split_by_macro:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: compound-token-split-by-macro
  Regex: (?:(.*) and |)(.*) tokens (?:introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type) appear in different macro expansion contexts
  SFINAE: SFINAE_Suppress
  Text: '%sub{subst_compound_token_kind}0,1,2,3 appear in different macro expansion contexts'
warn_compound_token_split_by_whitespace:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: compound-token-split-by-space
  Regex: (?:(.*) and |)(.*) tokens (?:introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type) are separated by whitespace
  SFINAE: SFINAE_Suppress
  Text: '%sub{subst_compound_token_kind}0,1,2,3 are separated by whitespace'
warn_concatenated_literal_array_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: string-concatenation
  Regex: suspicious concatenation of string literals in an array initialization; did you mean to separate the elements with a comma\?
  SFINAE: SFINAE_Suppress
  Text: suspicious concatenation of string literals in an array initialization; did you mean to separate the elements with a comma?
warn_concatenated_nsarray_literal:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-string-concatenation
  Regex: concatenated NSString literal for an NSArray expression - possibly missing a comma
  SFINAE: SFINAE_Suppress
  Text: concatenated NSString literal for an NSArray expression - possibly missing a comma
warn_condition_is_assignment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: parentheses
  Regex: using the result of an assignment as a condition without parentheses
  SFINAE: SFINAE_Suppress
  Text: using the result of an assignment as a condition without parentheses
warn_condition_is_idiomatic_assignment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: idiomatic-parentheses
  Regex: using the result of an assignment as a condition without parentheses
  SFINAE: SFINAE_Suppress
  Text: using the result of an assignment as a condition without parentheses
warn_conditional_mixed_enum_types:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: enum-compare-conditional
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|)'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2'
warn_conditional_mixed_enum_types_cxx20:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-enum-compare-conditional
  Regex: '(?:arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of) different enumeration types(?: \(\$ and \$\)|) is deprecated'
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_arith_conv_kind}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated'
warn_conflicting_nullability_attr_overriding_param_types:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: nullability
  Regex: conflicting nullability specifier on parameter types, (.*) conflicts with existing specifier (.*)
  SFINAE: SFINAE_Suppress
  Text: conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
warn_conflicting_nullability_attr_overriding_ret_types:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: nullability
  Regex: conflicting nullability specifier on return types, (.*) conflicts with existing specifier (.*)
  SFINAE: SFINAE_Suppress
  Text: conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
warn_conflicting_overriding_param_modifiers:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overriding-method-mismatch
  Regex: conflicting distributed object modifiers on parameter type in declaration of (.*)
  SFINAE: SFINAE_Suppress
  Text: conflicting distributed object modifiers on parameter type in declaration of %0
warn_conflicting_overriding_param_types:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overriding-method-mismatch
  Regex: 'conflicting parameter types in declaration of (.*)(?:: \$ vs \$|)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2'
warn_conflicting_overriding_ret_type_modifiers:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overriding-method-mismatch
  Regex: conflicting distributed object modifiers on return type in declaration of (.*)
  SFINAE: SFINAE_Suppress
  Text: conflicting distributed object modifiers on return type in declaration of %0
warn_conflicting_overriding_ret_types:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overriding-method-mismatch
  Regex: 'conflicting return type in declaration of (.*)(?:: \$ vs \$|)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting return type in declaration of %0%diff{: $ vs $|}1,2'
warn_conflicting_overriding_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overriding-method-mismatch
  Regex: conflicting variadic declaration of method and its implementation
  SFINAE: SFINAE_Suppress
  Text: conflicting variadic declaration of method and its implementation
warn_conflicting_param_modifiers:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: distributed-object-modifiers
  Regex: conflicting distributed object modifiers on parameter type in implementation of (.*)
  SFINAE: SFINAE_Suppress
  Text: conflicting distributed object modifiers on parameter type in implementation of %0
warn_conflicting_param_types:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: mismatched-parameter-types
  Regex: 'conflicting parameter types in implementation of (.*)(?:: \$ vs \$|)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2'
warn_conflicting_ret_type_modifiers:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: distributed-object-modifiers
  Regex: conflicting distributed object modifiers on return type in implementation of (.*)
  SFINAE: SFINAE_Suppress
  Text: conflicting distributed object modifiers on return type in implementation of %0
warn_conflicting_ret_types:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: mismatched-return-types
  Regex: 'conflicting return type in implementation of (.*)(?:: \$ vs \$|)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting return type in implementation of %0%diff{: $ vs $|}1,2'
warn_conflicting_variadic:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: conflicting variadic declaration of method and its implementation
  SFINAE: SFINAE_Suppress
  Text: conflicting variadic declaration of method and its implementation
warn_consteval_if_always_true:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: redundant-consteval-if
  Regex: consteval if is always true in an (?:unevaluated|immediate) context
  SFINAE: SFINAE_Suppress
  Text: consteval if is always true in an %select{unevaluated|immediate}0 context
warn_conv_to_base_not_used:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: class-conversion
  Regex: conversion function converting (.*) to its base class (.*) will never be used
  SFINAE: SFINAE_Suppress
  Text: conversion function converting %0 to its base class %1 will never be used
warn_conv_to_self_not_used:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: class-conversion
  Regex: conversion function converting (.*) to itself will never be used
  SFINAE: SFINAE_Suppress
  Text: conversion function converting %0 to itself will never be used
warn_conv_to_void_not_used:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: class-conversion
  Regex: conversion function converting (.*) to (.*) will never be used
  SFINAE: SFINAE_Suppress
  Text: conversion function converting %0 to %1 will never be used
warn_coroutine_handle_address_invalid_return_type:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: coroutine
  Regex: return type of 'coroutine_handle<>::address should be 'void\*' \(have (.*)\) in order to get capability with existing async C API\.
  SFINAE: SFINAE_Suppress
  Text: return type of 'coroutine_handle<>::address should be 'void*' (have %0) in order to get capability with existing async C API.
warn_coroutine_promise_unhandled_exception_required_with_exceptions:
  ArgsCount: 1
  CategoryName: Coroutines Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: coroutine-missing-unhandled-exception
  Regex: (.*) is required to declare the member 'unhandled_exception\(\)' when exceptions are enabled
  SFINAE: SFINAE_Suppress
  Text: '%0 is required to declare the member ''unhandled_exception()'' when exceptions are enabled'
warn_correct_comment_command_name:
  ArgsCount: 2
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-unknown-command
  Regex: unknown command tag name '(.*)'; did you mean '(.*)'\?
  SFINAE: SFINAE_Suppress
  Text: unknown command tag name '%0'; did you mean '%1'?
warn_cstruct_memaccess:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nontrivial-memaccess
  Regex: (?:destination for|source of|first operand of|second operand of) this (.*) call is a pointer to record (.*) that is not trivial to (?:primitive-default-initialize|primitive-copy)
  SFINAE: SFINAE_Suppress
  Text: '%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3'
warn_cstyle_param:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: deprecated-declarations
  Regex: use of C-style parameters in Objective-C method declarations is deprecated
  SFINAE: SFINAE_Suppress
  Text: use of C-style parameters in Objective-C method declarations is deprecated
warn_ctad_maybe_unsupported:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: ctad-maybe-unsupported
  Regex: (.*) may not intend to support class template argument deduction
  SFINAE: SFINAE_Suppress
  Text: '%0 may not intend to support class template argument deduction'
warn_ctor_parm_shadows_field:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: shadow-field-in-constructor
  Regex: constructor parameter (.*) shadows the field (.*) of (.*)
  SFINAE: SFINAE_Suppress
  Text: constructor parameter %0 shadows the field %1 of %2
warn_ctu_incompat_triple:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: CrossTU
  DefaultSeverity: SEV_Warning
  Group: ctu
  Regex: 'imported AST from ''(.*)'' had been generated for a different target, current: (.*), imported: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'imported AST from ''%0'' had been generated for a different target, current: %1, imported: %2'
warn_cuda_attr_lambda_position:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: cuda-compat
  Regex: nvcc does not allow '__(.*)__' to appear after the parameter list in lambdas
  SFINAE: SFINAE_Suppress
  Text: nvcc does not allow '__%0__' to appear after the parameter list in lambdas
warn_cxx11_compat_binary_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-c++11-compat-binary-literal
  Regex: binary integer literals are incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: binary integer literals are incompatible with C++ standards before C++14
warn_cxx11_compat_constexpr_body_invalid_stmt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: use of this statement in a constexpr (?:function|constructor) is incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
warn_cxx11_compat_constexpr_body_multiple_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: multiple return statements in constexpr function is incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: multiple return statements in constexpr function is incompatible with C++ standards before C++14
warn_cxx11_compat_constexpr_body_no_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: constexpr function with no return statements is incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: constexpr function with no return statements is incompatible with C++ standards before C++14
warn_cxx11_compat_constexpr_local_var:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: variable declaration in a constexpr (?:function|constructor) is incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
warn_cxx11_compat_constexpr_type_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: type definition in a constexpr (?:function|constructor) is incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
warn_cxx11_compat_decltype_auto_type_specifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: '''decltype\(auto\)'' type specifier is incompatible with C\+\+ standards before C\+\+14'
  SFINAE: SFINAE_Suppress
  Text: '''decltype(auto)'' type specifier is incompatible with C++ standards before C++14'
warn_cxx11_compat_deduced_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: return type deduction is incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: return type deduction is incompatible with C++ standards before C++14
warn_cxx11_compat_digit_separator:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: digit separators are incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: digit separators are incompatible with C++ standards before C++14
warn_cxx11_compat_generic_lambda:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: generic lambdas are incompatible with C\+\+11
  SFINAE: SFINAE_Suppress
  Text: generic lambdas are incompatible with C++11
warn_cxx11_compat_init_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: initialized lambda captures are incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: initialized lambda captures are incompatible with C++ standards before C++14
warn_cxx11_compat_reserved_user_defined_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat-reserved-user-defined-literal
  Regex: identifier after literal will be treated as a reserved user-defined literal suffix in C\+\+11
  SFINAE: SFINAE_Suppress
  Text: identifier after literal will be treated as a reserved user-defined literal suffix in C++11
warn_cxx11_compat_user_defined_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat
  Regex: identifier after literal will be treated as a user-defined literal suffix in C\+\+11
  SFINAE: SFINAE_Suppress
  Text: identifier after literal will be treated as a user-defined literal suffix in C++11
warn_cxx11_compat_variable_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++14-compat
  Regex: variable templates are incompatible with C\+\+ standards before C\+\+14
  SFINAE: SFINAE_Suppress
  Text: variable templates are incompatible with C++ standards before C++14
warn_cxx11_gnu_attribute_on_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) ignored, because it cannot be applied to a type
  SFINAE: SFINAE_Suppress
  Text: attribute %0 ignored, because it cannot be applied to a type
warn_cxx11_keyword:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat
  Regex: '''(.*)'' is a keyword in C\+\+11'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is a keyword in C++11'
warn_cxx11_right_shift_in_template_arg:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: c++11-compat
  Regex: use of right-shift operator \('>>'\) in template argument will require parentheses in C\+\+11
  SFINAE: SFINAE_Suppress
  Text: use of right-shift operator ('>>') in template argument will require parentheses in C++11
warn_cxx14_compat_class_template_argument_deduction:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: class template argument deduction is incompatible with C\+\+ standards before C\+\+17(?:|; for compatibility, use explicit type name (.*))
  SFINAE: SFINAE_Suppress
  Text: class template argument deduction is incompatible with C++ standards before C++17%select{|; for compatibility, use explicit type name %1}0
warn_cxx14_compat_constexpr_if:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: constexpr if is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: constexpr if is incompatible with C++ standards before C++17
warn_cxx14_compat_constexpr_not_const:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: constexpr-not-const
  Regex: '''constexpr'' non-static member function will not be implicitly ''const'' in C\+\+14; add ''const'' to avoid a change in behavior'
  SFINAE: SFINAE_Suppress
  Text: '''constexpr'' non-static member function will not be implicitly ''const'' in C++14; add ''const'' to avoid a change in behavior'
warn_cxx14_compat_constexpr_on_lambda:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: constexpr on lambda expressions is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: constexpr on lambda expressions is incompatible with C++ standards before C++17
warn_cxx14_compat_decomp_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: decomposition declarations are incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: decomposition declarations are incompatible with C++ standards before C++17
warn_cxx14_compat_fold_expression:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: pack fold expression is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: pack fold expression is incompatible with C++ standards before C++17
warn_cxx14_compat_init_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: (?:if|switch) initialization statements are incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: '%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17'
warn_cxx14_compat_inline_variable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: inline variables are incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: inline variables are incompatible with C++ standards before C++17
warn_cxx14_compat_nested_namespace_definition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: nested namespace definition is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: nested namespace definition is incompatible with C++ standards before C++17
warn_cxx14_compat_ns_enum_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat-pedantic
  Regex: attributes on (?:a namespace|an enumerator) declaration are incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
warn_cxx14_compat_star_this_lambda_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: by value capture of '\*this' is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: by value capture of '*this' is incompatible with C++ standards before C++17
warn_cxx14_compat_static_assert_no_message:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: '''static_assert'' with no message is incompatible with C\+\+ standards before C\+\+17'
  SFINAE: SFINAE_Suppress
  Text: '''static_assert'' with no message is incompatible with C++ standards before C++17'
warn_cxx14_compat_template_nontype_parm_auto_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: non-type template parameters declared with (.*) are incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: non-type template parameters declared with %0 are incompatible with C++ standards before C++17
warn_cxx14_compat_template_template_param_typename:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: template template parameter using 'typename' is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: template template parameter using 'typename' is incompatible with C++ standards before C++17
warn_cxx14_compat_u8_character_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: unicode literals are incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: unicode literals are incompatible with C++ standards before C++17
warn_cxx14_compat_using_attribute_ns:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: default scope specifier for attributes is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: default scope specifier for attributes is incompatible with C++ standards before C++17
warn_cxx17_compat_adl_only_template_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: use of function template name with no prior function template declaration in function call with explicit template arguments is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: use of function template name with no prior function template declaration in function call with explicit template arguments is incompatible with C++ standards before C++20
warn_cxx17_compat_bitfield_member_init:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: default member initializer for bit-field is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: default member initializer for bit-field is incompatible with C++ standards before C++20
warn_cxx17_compat_constexpr_body_invalid_stmt:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: use of this statement in a constexpr (?:function|constructor) is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
warn_cxx17_compat_constexpr_ctor_missing_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: constexpr constructor that does not initialize all members is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: constexpr constructor that does not initialize all members is incompatible with C++ standards before C++20
warn_cxx17_compat_constexpr_function_try_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: function try block in constexpr (?:function|constructor) is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: function try block in constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
warn_cxx17_compat_constexpr_local_var_no_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: uninitialized variable in a constexpr (?:function|constructor) is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: uninitialized variable in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
warn_cxx17_compat_constexpr_union_ctor_no_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: constexpr union constructor that does not initialize any member is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: constexpr union constructor that does not initialize any member is incompatible with C++ standards before C++20
warn_cxx17_compat_constexpr_virtual:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: virtual constexpr functions are incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: virtual constexpr functions are incompatible with C++ standards before C++20
warn_cxx17_compat_decomp_decl_spec:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: decomposition declaration declared (?:'(.*)'|with '(.*)' specifiers) is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is incompatible with C++ standards before C++20
warn_cxx17_compat_defaulted_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: defaulted comparison operators are incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: defaulted comparison operators are incompatible with C++ standards before C++20
warn_cxx17_compat_defaulted_method_type_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: explicitly defaulting this (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) with a type different from the implicit type is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: explicitly defaulting this %sub{select_special_member_kind}0 with a type different from the implicit type is incompatible with C++ standards before C++20
warn_cxx17_compat_designated_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat-pedantic
  Regex: designated initializers are incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: designated initializers are incompatible with C++ standards before C++20
warn_cxx17_compat_equals_this_lambda_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: explicit capture of 'this' with a capture default of '=' is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++20
warn_cxx17_compat_exception_spec_in_signature:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++17-compat-mangling
  Regex: mangled name of (.*) will change in C\+\+17 due to non-throwing exception specification in function signature
  SFINAE: SFINAE_Suppress
  Text: mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
warn_cxx17_compat_explicit_bool:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: explicit\(bool\) is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: explicit(bool) is incompatible with C++ standards before C++20
warn_cxx17_compat_for_range_init_stmt:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: range-based for loop initialization statements are incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: range-based for loop initialization statements are incompatible with C++ standards before C++20
warn_cxx17_compat_init_capture_pack:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: initialized lambda capture packs are incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: initialized lambda capture packs are incompatible with C++ standards before C++20
warn_cxx17_compat_inline_nested_namespace_definition:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: inline nested namespace definition is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: inline nested namespace definition is incompatible with C++ standards before C++20
warn_cxx17_compat_lambda_def_ctor_assign:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: (?:default construction|assignment) of lambda is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: '%select{default construction|assignment}0 of lambda is incompatible with C++ standards before C++20'
warn_cxx17_compat_lambda_template_parameter_list:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: explicit template parameter list for lambdas is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: explicit template parameter list for lambdas is incompatible with C++ standards before C++20
warn_cxx17_compat_missing_varargs_arg:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: passing no argument for the '\.\.\.' parameter of a variadic macro is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: passing no argument for the '...' parameter of a variadic macro is incompatible with C++ standards before C++20
warn_cxx17_compat_multi_using_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: use of multiple declarators in a single using declaration is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
warn_cxx17_compat_pointer_to_const_ref_member_on_rvalue:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat-pedantic
  Regex: invoking a pointer to a 'const &' member function on an rvalue is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++20
warn_cxx17_compat_spaceship:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: '''<=>'' operator is incompatible with C\+\+ standards before C\+\+20'
  SFINAE: SFINAE_Suppress
  Text: '''<=>'' operator is incompatible with C++ standards before C++20'
warn_cxx17_compat_template_nontype_parm_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: non-type template parameter of type (.*) is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: non-type template parameter of type %0 is incompatible with C++ standards before C++20
warn_cxx17_compat_unicode_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: '''char8_t'' type specifier is incompatible with C\+\+ standards before C\+\+20'
  SFINAE: SFINAE_Suppress
  Text: '''char8_t'' type specifier is incompatible with C++ standards before C++20'
warn_cxx17_compat_using_decl_class_member_enumerator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: member using declaration naming a non-member enumerator is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: member using declaration naming a non-member enumerator is incompatible with C++ standards before C++20
warn_cxx17_compat_using_decl_non_member_enumerator:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: member using declaration naming non-class '(.*)' enumerator is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: member using declaration naming non-class '%0' enumerator is incompatible with C++ standards before C++20
warn_cxx17_compat_using_decl_scoped_enumerator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: using declaration naming a scoped enumerator is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: using declaration naming a scoped enumerator is incompatible with C++ standards before C++20
warn_cxx17_compat_using_declaration_pack:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: pack expansion using declaration is incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: pack expansion using declaration is incompatible with C++ standards before C++17
warn_cxx17_compat_using_enum_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++20-compat
  Regex: using enum declaration is incompatible with C\+\+ standards before C\+\+20
  SFINAE: SFINAE_Suppress
  Text: using enum declaration is incompatible with C++ standards before C++20
warn_cxx17_hex_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat-pedantic
  Regex: hexadecimal floating literals are incompatible with C\+\+ standards before C\+\+17
  SFINAE: SFINAE_Suppress
  Text: hexadecimal floating literals are incompatible with C++ standards before C++17
warn_cxx20_alias_in_init_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++2b-compat
  Regex: alias declaration in this context is incompatible with C\+\+ standards before C\+\+2b
  SFINAE: SFINAE_Suppress
  Text: alias declaration in this context is incompatible with C++ standards before C++2b
warn_cxx20_compat_aggregate_init_with_ctors:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++20-compat
  Regex: aggregate initialization of type (.*) with user-declared constructors is incompatible with C\+\+20
  SFINAE: SFINAE_Suppress
  Text: aggregate initialization of type %0 with user-declared constructors is incompatible with C++20
warn_cxx20_compat_consteval:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: c++20-compat
  Regex: '''consteval'' specifier is incompatible with C\+\+ standards before C\+\+20'
  SFINAE: SFINAE_Suppress
  Text: '''consteval'' specifier is incompatible with C++ standards before C++20'
warn_cxx20_compat_consteval_if:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++2b-compat
  Regex: consteval if is incompatible with C\+\+ standards before C\+\+2b
  SFINAE: SFINAE_Suppress
  Text: consteval if is incompatible with C++ standards before C++2b
warn_cxx20_compat_constinit:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++20-compat
  Regex: '''constinit'' specifier is incompatible with C\+\+ standards before C\+\+20'
  SFINAE: SFINAE_Suppress
  Text: '''constinit'' specifier is incompatible with C++ standards before C++20'
warn_cxx20_compat_decl_attrs_on_lambda:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-c++2b-compat
  Regex: an attribute specifier sequence in this position is incompatible with C\+\+ standards before C\+\+2b
  SFINAE: SFINAE_Suppress
  Text: an attribute specifier sequence in this position is incompatible with C++ standards before C++2b
warn_cxx20_compat_explicit_bool:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++20-compat
  Regex: this expression will be parsed as explicit\(bool\) in C\+\+20
  SFINAE: SFINAE_Suppress
  Text: this expression will be parsed as explicit(bool) in C++20
warn_cxx20_compat_size_t_suffix:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: pre-c++2b-compat
  Regex: '''size_t'' suffix for literals is incompatible with C\+\+ standards before C\+\+2b'
  SFINAE: SFINAE_Suppress
  Text: '''size_t'' suffix for literals is incompatible with C++ standards before C++2b'
warn_cxx20_compat_spaceship:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: c++20-compat
  Regex: '''<=>'' is a single token in C\+\+20; add a space to avoid a change in behavior'
  SFINAE: SFINAE_Suppress
  Text: '''<=>'' is a single token in C++20; add a space to avoid a change in behavior'
warn_cxx20_compat_utf8_string:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++20-compat
  Regex: type of UTF-8 string literal will change from array of const char to array of const char8_t in C\+\+20
  SFINAE: SFINAE_Suppress
  Text: type of UTF-8 string literal will change from array of const char to array of const char8_t in C++20
warn_cxx20_keyword:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++20-compat
  Regex: '''(.*)'' is a keyword in C\+\+20'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is a keyword in C++20'
warn_cxx98_compat_alias_declaration:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: alias declarations are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: alias declarations are incompatible with C++98
warn_cxx98_compat_alignas:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''alignas'' is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''alignas'' is incompatible with C++98'
warn_cxx98_compat_alignof:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: alignof expressions are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: alignof expressions are incompatible with C++98
warn_cxx98_compat_array_size_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: implicit conversion from array size expression of type (.*) to (?:integral|enumeration) type (.*) is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
warn_cxx98_compat_attribute:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: C\+\+11 attribute syntax is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: C++11 attribute syntax is incompatible with C++98
warn_cxx98_compat_auto_type_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''auto'' type specifier is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''auto'' type specifier is incompatible with C++98'
warn_cxx98_compat_cast_fn_obj:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: cast between pointer-to-function and pointer-to-object is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: cast between pointer-to-function and pointer-to-object is incompatible with C++98
warn_cxx98_compat_constexpr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''constexpr'' specifier is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''constexpr'' specifier is incompatible with C++98'
warn_cxx98_compat_ctor_list_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: constructor call from initializer list is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: constructor call from initializer list is incompatible with C++98
warn_cxx98_compat_decltype:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''decltype'' type specifier is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''decltype'' type specifier is incompatible with C++98'
warn_cxx98_compat_defaulted_deleted_function:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: (?:defaulted|deleted) function definitions are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: '%select{defaulted|deleted}0 function definitions are incompatible with C++98'
warn_cxx98_compat_delegating_ctor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: delegating constructors are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: delegating constructors are incompatible with C++98
warn_cxx98_compat_empty_fnmacro_arg:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: empty macro arguments are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: empty macro arguments are incompatible with C++98
warn_cxx98_compat_empty_scalar_initializer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: scalar initialized from empty initializer list is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: scalar initialized from empty initializer list is incompatible with C++98
warn_cxx98_compat_empty_sizeless_initializer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: initializing (.*) from an empty initializer list is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: initializing %0 from an empty initializer list is incompatible with C++98
warn_cxx98_compat_enum_fixed_underlying_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: enumeration types with a fixed underlying type are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: enumeration types with a fixed underlying type are incompatible with C++98
warn_cxx98_compat_enum_friend:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: befriending enumeration type (.*) is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: befriending enumeration type %0 is incompatible with C++98
warn_cxx98_compat_enum_nested_name_spec:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: enumeration type in nested name specifier is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: enumeration type in nested name specifier is incompatible with C++98
warn_cxx98_compat_enumerator_list_comma:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: commas at the end of enumerator lists are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: commas at the end of enumerator lists are incompatible with C++98
warn_cxx98_compat_explicit_conversion_functions:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: explicit conversion functions are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: explicit conversion functions are incompatible with C++98
warn_cxx98_compat_extern_template:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: extern templates are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: extern templates are incompatible with C++98
warn_cxx98_compat_for_range:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: range-based for loop is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: range-based for loop is incompatible with C++98
warn_cxx98_compat_friend_is_member:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: friend declaration naming a member of the declaring class is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: friend declaration naming a member of the declaring class is incompatible with C++98
warn_cxx98_compat_generalized_initializer_lists:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: generalized initializer lists are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: generalized initializer lists are incompatible with C++98
warn_cxx98_compat_goto_into_protected_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: jump from this goto statement to its label is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: jump from this goto statement to its label is incompatible with C++98
warn_cxx98_compat_indirect_goto_in_protected_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: jump from this (?:indirect|asm) goto statement to one of its possible targets is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: jump from this %select{indirect|asm}0 goto statement to one of its possible targets is incompatible with C++98
warn_cxx98_compat_initializer_list_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: initialization of initializer_list object is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: initialization of initializer_list object is incompatible with C++98
warn_cxx98_compat_inline_namespace:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: inline namespaces are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: inline namespaces are incompatible with C++98
warn_cxx98_compat_lambda:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: lambda expressions are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: lambda expressions are incompatible with C++98
warn_cxx98_compat_less_colon_colon:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''<::'' is treated as digraph ''<:'' \(aka ''\[''\) followed by '':'' in C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''<::'' is treated as digraph ''<:'' (aka ''['') followed by '':'' in C++98'
warn_cxx98_compat_literal_operator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: literal operators are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: literal operators are incompatible with C++98
warn_cxx98_compat_literal_ucn_control_character:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: universal character name referring to a control character is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: universal character name referring to a control character is incompatible with C++98
warn_cxx98_compat_literal_ucn_escape_basic_scs:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: specifying character '(.*)' with a universal character name is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: specifying character '%0' with a universal character name is incompatible with C++98
warn_cxx98_compat_longlong:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: '''long long'' is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''long long'' is incompatible with C++98'
warn_cxx98_compat_no_newline_eof:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: C\+\+98 requires newline at end of file
  SFINAE: SFINAE_Suppress
  Text: C++98 requires newline at end of file
warn_cxx98_compat_noexcept_decl:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: noexcept specifications are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: noexcept specifications are incompatible with C++98
warn_cxx98_compat_noexcept_expr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: noexcept expressions are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: noexcept expressions are incompatible with C++98
warn_cxx98_compat_non_static_member_use:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: use of non-static data member (.*) in an unevaluated context is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: use of non-static data member %0 in an unevaluated context is incompatible with C++98
warn_cxx98_compat_nonclass_type_friend:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: non-class friend type (.*) is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: non-class friend type %0 is incompatible with C++98
warn_cxx98_compat_nonstatic_member_init:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: default member initializer for non-static data members is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: default member initializer for non-static data members is incompatible with C++98
warn_cxx98_compat_nontrivial_union_or_anon_struct_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: (?:anonymous struct|union) member (.*) with a non-trivial (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: '%select{anonymous struct|union}0 member %1 with a non-trivial %sub{select_special_member_kind}2 is incompatible with C++98'
warn_cxx98_compat_nullptr:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''nullptr'' is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''nullptr'' is incompatible with C++98'
warn_cxx98_compat_override_control_keyword:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''(.*)'' keyword is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' keyword is incompatible with C++98'
warn_cxx98_compat_pass_non_pod_arg_to_vararg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: passing object of trivial but non-POD type (.*) through variadic (?:function|block|method|constructor) is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
warn_cxx98_compat_pp_line_too_big:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: '#line number greater than 32767 is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '#line number greater than 32767 is incompatible with C++98'
warn_cxx98_compat_raw_string_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: raw string literals are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: raw string literals are incompatible with C++98
warn_cxx98_compat_ref_qualifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: reference qualifiers on functions are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: reference qualifiers on functions are incompatible with C++98
warn_cxx98_compat_reference_list_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: reference initialized from initializer list is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: reference initialized from initializer list is incompatible with C++98
warn_cxx98_compat_rvalue_reference:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: rvalue references are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: rvalue references are incompatible with C++98
warn_cxx98_compat_scoped_enum:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: scoped enumerations are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: scoped enumerations are incompatible with C++98
warn_cxx98_compat_sfinae_access_control:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: substitution failure due to access control is incompatible with C\+\+98
  SFINAE: SFINAE_Report
  Text: substitution failure due to access control is incompatible with C++98
warn_cxx98_compat_static_assert:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: static_assert declarations are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: static_assert declarations are incompatible with C++98
warn_cxx98_compat_static_data_member_in_union:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: static data member (.*) in union is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: static data member %0 in union is incompatible with C++98
warn_cxx98_compat_switch_into_protected_scope:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: jump from switch statement to this case label is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: jump from switch statement to this case label is incompatible with C++98
warn_cxx98_compat_temp_copy:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-bind-to-temporary-copy
  Regex: (?:copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value) of type (.*) when binding a reference to a temporary would (?:invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor) in C\+\+98
  SFINAE: SFINAE_Suppress
  Text: '%sub{select_initialized_entity_kind}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98'
warn_cxx98_compat_template_arg_extra_parens:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: redundant parentheses surrounding address non-type template argument are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: redundant parentheses surrounding address non-type template argument are incompatible with C++98
warn_cxx98_compat_template_arg_local_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-local-type-template-args
  Regex: local type (.*) as template argument is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: local type %0 as template argument is incompatible with C++98
warn_cxx98_compat_template_arg_null:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: use of null pointer as non-type template argument is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: use of null pointer as non-type template argument is incompatible with C++98
warn_cxx98_compat_template_arg_object_internal:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: non-type template argument referring to (?:function|object) (.*) with internal linkage is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
warn_cxx98_compat_template_arg_unnamed_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-unnamed-type-template-args
  Regex: unnamed type as template argument is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: unnamed type as template argument is incompatible with C++98
warn_cxx98_compat_template_outside_of_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: use of 'template' keyword outside of a template is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: use of 'template' keyword outside of a template is incompatible with C++98
warn_cxx98_compat_template_parameter_default_in_function_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: default template arguments for a function template are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: default template arguments for a function template are incompatible with C++98
warn_cxx98_compat_top_level_semi:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-extra-semi
  Regex: extra ';' outside of a function is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: extra ';' outside of a function is incompatible with C++98
warn_cxx98_compat_trailing_return_type:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: trailing return types are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: trailing return types are incompatible with C++98
warn_cxx98_compat_two_right_angle_brackets:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: consecutive right angle brackets are incompatible with C\+\+98 \(use '> >'\)
  SFINAE: SFINAE_Suppress
  Text: consecutive right angle brackets are incompatible with C++98 (use '> >')
warn_cxx98_compat_typename_outside_of_template:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: use of 'typename' outside of a template is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: use of 'typename' outside of a template is incompatible with C++98
warn_cxx98_compat_unelaborated_friend_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: befriending (.*) without '(?:struct|interface|union|class|enum)' keyword is incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
warn_cxx98_compat_unicode_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: unicode literals are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: unicode literals are incompatible with C++98
warn_cxx98_compat_unicode_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: '''(.*)'' type specifier is incompatible with C\+\+98'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' type specifier is incompatible with C++98'
warn_cxx98_compat_using_decl_constructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: inheriting constructors are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: inheriting constructors are incompatible with C++98
warn_cxx98_compat_variadic_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat-pedantic
  Regex: variadic macros are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: variadic macros are incompatible with C++98
warn_cxx98_compat_variadic_templates:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: c++98-compat
  Regex: variadic templates are incompatible with C\+\+98
  SFINAE: SFINAE_Suppress
  Text: variadic templates are incompatible with C++98
warn_cxx_ms_struct:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: incompatible-ms-struct
  Regex: ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
  SFINAE: SFINAE_Suppress
  Text: ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
warn_dangling_else:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: dangling-else
  Regex: add explicit braces to avoid dangling else
  SFINAE: SFINAE_Suppress
  Text: add explicit braces to avoid dangling else
warn_dangling_lifetime_pointer:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling-gsl
  Regex: object backing the pointer will be destroyed at the end of the full-expression
  SFINAE: SFINAE_Suppress
  Text: object backing the pointer will be destroyed at the end of the full-expression
warn_dangling_lifetime_pointer_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling-gsl
  Regex: initializing pointer member (.*) to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object
  SFINAE: SFINAE_Suppress
  Text: initializing pointer member %0 to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object
warn_dangling_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling-field
  Regex: (?:reference|backing array for 'std::initializer_list') (?:|subobject of )member (.*) (?:binds to|is) a temporary object whose lifetime is shorter than the lifetime of the constructed object
  SFINAE: SFINAE_Suppress
  Text: '%select{reference|backing array for ''std::initializer_list''}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object'
warn_dangling_variable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling
  Regex: (?:temporary (?:whose address is used as value of|(?:|implicitly )bound to) (?:(?:|reference )member of local variable|local (?:variable|reference))|array backing (?:initializer list subobject of local variable|local initializer list)) (?:(.*) |)will be destroyed at the end of the full-expression
  SFINAE: SFINAE_Suppress
  Text: '%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression'
warn_dealloc_in_category:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dealloc-in-category
  Regex: -dealloc is being overridden in a category
  SFINAE: SFINAE_Suppress
  Text: -dealloc is being overridden in a category
warn_debug_compression_unavailable:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: debug-compression-unavailable
  Regex: cannot compress debug sections \(zlib not installed\)
  SFINAE: SFINAE_Suppress
  Text: cannot compress debug sections (zlib not installed)
warn_decl_in_param_list:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: visibility
  Regex: declaration of (.*) will not be visible outside of this function
  SFINAE: SFINAE_Suppress
  Text: declaration of %0 will not be visible outside of this function
warn_decl_shadow:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: shadow
  Regex: declaration shadows a (?:local variable|variable in (.*)|static data member of (.*)|field of (.*)|typedef in (.*)|type alias in (.*)|structured binding)
  SFINAE: SFINAE_Suppress
  Text: declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
warn_decl_shadow_uncaptured_local:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: shadow-uncaptured-local
  Regex: declaration shadows a (?:local variable|variable in (.*)|static data member of (.*)|field of (.*)|typedef in (.*)|type alias in (.*)|structured binding)
  SFINAE: SFINAE_Suppress
  Text: declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
warn_declspec_allocator_nonpointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: ignoring __declspec\(allocator\) because the function return type (.*) is not a pointer or reference type
  SFINAE: SFINAE_Suppress
  Text: ignoring __declspec(allocator) because the function return type %0 is not a pointer or reference type
warn_declspec_attribute_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) is ignored, place it after "(?:class|struct|interface|union|enum)" to apply attribute to type declaration
  SFINAE: SFINAE_Suppress
  Text: attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
warn_deep_exception_specs_differ:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-exception-spec
  Regex: exception specifications of (?:return|argument) types differ
  SFINAE: SFINAE_Suppress
  Text: exception specifications of %select{return|argument}0 types differ
warn_def_missing_case:
  ArgsCount: 10
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: switch-enum
  Regex: '(?:enumeration value (.*) not explicitly handled in switch|enumeration values (.*) and (.*) not explicitly handled in switch|enumeration values (.*), (.*), and (.*) not explicitly handled in switch|(.*) enumeration values not explicitly handled in switch: (.*), (.*), (.*)\.\.\.)'
  SFINAE: SFINAE_Suppress
  Text: '%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0'
warn_default_atomic_custom_getter_setter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: custom-atomic-properties
  Regex: atomic by default property (.*) has a user defined (?:getter|setter) \(property should be marked 'atomic' if this is intended\)
  SFINAE: SFINAE_Suppress
  Text: atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
warn_defaulted_comparison_deleted:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: defaulted-function-deleted
  Regex: explicitly defaulted (?:<ERROR>|equality|three-way|equality|relational) comparison operator is implicitly deleted
  SFINAE: SFINAE_Suppress
  Text: explicitly defaulted %sub{select_defaulted_comparison_kind}0 is implicitly deleted
warn_defaulted_method_deleted:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: defaulted-function-deleted
  Regex: explicitly defaulted (?:default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor) is implicitly deleted
  SFINAE: SFINAE_Suppress
  Text: explicitly defaulted %sub{select_special_member_kind}0 is implicitly deleted
warn_defined_in_function_type_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: expansion-to-defined
  Regex: macro expansion producing 'defined' has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: macro expansion producing 'defined' has undefined behavior
warn_defined_in_object_type_macro:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: expansion-to-defined
  Regex: macro expansion producing 'defined' has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: macro expansion producing 'defined' has undefined behavior
warn_delegating_ctor_cycle:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: delegating-ctor-cycles
  Regex: constructor for (.*) creates a delegation cycle
  SFINAE: SFINAE_Suppress
  Text: constructor for %0 creates a delegation cycle
warn_delete_abstract_non_virtual_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: delete-abstract-non-virtual-dtor
  Regex: (?:delete|destructor) called on (.*) that is abstract but has non-virtual destructor
  SFINAE: SFINAE_Suppress
  Text: '%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor'
warn_delete_array_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: '''delete'' applied to a pointer-to-array type (.*) treated as ''delete\[\]'''
  SFINAE: SFINAE_Suppress
  Text: '''delete'' applied to a pointer-to-array type %0 treated as ''delete[]'''
warn_delete_incomplete:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: delete-incomplete
  Regex: deleting pointer to incomplete type (.*) may cause undefined behavior
  SFINAE: SFINAE_Suppress
  Text: deleting pointer to incomplete type %0 may cause undefined behavior
warn_delete_non_virtual_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: delete-non-abstract-non-virtual-dtor
  Regex: (?:delete|destructor) called on non-final (.*) that has virtual functions but non-virtual destructor
  SFINAE: SFINAE_Suppress
  Text: '%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor'
warn_delimited_ucn_empty:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode
  Regex: empty delimited universal character name; treating as '\\' 'u' '\{' '\}'
  SFINAE: SFINAE_Suppress
  Text: empty delimited universal character name; treating as '\' 'u' '{' '}'
warn_delimited_ucn_incomplete:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode
  Regex: incomplete delimited universal character name; treating as '\\' 'u' '\{' identifier
  SFINAE: SFINAE_Suppress
  Text: incomplete delimited universal character name; treating as '\' 'u' '{' identifier
warn_depr_array_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-array-compare
  Regex: comparison between two arrays is deprecated; to compare array addresses, use unary '\+' to decay operands to pointers
  SFINAE: SFINAE_Suppress
  Text: comparison between two arrays is deprecated; to compare array addresses, use unary '+' to decay operands to pointers
warn_deprecated:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-declarations
  Regex: (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: '%0 is deprecated'
warn_deprecated_altivec_src_compat:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-altivec-src-compat
  Regex: Current handling of vector bool and vector pixel types in this context are deprecated\. The default behaviour will soon change to that implied by the '-altivec-compat=xl' option
  SFINAE: SFINAE_Suppress
  Text: Current handling of vector bool and vector pixel types in this context are deprecated. The default behaviour will soon change to that implied by the '-altivec-compat=xl' option
warn_deprecated_anonymous_namespace:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''deprecated'' attribute on anonymous namespace ignored'
  SFINAE: SFINAE_Suppress
  Text: '''deprecated'' attribute on anonymous namespace ignored'
warn_deprecated_comma_subscript:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-comma-subscript
  Regex: top-level comma expression in array subscript is deprecated in C\+\+20 and unsupported in C\+\+2b
  SFINAE: SFINAE_Suppress
  Text: top-level comma expression in array subscript is deprecated in C++20 and unsupported in C++2b
warn_deprecated_compound_assign_volatile:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-volatile
  Regex: compound assignment to object of volatile-qualified type (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: compound assignment to object of volatile-qualified type %0 is deprecated
warn_deprecated_copy:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated-copy
  Regex: definition of implicit copy (?:constructor|assignment operator) for (.*) is deprecated because it has a user-declared copy (?:assignment operator|constructor)
  SFINAE: SFINAE_Suppress
  Text: definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared copy %select{assignment operator|constructor}1
warn_deprecated_copy_with_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated-copy-with-dtor
  Regex: definition of implicit copy (?:constructor|assignment operator) for (.*) is deprecated because it has a user-declared destructor
  SFINAE: SFINAE_Suppress
  Text: definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared destructor
warn_deprecated_copy_with_user_provided_copy:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated-copy-with-user-provided-copy
  Regex: definition of implicit copy (?:constructor|assignment operator) for (.*) is deprecated because it has a user-provided copy (?:assignment operator|constructor)
  SFINAE: SFINAE_Suppress
  Text: definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided copy %select{assignment operator|constructor}1
warn_deprecated_copy_with_user_provided_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated-copy-with-user-provided-dtor
  Regex: definition of implicit copy (?:constructor|assignment operator) for (.*) is deprecated because it has a user-provided destructor
  SFINAE: SFINAE_Suppress
  Text: definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided destructor
warn_deprecated_coroutine_namespace:
  ArgsCount: 2
  CategoryName: Coroutines Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-experimental-coroutine
  Regex: support for std::experimental::(.*) will be removed in LLVM 15; use std::(.*) instead
  SFINAE: SFINAE_Suppress
  Text: support for std::experimental::%0 will be removed in LLVM 15; use std::%0 instead
warn_deprecated_def:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated-implementations
  Regex: implementing deprecated (?:method|class|category)
  SFINAE: SFINAE_Suppress
  Text: implementing deprecated %select{method|class|category}0
warn_deprecated_for_co_await:
  ArgsCount: 0
  CategoryName: Coroutines Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: deprecated-coroutine
  Regex: '''for co_await'' belongs to CoroutineTS instead of C\+\+20, which is deprecated'
  SFINAE: SFINAE_Suppress
  Text: '''for co_await'' belongs to CoroutineTS instead of C++20, which is deprecated'
warn_deprecated_fwdclass_message:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-declarations
  Regex: (.*) may be deprecated because the receiver type is unknown
  SFINAE: SFINAE_Suppress
  Text: '%0 may be deprecated because the receiver type is unknown'
warn_deprecated_ignored_on_using:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) currently has no effect on a using declaration
  SFINAE: SFINAE_Suppress
  Text: '%0 currently has no effect on a using declaration'
warn_deprecated_increment_decrement_volatile:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-volatile
  Regex: (?:decrement|increment) of object of volatile-qualified type (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: '%select{decrement|increment}0 of object of volatile-qualified type %1 is deprecated'
warn_deprecated_message:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-declarations
  Regex: '(.*) is deprecated: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '%0 is deprecated: %1'
warn_deprecated_redundant_constexpr_static_def:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated
  Regex: out-of-line definition of constexpr static data member is redundant in C\+\+17 and is deprecated
  SFINAE: SFINAE_Suppress
  Text: out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
warn_deprecated_register:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-register
  Regex: '''register'' storage class specifier is deprecated and incompatible with C\+\+17'
  SFINAE: SFINAE_Suppress
  Text: '''register'' storage class specifier is deprecated and incompatible with C++17'
warn_deprecated_simple_assign_volatile:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-volatile
  Regex: use of result of assignment to object of volatile-qualified type (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: use of result of assignment to object of volatile-qualified type %0 is deprecated
warn_deprecated_string_literal_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: c++11-compat-deprecated-writable-strings
  Regex: conversion from string literal to (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: conversion from string literal to %0 is deprecated
warn_deprecated_this_capture:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated-this-capture
  Regex: implicit capture of 'this' with a capture default of '=' is deprecated
  SFINAE: SFINAE_Suppress
  Text: implicit capture of 'this' with a capture default of '=' is deprecated
warn_deprecated_volatile_param:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-volatile
  Regex: volatile-qualified parameter type (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: volatile-qualified parameter type %0 is deprecated
warn_deprecated_volatile_return:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-volatile
  Regex: volatile-qualified return type (.*) is deprecated
  SFINAE: SFINAE_Suppress
  Text: volatile-qualified return type %0 is deprecated
warn_deprecated_volatile_structured_binding:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-volatile
  Regex: volatile qualifier in structured binding declaration is deprecated
  SFINAE: SFINAE_Suppress
  Text: volatile qualifier in structured binding declaration is deprecated
warn_dereference_of_noderef_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: noderef
  Regex: dereferencing (.*); was declared with a 'noderef' type
  SFINAE: SFINAE_Suppress
  Text: dereferencing %0; was declared with a 'noderef' type
warn_dereference_of_noderef_type_no_decl:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: noderef
  Regex: dereferencing expression marked as 'noderef'
  SFINAE: SFINAE_Suppress
  Text: dereferencing expression marked as 'noderef'
warn_direct_initialize_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: explicit-initialize-call
  Regex: explicit call to \+initialize results in duplicate call to \+initialize
  SFINAE: SFINAE_Suppress
  Text: explicit call to +initialize results in duplicate call to +initialize
warn_direct_ivar_access:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: direct-ivar-access
  Regex: instance variable (.*) is being directly accessed
  SFINAE: SFINAE_Suppress
  Text: instance variable %0 is being directly accessed
warn_direct_super_initialize_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: explicit-initialize-call
  Regex: explicit call to \[super initialize\] should only be in implementation of \+initialize
  SFINAE: SFINAE_Suppress
  Text: explicit call to [super initialize] should only be in implementation of +initialize
warn_dispatch_body_ignored:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: function-multiversion
  Regex: body of cpu_dispatch function will be ignored
  SFINAE: SFINAE_Suppress
  Text: body of cpu_dispatch function will be ignored
warn_division_sizeof_array:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sizeof-array-div
  Regex: expression does not compute the number of elements in this array; element type is (.*), not (.*)
  SFINAE: SFINAE_Suppress
  Text: expression does not compute the number of elements in this array; element type is %0, not %1
warn_division_sizeof_ptr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sizeof-pointer-div
  Regex: '''(.*)'' will return the size of the pointer, not the array itself'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' will return the size of the pointer, not the array itself'
warn_dllimport_dropped_from_inline_function:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) redeclared inline; (.*) attribute ignored
  SFINAE: SFINAE_Suppress
  Text: '%q0 redeclared inline; %1 attribute ignored'
warn_doc_api_container_decl_mismatch:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)(?:class|interface|protocol|struct|union)'' command should not be used in a comment attached to a non-(?:class|interface|protocol|struct|union) declaration'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0%select{class|interface|protocol|struct|union}1'' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration'
warn_doc_block_command_duplicate:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: duplicated command '(?:\\|@)(.*)'
  SFINAE: SFINAE_Suppress
  Text: duplicated command '%select{\|@}0%1'
warn_doc_block_command_empty_paragraph:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: empty paragraph passed to '(?:\\|@)(.*)' command
  SFINAE: SFINAE_Suppress
  Text: empty paragraph passed to '%select{\|@}0%1' command
warn_doc_container_decl_mismatch:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)(?:classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass)'' command should not be used in a comment attached to a non-container declaration'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1'' command should not be used in a comment attached to a non-container declaration'
warn_doc_deprecated_not_sync:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-deprecated-sync
  Regex: declaration is marked with '(?:\\|@)deprecated' command but does not have a deprecation attribute
  SFINAE: SFINAE_Suppress
  Text: declaration is marked with '%select{\|@}0deprecated' command but does not have a deprecation attribute
warn_doc_function_method_decl_mismatch:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)(?:function|functiongroup|method|methodgroup|callback)'' command should be used in a comment attached to (?:a function|a function|an Objective-C method|an Objective-C method|a pointer to function) declaration'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1'' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration'
warn_doc_html_end_forbidden:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-html
  Regex: HTML end tag '(.*)' is forbidden
  SFINAE: SFINAE_Suppress
  Text: HTML end tag '%0' is forbidden
warn_doc_html_end_unbalanced:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-html
  Regex: HTML end tag does not match any start tag
  SFINAE: SFINAE_Suppress
  Text: HTML end tag does not match any start tag
warn_doc_html_missing_end_tag:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-html
  Regex: HTML tag '(.*)' requires an end tag
  SFINAE: SFINAE_Suppress
  Text: HTML tag '%0' requires an end tag
warn_doc_html_start_end_mismatch:
  ArgsCount: 2
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-html
  Regex: HTML start tag '(.*)' closed by '(.*)'
  SFINAE: SFINAE_Suppress
  Text: HTML start tag '%0' closed by '%1'
warn_doc_html_start_tag_expected_ident_or_greater:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: HTML start tag prematurely ended, expected attribute name or '>'
  SFINAE: SFINAE_Suppress
  Text: HTML start tag prematurely ended, expected attribute name or '>'
warn_doc_html_start_tag_expected_quoted_string:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: expected quoted string after equals sign
  SFINAE: SFINAE_Suppress
  Text: expected quoted string after equals sign
warn_doc_inline_contents_no_argument:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)(.*)'' command does not have a valid word argument'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0%1'' command does not have a valid word argument'
warn_doc_param_duplicate:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: parameter '(.*)' is already documented
  SFINAE: SFINAE_Suppress
  Text: parameter '%0' is already documented
warn_doc_param_invalid_direction:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: unrecognized parameter passing direction, valid directions are '\[in\]', '\[out\]' and '\[in,out\]'
  SFINAE: SFINAE_Suppress
  Text: unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
warn_doc_param_not_attached_to_a_function_decl:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)param'' command used in a comment that is not attached to a function declaration'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0param'' command used in a comment that is not attached to a function declaration'
warn_doc_param_not_found:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: parameter '(.*)' not found in the function declaration
  SFINAE: SFINAE_Suppress
  Text: parameter '%0' not found in the function declaration
warn_doc_param_spaces_in_direction:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-pedantic
  Regex: whitespace is not allowed in parameter passing direction
  SFINAE: SFINAE_Suppress
  Text: whitespace is not allowed in parameter passing direction
warn_doc_returns_attached_to_a_void_function:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)(.*)'' command used in a comment that is attached to a (?:function returning void|constructor|destructor|method returning void)'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0%1'' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2'
warn_doc_returns_not_attached_to_a_function_decl:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)(.*)'' command used in a comment that is not attached to a function or method declaration'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0%1'' command used in a comment that is not attached to a function or method declaration'
warn_doc_tparam_duplicate:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: template parameter '(.*)' is already documented
  SFINAE: SFINAE_Suppress
  Text: template parameter '%0' is already documented
warn_doc_tparam_not_attached_to_a_template_decl:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)tparam'' command used in a comment that is not attached to a template declaration'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0tparam'' command used in a comment that is not attached to a template declaration'
warn_doc_tparam_not_found:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: template parameter '(.*)' not found in the template declaration
  SFINAE: SFINAE_Suppress
  Text: template parameter '%0' not found in the template declaration
warn_double_const_requires_fp64:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: double precision constant requires (?:cl_khr_fp64|cl_khr_fp64 and __opencl_c_fp64), casting to single precision
  SFINAE: SFINAE_Suppress
  Text: double precision constant requires %select{cl_khr_fp64|cl_khr_fp64 and __opencl_c_fp64}0, casting to single precision
warn_double_lock:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: acquiring (.*) '(.*)' that is already held
  SFINAE: SFINAE_Suppress
  Text: acquiring %0 '%1' that is already held
warn_drv_assuming_mfloat_abi_is:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: unknown platform, assuming -mfloat-abi=(.*)
  SFINAE: SFINAE_Suppress
  Text: unknown platform, assuming -mfloat-abi=%0
warn_drv_avr_family_linking_stdlibs_not_implemented:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: avr-rtlib-linking-quirks
  Regex: support for linking stdlibs for microcontroller '(.*)' is not implemented
  SFINAE: SFINAE_Suppress
  Text: support for linking stdlibs for microcontroller '%0' is not implemented
warn_drv_avr_gcc_not_found:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: avr-rtlib-linking-quirks
  Regex: no avr-gcc installation can be found on the system, cannot link standard libraries
  SFINAE: SFINAE_Suppress
  Text: no avr-gcc installation can be found on the system, cannot link standard libraries
warn_drv_avr_libc_not_found:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: avr-rtlib-linking-quirks
  Regex: no avr-libc installation can be found on the system, cannot link standard libraries
  SFINAE: SFINAE_Suppress
  Text: no avr-libc installation can be found on the system, cannot link standard libraries
warn_drv_avr_linker_section_addresses_not_implemented:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: avr-rtlib-linking-quirks
  Regex: support for passing the data section address to the linker for microcontroller '(.*)' is not implemented
  SFINAE: SFINAE_Suppress
  Text: support for passing the data section address to the linker for microcontroller '%0' is not implemented
warn_drv_avr_mcu_not_specified:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: avr-rtlib-linking-quirks
  Regex: no target microcontroller specified on command line, cannot link standard libraries, please pass -mmcu=<mcu name>
  SFINAE: SFINAE_Suppress
  Text: no target microcontroller specified on command line, cannot link standard libraries, please pass -mmcu=<mcu name>
warn_drv_avr_stdlib_not_linked:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: avr-rtlib-linking-quirks
  Regex: standard library not linked and so no interrupt vector table or compiler runtime routines will be linked
  SFINAE: SFINAE_Suppress
  Text: standard library not linked and so no interrupt vector table or compiler runtime routines will be linked
warn_drv_clang_unsupported:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: the clang compiler does not support '(.*)'
  SFINAE: SFINAE_Suppress
  Text: the clang compiler does not support '%0'
warn_drv_darwin_sdk_invalid_settings:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: darwin-sdk-settings
  Regex: SDK settings were ignored as 'SDKSettings\.json' could not be parsed
  SFINAE: SFINAE_Suppress
  Text: SDK settings were ignored as 'SDKSettings.json' could not be parsed
warn_drv_deprecated_arg:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: deprecated
  Regex: argument '(.*)' is deprecated, use '(.*)' instead
  SFINAE: SFINAE_Suppress
  Text: argument '%0' is deprecated, use '%1' instead
warn_drv_diagnostics_hotness_requires_pgo:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: argument '(.*)' requires profile-guided optimization information
  SFINAE: SFINAE_Suppress
  Text: argument '%0' requires profile-guided optimization information
warn_drv_disabling_vptr_no_rtti_default:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: auto-disable-vptr-sanitizer
  Regex: implicitly disabling vptr sanitizer because rtti wasn't enabled
  SFINAE: SFINAE_Suppress
  Text: implicitly disabling vptr sanitizer because rtti wasn't enabled
warn_drv_dwarf_version_limited_by_target:
  ArgsCount: 4
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-target-opt
  Regex: debug information option '(.*)' is not supported; requires DWARF-(.*) but target '(.*)' only provides DWARF-(.*)
  SFINAE: SFINAE_Suppress
  Text: debug information option '%0' is not supported; requires DWARF-%2 but target '%1' only provides DWARF-%3
warn_drv_empty_joined_argument:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: 'joined argument expects additional value: ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'joined argument expects additional value: ''%0'''
warn_drv_fine_grained_bitfield_accesses_ignored:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
  SFINAE: SFINAE_Suppress
  Text: option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
warn_drv_fuse_ld_path:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Ignored
  Group: fuse-ld-path
  Regex: '''-fuse-ld='' taking a path is deprecated; use ''--ld-path='' instead'
  SFINAE: SFINAE_Suppress
  Text: '''-fuse-ld='' taking a path is deprecated; use ''--ld-path='' instead'
warn_drv_global_isel_incomplete:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: global-isel
  Regex: -fglobal-isel support for the '(.*)' architecture is incomplete
  SFINAE: SFINAE_Suppress
  Text: -fglobal-isel support for the '%0' architecture is incomplete
warn_drv_global_isel_incomplete_opt:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: global-isel
  Regex: -fglobal-isel support is incomplete for this architecture at the current optimization level
  SFINAE: SFINAE_Suppress
  Text: -fglobal-isel support is incomplete for this architecture at the current optimization level
warn_drv_input_file_unused:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: '(.*): ''(.*)'' input unused(?: when ''(.*)'' is present|)'
  SFINAE: SFINAE_Suppress
  Text: '%0: ''%1'' input unused%select{ when ''%3'' is present|}2'
warn_drv_input_file_unused_by_cpp:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: '(.*): ''(.*)'' input unused in cpp mode'
  SFINAE: SFINAE_Suppress
  Text: '%0: ''%1'' input unused in cpp mode'
warn_drv_invalid_arch_name_with_suggestion:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: 'ignoring invalid /arch: argument ''(.*)''; for (?:64|32)-bit expected one of (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'ignoring invalid /arch: argument ''%0''; for %select{64|32}1-bit expected one of %2'
warn_drv_jmc_requires_debuginfo:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: /JMC requires debug info\. Use '/Zi', '/Z7' or other debug options; option ignored
  SFINAE: SFINAE_Suppress
  Text: /JMC requires debug info. Use '/Zi', '/Z7' or other debug options; option ignored
warn_drv_libstdcxx_not_found:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: stdlibcxx-not-found
  Regex: include path for libstdc\+\+ headers not found; pass '-stdlib=libc\+\+' on the command line to use the libc\+\+ standard library instead
  SFINAE: SFINAE_Suppress
  Text: include path for libstdc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
warn_drv_missing_plugin_arg:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: missing plugin argument for plugin (.*) in (.*)
  SFINAE: SFINAE_Suppress
  Text: missing plugin argument for plugin %0 in %1
warn_drv_missing_plugin_name:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: missing plugin name in (.*)
  SFINAE: SFINAE_Suppress
  Text: missing plugin name in %0
warn_drv_moutline_atomics_unsupported_opt:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: '''(.*)'' does not support ''-(.*)''; flag ignored'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' does not support ''-%1''; flag ignored'
warn_drv_moutline_unsupported_opt:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: '''(.*)'' does not support ''-moutline''; flag ignored'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' does not support ''-moutline''; flag ignored'
warn_drv_msp430_hwmult_mismatch:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: the given MCU supports (.*) hardware multiply, but '-mhwmult' is set to (.*)
  SFINAE: SFINAE_Suppress
  Text: the given MCU supports %0 hardware multiply, but '-mhwmult' is set to %1
warn_drv_msp430_hwmult_no_device:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: no MCU device specified, but '-mhwmult' is set to 'auto', assuming no hardware multiply; use '-mmcu' to specify an MSP430 device, or '-mhwmult' to set the hardware multiply type explicitly
  SFINAE: SFINAE_Suppress
  Text: no MCU device specified, but '-mhwmult' is set to 'auto', assuming no hardware multiply; use '-mmcu' to specify an MSP430 device, or '-mhwmult' to set the hardware multiply type explicitly
warn_drv_msp430_hwmult_unsupported:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: the given MCU does not support hardware multiply, but '-mhwmult' is set to (.*)
  SFINAE: SFINAE_Suppress
  Text: the given MCU does not support hardware multiply, but '-mhwmult' is set to %0
warn_drv_msvc_not_found:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: msvc-not-found
  Regex: unable to find a Visual Studio installation; try running Clang from a developer command prompt
  SFINAE: SFINAE_Suppress
  Text: unable to find a Visual Studio installation; try running Clang from a developer command prompt
warn_drv_needs_hvx:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: (.*) requires HVX, use -mhvx/-mhvx= to enable it
  SFINAE: SFINAE_Suppress
  Text: '%0 requires HVX, use -mhvx/-mhvx= to enable it'
warn_drv_new_cuda_version:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unknown-cuda-version
  Regex: CUDA version(.*) is newer than the latest(?:| partially) supported version (.*)
  SFINAE: SFINAE_Suppress
  Text: CUDA version%0 is newer than the latest%select{| partially}1 supported version %2
warn_drv_object_size_disabled_O0:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: 'the object size sanitizer has no effect at -O0, but is explicitly enabled: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'the object size sanitizer has no effect at -O0, but is explicitly enabled: %0'
warn_drv_omp_offload_target_duplicate:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: openmp-target
  Regex: OpenMP offloading target '(.*)' is similar to target '(.*)' already specified; will be ignored
  SFINAE: SFINAE_Suppress
  Text: OpenMP offloading target '%0' is similar to target '%1' already specified; will be ignored
warn_drv_optimization_value:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: optimization level '(.*)' is not supported; using '(.*)(.*)' instead
  SFINAE: SFINAE_Suppress
  Text: optimization level '%0' is not supported; using '%1%2' instead
warn_drv_overriding_flag_option:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: overriding-t-option
  Regex: overriding '(.*)' option with '(.*)'
  SFINAE: SFINAE_Suppress
  Text: overriding '%0' option with '%1'
warn_drv_partially_supported_cuda_version:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unknown-cuda-version
  Regex: CUDA version (.*) is only partially supported
  SFINAE: SFINAE_Suppress
  Text: CUDA version %0 is only partially supported
warn_drv_pch_not_first_include:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: precompiled header '(.*)' was ignored because '(.*)' is not first '-include'
  SFINAE: SFINAE_Suppress
  Text: precompiled header '%0' was ignored because '%1' is not first '-include'
warn_drv_preprocessed_input_file_unused:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: '(.*): previously preprocessed input(?: unused when ''(.*)'' is present|)'
  SFINAE: SFINAE_Suppress
  Text: '%0: previously preprocessed input%select{ unused when ''%2'' is present|}1'
warn_drv_ps4_force_pic:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: option '(.*)' was ignored by the PS4 toolchain, using '-fPIC'
  SFINAE: SFINAE_Suppress
  Text: option '%0' was ignored by the PS4 toolchain, using '-fPIC'
warn_drv_ps4_sdk_dir:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-or-nonexistent-directory
  Regex: environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '(.*)'
  SFINAE: SFINAE_Suppress
  Text: environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'
warn_drv_treating_input_as_cxx:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: deprecated
  Regex: treating '(.*)' input as '(.*)' when in C\+\+ mode, this behavior is deprecated
  SFINAE: SFINAE_Suppress
  Text: treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
warn_drv_unable_to_find_directory_expected:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Ignored
  Group: invalid-or-nonexistent-directory
  Regex: unable to find (.*) directory, expected to be in '(.*)'
  SFINAE: SFINAE_Suppress
  Text: unable to find %0 directory, expected to be in '%1'
warn_drv_unknown_argument_clang_cl:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unknown-argument
  Regex: 'unknown argument ignored in clang-cl: ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'unknown argument ignored in clang-cl: ''%0'''
warn_drv_unknown_argument_clang_cl_with_suggestion:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unknown-argument
  Regex: unknown argument ignored in clang-cl '(.*)'; did you mean '(.*)'\?
  SFINAE: SFINAE_Suppress
  Text: unknown argument ignored in clang-cl '%0'; did you mean '%1'?
warn_drv_unsupported_debug_info_opt_for_target:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-target-opt
  Regex: debug information option '(.*)' is not supported for target '(.*)'
  SFINAE: SFINAE_Suppress
  Text: debug information option '%0' is not supported for target '%1'
warn_drv_unsupported_float_abi_by_lib:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-abi
  Regex: float ABI '(.*)' is not supported by current library
  SFINAE: SFINAE_Suppress
  Text: float ABI '%0' is not supported by current library
warn_drv_unsupported_gpopt:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-gpopt
  Regex: ignoring '-mgpopt' option as it cannot be used with (?:|the implicit usage of )-mabicalls
  SFINAE: SFINAE_Suppress
  Text: ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
warn_drv_unsupported_longcalls:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: ignoring '-mlong-calls' option as it is not currently supported with (?:|the implicit usage of )-mabicalls
  SFINAE: SFINAE_Suppress
  Text: ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
warn_drv_unsupported_opt_for_target:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: ignored-optimization-argument
  Regex: optimization flag '(.*)' is not supported for target '(.*)'
  SFINAE: SFINAE_Suppress
  Text: optimization flag '%0' is not supported for target '%1'
warn_drv_unsupported_option_for_offload_arch_req_feature:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: ignoring '(.*)' option as it is not currently supported for offload arch '(.*)'\. Use it with an offload arch containing '(.*)' instead
  SFINAE: SFINAE_Suppress
  Text: ignoring '%0' option as it is not currently supported for offload arch '%1'. Use it with an offload arch containing '%2' instead
warn_drv_unsupported_option_for_target:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: ignoring '(.*)' option as it is not currently supported for target '(.*)'
  SFINAE: SFINAE_Suppress
  Text: ignoring '%0' option as it is not currently supported for target '%1'
warn_drv_unsupported_pic_with_mabicalls:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: ignoring '(.*)' option as it cannot be used with (?:implicit usage of|) -mabicalls and the N64 ABI
  SFINAE: SFINAE_Suppress
  Text: ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
warn_drv_unsupported_sdata:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: option-ignored
  Regex: ignoring '-msmall-data-limit=' with -mcmodel=large for -fpic or RV64
  SFINAE: SFINAE_Suppress
  Text: ignoring '-msmall-data-limit=' with -mcmodel=large for -fpic or RV64
warn_drv_unused_argument:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: 'argument unused during compilation: ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'argument unused during compilation: ''%0'''
warn_drv_yc_multiple_inputs_clang_cl:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: clang-cl-pch
  Regex: support for '/Yc' with more than one source file not implemented yet; flag ignored
  SFINAE: SFINAE_Suppress
  Text: support for '/Yc' with more than one source file not implemented yet; flag ignored
warn_drv_ycyu_different_arg_clang_cl:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: clang-cl-pch
  Regex: support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
  SFINAE: SFINAE_Suppress
  Text: support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
warn_dup_category_def:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: duplicate definition of category (.*) on interface (.*)
  SFINAE: SFINAE_Suppress
  Text: duplicate definition of category %1 on interface %0
warn_duplicate_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) is already applied with different arguments
  SFINAE: SFINAE_Suppress
  Text: attribute %0 is already applied with different arguments
warn_duplicate_attribute_exact:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: attribute (.*) is already applied
  SFINAE: SFINAE_Suppress
  Text: attribute %0 is already applied
warn_duplicate_codeseg_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: section
  Regex: duplicate code segment specifiers
  SFINAE: SFINAE_Suppress
  Text: duplicate code segment specifiers
warn_duplicate_declspec:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: duplicate-decl-specifier
  Regex: duplicate '(.*)' declaration specifier
  SFINAE: SFINAE_Suppress
  Text: '%sub{duplicate_declspec}0'
warn_duplicate_enum_values:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: duplicate-enum
  Regex: element (.*) has been implicitly assigned (.*) which another element has been assigned
  SFINAE: SFINAE_Suppress
  Text: element %0 has been implicitly assigned %1 which another element has been assigned
warn_duplicate_method_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: duplicate-method-match
  Regex: multiple declarations of method (.*) found and ignored
  SFINAE: SFINAE_Suppress
  Text: multiple declarations of method %0 found and ignored
warn_duplicate_module_file_extension:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_WARNING
  Component: Serialization
  DefaultSeverity: SEV_Warning
  Group: module-file-extension
  Regex: duplicate module file extension block name '(.*)'
  SFINAE: SFINAE_Suppress
  Text: duplicate module file extension block name '%0'
warn_duplicate_protocol_def:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: duplicate-protocol
  Regex: duplicate protocol definition of (.*) is ignored
  SFINAE: SFINAE_Suppress
  Text: duplicate protocol definition of %0 is ignored
warn_dyn_class_memaccess:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dynamic-class-memaccess
  Regex: (?:destination for|source of|first operand of|second operand of) this (.*) call is a pointer to (?:|class containing a )dynamic class (.*); vtable pointer will be (?:overwritten|copied|moved|compared)
  SFINAE: SFINAE_Suppress
  Text: '%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4'
warn_empty_for_body:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: empty-body
  Regex: for loop has empty body
  SFINAE: SFINAE_Suppress
  Text: for loop has empty body
warn_empty_format_string:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format-zero-length
  Regex: format string is empty
  SFINAE: SFINAE_Suppress
  Text: format string is empty
warn_empty_if_body:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: empty-body
  Regex: if statement has empty body
  SFINAE: SFINAE_Suppress
  Text: if statement has empty body
warn_empty_init_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: empty-init-stmt
  Regex: empty initialization statement of '(?:if|switch|range-based for)' has no effect
  SFINAE: SFINAE_Suppress
  Text: empty initialization statement of '%select{if|switch|range-based for}0' has no effect
warn_empty_parens_are_function_decl:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: vexing-parse
  Regex: empty parentheses interpreted as a function declaration
  SFINAE: SFINAE_Suppress
  Text: empty parentheses interpreted as a function declaration
warn_empty_range_based_for_body:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: empty-body
  Regex: range-based for loop has empty body
  SFINAE: SFINAE_Suppress
  Text: range-based for loop has empty body
warn_empty_switch_body:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: empty-body
  Regex: switch statement has empty body
  SFINAE: SFINAE_Suppress
  Text: switch statement has empty body
warn_empty_while_body:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: empty-body
  Regex: while loop has empty body
  SFINAE: SFINAE_Suppress
  Text: while loop has empty body
warn_enum_constant_in_bool_context:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: int-in-bool-context
  Regex: converting the enum constant to a boolean
  SFINAE: SFINAE_Suppress
  Text: converting the enum constant to a boolean
warn_enum_value_overflow:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: overflow in enumeration value
  SFINAE: SFINAE_Suppress
  Text: overflow in enumeration value
warn_equality_with_extra_parens:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: parentheses-equality
  Regex: equality comparison with extraneous parentheses
  SFINAE: SFINAE_Suppress
  Text: equality comparison with extraneous parentheses
warn_exception_caught_by_earlier_handler:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: exceptions
  Regex: exception of type (.*) will be caught by earlier handler
  SFINAE: SFINAE_Suppress
  Text: exception of type %0 will be caught by earlier handler
warn_exception_spec_deprecated:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: deprecated-dynamic-exception-spec
  Regex: dynamic exception specifications are deprecated
  SFINAE: SFINAE_Suppress
  Text: dynamic exception specifications are deprecated
warn_exit_time_destructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: exit-time-destructors
  Regex: declaration requires an exit-time destructor
  SFINAE: SFINAE_Suppress
  Text: declaration requires an exit-time destructor
warn_expected_consistent_version_separator:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: use same version number separators '_' or '\.'; as in 'major\[\.minor\[\.subminor\]\]'
  SFINAE: SFINAE_Suppress
  Text: use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
warn_expected_qualified_after_typename:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: expected a qualified name after 'typename'
  SFINAE: SFINAE_Suppress
  Text: expected a qualified name after 'typename'
warn_expecting_lock_held_on_loop:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: expecting (.*) '(.*)' to be held at start of each loop
  SFINAE: SFINAE_Suppress
  Text: expecting %0 '%1' to be held at start of each loop
warn_expecting_locked:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: expecting (.*) '(.*)' to be held at the end of function
  SFINAE: SFINAE_Suppress
  Text: expecting %0 '%1' to be held at the end of function
warn_explicit_instantiation_after_specialization:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: instantiation-after-specialization
  Regex: explicit instantiation of (.*) that occurs after an explicit specialization has no effect
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation of %0 that occurs after an explicit specialization has no effect
warn_explicit_instantiation_inline_0x:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat
  Regex: explicit instantiation cannot be 'inline'
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation cannot be 'inline'
warn_explicit_instantiation_must_be_global_0x:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat
  Regex: explicit instantiation of (.*) must occur at global scope
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation of %0 must occur at global scope
warn_explicit_instantiation_out_of_scope_0x:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat
  Regex: explicit instantiation of (.*) not in a namespace enclosing (.*)
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation of %0 not in a namespace enclosing %1
warn_explicit_instantiation_unqualified_wrong_namespace_0x:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-compat
  Regex: explicit instantiation of (.*) must occur in namespace (.*)
  SFINAE: SFINAE_Suppress
  Text: explicit instantiation of %q0 must occur in namespace %1
warn_ext_int_deprecated:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: deprecated-type
  Regex: '''_ExtInt'' is deprecated; use ''_BitInt'' instead'
  SFINAE: SFINAE_Suppress
  Text: '''_ExtInt'' is deprecated; use ''_BitInt'' instead'
warn_extern_init:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: extern-initializer
  Regex: '''extern'' variable has an initializer'
  SFINAE: SFINAE_Suppress
  Text: '''extern'' variable has an initializer'
warn_extra_semi_after_mem_fn_def:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: extra-semi
  Regex: extra ';' after member function definition
  SFINAE: SFINAE_Suppress
  Text: extra ';' after member function definition
warn_falloff_nonvoid_coroutine:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type
  Regex: non-void coroutine does not return a value
  SFINAE: SFINAE_Suppress
  Text: non-void coroutine does not return a value
warn_falloff_nonvoid_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type
  Regex: non-void function does not return a value
  SFINAE: SFINAE_Suppress
  Text: non-void function does not return a value
warn_falloff_nonvoid_lambda:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type
  Regex: non-void lambda does not return a value
  SFINAE: SFINAE_Suppress
  Text: non-void lambda does not return a value
warn_falloff_noreturn_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-noreturn
  Regex: function declared 'noreturn' should not return
  SFINAE: SFINAE_Suppress
  Text: function declared 'noreturn' should not return
warn_fe_backend_unsupported_fp_exceptions:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: unsupported-floating-point-opt
  Regex: overriding currently unsupported use of floating point exceptions on this target
  SFINAE: SFINAE_Suppress
  Text: overriding currently unsupported use of floating point exceptions on this target
warn_fe_backend_unsupported_fp_rounding:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: unsupported-floating-point-opt
  Regex: overriding currently unsupported rounding mode on this target
  SFINAE: SFINAE_Suppress
  Text: overriding currently unsupported rounding mode on this target
warn_fe_backend_warning_attr:
  ArgsCount: 2
  CategoryName: Backend Issue
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: attribute-warning
  Regex: 'call to (.*) declared with ''warning'' attribute: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'call to %0 declared with ''warning'' attribute: %1'
warn_fe_cc_log_diagnostics_failure:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: 'unable to open CC_LOG_DIAGNOSTICS file: (.*) \(using stderr\)'
  SFINAE: SFINAE_Suppress
  Text: 'unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)'
warn_fe_cc_print_header_failure:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: 'unable to open CC_PRINT_HEADERS file: (.*) \(using stderr\)'
  SFINAE: SFINAE_Suppress
  Text: 'unable to open CC_PRINT_HEADERS file: %0 (using stderr)'
warn_fe_concepts_ts_flag:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: deprecated
  Regex: -fconcepts-ts is deprecated - use '-std=c\+\+20' for Concepts support
  SFINAE: SFINAE_Suppress
  Text: -fconcepts-ts is deprecated - use '-std=c++20' for Concepts support
warn_fe_frame_larger_than:
  ArgsCount: 3
  CategoryName: Backend Issue
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: frame-larger-than
  Regex: stack frame size \((.*)\) exceeds limit \((.*)\) in '(.*)'
  SFINAE: SFINAE_Suppress
  Text: stack frame size (%0) exceeds limit (%1) in '%2'
warn_fe_linking_module:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: linker-warnings
  Regex: 'linking module ''(.*)'': (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'linking module ''%0'': %1'
warn_fe_macro_contains_embedded_newline:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: macro '(.*)' contains embedded newline; text after the newline is ignored
  SFINAE: SFINAE_Suppress
  Text: macro '%0' contains embedded newline; text after the newline is ignored
warn_fe_override_module:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: override-module
  Regex: overriding the module target triple with (.*)
  SFINAE: SFINAE_Suppress
  Text: overriding the module target triple with %0
warn_fe_serialized_diag_failure:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: serialized-diagnostics
  Regex: unable to open file (.*) for serializing diagnostics \((.*)\)
  SFINAE: SFINAE_Suppress
  Text: unable to open file %0 for serializing diagnostics (%1)
warn_fe_serialized_diag_failure_during_finalisation:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: serialized-diagnostics
  Regex: 'Received warning after diagnostic serialization teardown was underway: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'Received warning after diagnostic serialization teardown was underway: %0'
warn_fe_serialized_diag_merge_failure:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: serialized-diagnostics
  Regex: unable to merge a subprocess's serialized diagnostics
  SFINAE: SFINAE_Suppress
  Text: unable to merge a subprocess's serialized diagnostics
warn_fe_unable_to_open_stats_file:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: unable-to-open-stats-file
  Regex: 'unable to open statistics output file ''(.*)'': ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'unable to open statistics output file ''%0'': ''%1'''
warn_field_is_uninit:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: uninitialized
  Regex: field (.*) is uninitialized when used here
  SFINAE: SFINAE_Suppress
  Text: field %0 is uninitialized when used here
warn_final_dtor_non_final_class:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: final-dtor-non-final-class
  Regex: class with destructor marked '(?:final|sealed)' cannot be inherited from
  SFINAE: SFINAE_Suppress
  Text: class with destructor marked '%select{final|sealed}0' cannot be inherited from
warn_fixedpoint_constant_overflow:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: fixed-point-overflow
  Regex: overflow in expression; result is (.*) with type (.*)
  SFINAE: SFINAE_Suppress
  Text: overflow in expression; result is %0 with type %1
warn_fixit_no_changes:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_NOTE
  Component: Frontend
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: FIX-IT detected errors it could not fix; no output will be generated
  SFINAE: SFINAE_Suppress
  Text: FIX-IT detected errors it could not fix; no output will be generated
warn_flag_enum_constant_out_of_range:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: flag-enum
  Regex: enumeration value (.*) is out of range of flags in enumeration type (.*)
  SFINAE: SFINAE_Suppress
  Text: enumeration value %0 is out of range of flags in enumeration type %1
warn_float_overflow:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: literal-range
  Regex: magnitude of floating-point constant too large for type (.*); maximum is (.*)
  SFINAE: SFINAE_Suppress
  Text: magnitude of floating-point constant too large for type %0; maximum is %1
warn_float_underflow:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: literal-range
  Regex: magnitude of floating-point constant too small for type (.*); minimum is (.*)
  SFINAE: SFINAE_Suppress
  Text: magnitude of floating-point constant too small for type %0; minimum is %1
warn_floatingpoint_eq:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: float-equal
  Regex: comparing floating point with == or != is unsafe
  SFINAE: SFINAE_Suppress
  Text: comparing floating point with == or != is unsafe
warn_for_range_begin_end_types_differ:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pre-c++17-compat
  Regex: '''begin'' and ''end'' returning different types \((.*) and (.*)\) is incompatible with C\+\+ standards before C\+\+17'
  SFINAE: SFINAE_Suppress
  Text: '''begin'' and ''end'' returning different types (%0 and %1) is incompatible with C++ standards before C++17'
warn_for_range_const_ref_binds_temp_built_from_ref:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: range-loop-construct
  Regex: loop variable (.*) (?:of type \$ binds to a temporary constructed from type \$|binds to a temporary constructed from a different type)
  SFINAE: SFINAE_Suppress
  Text: loop variable %0 %diff{of type $ binds to a temporary constructed from type $|binds to a temporary constructed from a different type}1,2
warn_for_range_copy:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: range-loop-construct
  Regex: loop variable (.*) creates a copy from type (.*)
  SFINAE: SFINAE_Suppress
  Text: loop variable %0 creates a copy from type %1
warn_for_range_ref_binds_ret_temp:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: range-loop-bind-reference
  Regex: loop variable (.*) binds to a temporary value produced by a range of type (.*)
  SFINAE: SFINAE_Suppress
  Text: loop variable %0 binds to a temporary value produced by a range of type %1
warn_format_P_no_precision:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: using '%P' format specifier without precision
  SFINAE: SFINAE_Suppress
  Text: using '%%P' format specifier without precision
warn_format_argument_needs_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: (?:values of type|enum values with underlying type) '(.*)' should not be used as format arguments; add an explicit cast to (.*) instead
  SFINAE: SFINAE_Suppress
  Text: '%select{values of type|enum values with underlying type}2 ''%0'' should not be used as format arguments; add an explicit cast to %1 instead'
warn_format_argument_needs_cast_pedantic:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: format-pedantic
  Regex: (?:values of type|enum values with underlying type) '(.*)' should not be used as format arguments; add an explicit cast to (.*) instead
  SFINAE: SFINAE_Suppress
  Text: '%select{values of type|enum values with underlying type}2 ''%0'' should not be used as format arguments; add an explicit cast to %1 instead'
warn_format_bool_as_character:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: using '(.*)' format specifier, but argument has boolean value
  SFINAE: SFINAE_Suppress
  Text: using '%0' format specifier, but argument has boolean value
warn_format_conversion_argument_type_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: format specifies type (.*) but the argument has (?:type|underlying type) (.*)
  SFINAE: SFINAE_Suppress
  Text: format specifies type %0 but the argument has %select{type|underlying type}2 %1
warn_format_conversion_argument_type_mismatch_confusion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: format-type-confusion
  Regex: format specifies type (.*) but the argument has (?:type|underlying type) (.*)
  SFINAE: SFINAE_Suppress
  Text: format specifies type %0 but the argument has %select{type|underlying type}2 %1
warn_format_conversion_argument_type_mismatch_pedantic:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: format-pedantic
  Regex: format specifies type (.*) but the argument has (?:type|underlying type) (.*)
  SFINAE: SFINAE_Suppress
  Text: format specifies type %0 but the argument has %select{type|underlying type}2 %1
warn_format_invalid_annotation:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: using '(.*)' format specifier annotation outside of os_log\(\)/os_trace\(\)
  SFINAE: SFINAE_Suppress
  Text: using '%0' format specifier annotation outside of os_log()/os_trace()
warn_format_invalid_conversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format-invalid-specifier
  Regex: invalid conversion specifier '(.*)'
  SFINAE: SFINAE_Suppress
  Text: invalid conversion specifier '%0'
warn_format_invalid_positional_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: invalid position specified for (?:field width|field precision)
  SFINAE: SFINAE_Suppress
  Text: invalid position specified for %select{field width|field precision}0
warn_format_mix_positional_nonpositional_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: cannot mix positional and non-positional arguments in format string
  SFINAE: SFINAE_Suppress
  Text: cannot mix positional and non-positional arguments in format string
warn_format_non_standard:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: format-non-iso
  Regex: '''(.*)'' (?:length modifier|conversion specifier) is not supported by ISO C'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' %select{length modifier|conversion specifier}1 is not supported by ISO C'
warn_format_non_standard_conversion_spec:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: format-non-iso
  Regex: using length modifier '(.*)' with conversion specifier '(.*)' is not supported by ISO C
  SFINAE: SFINAE_Suppress
  Text: using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
warn_format_non_standard_positional_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: format-non-iso
  Regex: positional arguments are not supported by ISO C
  SFINAE: SFINAE_Suppress
  Text: positional arguments are not supported by ISO C
warn_format_nonliteral:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: format-nonliteral
  Regex: format string is not a string literal
  SFINAE: SFINAE_Suppress
  Text: format string is not a string literal
warn_format_nonliteral_noargs:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format-security
  Regex: format string is not a string literal \(potentially insecure\)
  SFINAE: SFINAE_Suppress
  Text: format string is not a string literal (potentially insecure)
warn_format_nonsensical_length:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: length modifier '(.*)' results in undefined behavior or no effect with '(.*)' conversion specifier
  SFINAE: SFINAE_Suppress
  Text: length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
warn_format_string_is_wide_literal:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: format string should not be a wide string
  SFINAE: SFINAE_Suppress
  Text: format string should not be a wide string
warn_format_zero_positional_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: position arguments in format strings start counting at 1 \(not 0\)
  SFINAE: SFINAE_Suppress
  Text: position arguments in format strings start counting at 1 (not 0)
warn_fortify_scanf_overflow:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: fortify-source
  Regex: '''(.*)'' may overflow; destination buffer in argument (.*) has size (.*), but the corresponding specifier may require size (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' may overflow; destination buffer in argument %1 has size %2, but the corresponding specifier may require size %3'
warn_fortify_source_format_overflow:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: fortify-source
  Regex: '''(.*)'' will always overflow; destination buffer has size (.*), but format string expands to at least (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' will always overflow; destination buffer has size %1, but format string expands to at least %2'
warn_fortify_source_overflow:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: fortify-source
  Regex: '''(.*)'' will always overflow; destination buffer has size (.*), but size argument is (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' will always overflow; destination buffer has size %1, but size argument is %2'
warn_fortify_source_size_mismatch:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: fortify-source
  Regex: '''(.*)'' size argument is too large; destination buffer has size (.*), but size argument is (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' size argument is too large; destination buffer has size %1, but size argument is %2'
warn_fortify_strlen_overflow:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: fortify-source
  Regex: '''(.*)'' will always overflow; destination buffer has size (.*), but the source string has length (.*) \(including NUL byte\)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' will always overflow; destination buffer has size %1, but the source string has length %2 (including NUL byte)'
warn_forward_class_redefinition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-forward-class-redefinition
  Regex: redefinition of forward class (.*) of a typedef name of an object type is ignored
  SFINAE: SFINAE_Suppress
  Text: redefinition of forward class %0 of a typedef name of an object type is ignored
warn_four_char_character_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: four-char-constants
  Regex: multi-character character constant
  SFINAE: SFINAE_Suppress
  Text: multi-character character constant
warn_frame_address:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: frame-address
  Regex: calling '(.*)' with a nonzero argument is unsafe
  SFINAE: SFINAE_Suppress
  Text: calling '%0' with a nonzero argument is unsafe
warn_framework_include_private_from_public:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: framework-include-private-from-public
  Regex: public framework header includes private framework header '(.*)'
  SFINAE: SFINAE_Suppress
  Text: public framework header includes private framework header '%0'
warn_free_nonheap_object:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: free-nonheap-object
  Regex: 'attempt to call (.*) on non-heap (?:object (.*)|object: block expression|object: lambda-to-function-pointer conversion)'
  SFINAE: SFINAE_Suppress
  Text: 'attempt to call %0 on non-heap %select{object %2|object: block expression|object: lambda-to-function-pointer conversion}1'
warn_fun_excludes_mutex:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: cannot call function '(.*)' while (.*) '(.*)' is held
  SFINAE: SFINAE_Suppress
  Text: cannot call function '%1' while %0 '%2' is held
warn_fun_requires_lock:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: calling function (.*) requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
warn_fun_requires_lock_precise:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-precise
  Regex: calling function (.*) requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
warn_fun_requires_negative_cap:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: calling function (.*) requires negative capability '(.*)'
  SFINAE: SFINAE_Suppress
  Text: calling function %0 requires negative capability '%1'
warn_func_template_missing:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: undefined-func-template
  Regex: instantiation of function (.*) required here, but no definition is available
  SFINAE: SFINAE_Suppress
  Text: instantiation of function %q0 required here, but no definition is available
warn_function_def_in_objc_container:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: function-def-in-objc-container
  Regex: function definition inside an Objective-C container is deprecated
  SFINAE: SFINAE_Suppress
  Text: function definition inside an Objective-C container is deprecated
warn_gc_attribute_weak_on_local:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: Objective-C GC does not allow weak variables on the stack
  SFINAE: SFINAE_Suppress
  Text: Objective-C GC does not allow weak variables on the stack
warn_gcc_attribute_location:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: GCC does not allow an attribute in this position on a function declaration
  SFINAE: SFINAE_Suppress
  Text: GCC does not allow an attribute in this position on a function declaration
warn_gcc_ignores_type_attr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: GCC does not allow the (.*) attribute to be written on a type
  SFINAE: SFINAE_Suppress
  Text: GCC does not allow the %0 attribute to be written on a type
warn_gcc_variable_decl_in_for_loop:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: GCC does not allow variable declarations in for loop initializers before C99
  SFINAE: SFINAE_Suppress
  Text: GCC does not allow variable declarations in for loop initializers before C99
warn_global_constructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: global-constructors
  Regex: declaration requires a global constructor
  SFINAE: SFINAE_Suppress
  Text: declaration requires a global constructor
warn_global_destructor:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: global-constructors
  Regex: declaration requires a global destructor
  SFINAE: SFINAE_Suppress
  Text: declaration requires a global destructor
warn_gnu_inline_attribute_requires_inline:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''gnu_inline'' attribute requires function to be marked ''inline'', attribute ignored'
  SFINAE: SFINAE_Suppress
  Text: '''gnu_inline'' attribute requires function to be marked ''inline'', attribute ignored'
warn_gnu_inline_cplusplus_without_extern:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gnu-inline-cpp-without-extern
  Regex: '''gnu_inline'' attribute without ''extern'' in C\+\+ treated as externally available, this changed in Clang 10'
  SFINAE: SFINAE_Suppress
  Text: '''gnu_inline'' attribute without ''extern'' in C++ treated as externally available, this changed in Clang 10'
warn_gnu_null_ptr_arith:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: null-pointer-arithmetic
  Regex: arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
  SFINAE: SFINAE_Suppress
  Text: arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
warn_guarded_pass_by_reference:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-reference
  Regex: passing variable (.*) by reference requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
warn_has_warning_invalid_option:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: malformed-warning-check
  Regex: __has_warning expected option name \(e\.g\. "-Wundef"\)
  SFINAE: SFINAE_Suppress
  Text: __has_warning expected option name (e.g. "-Wundef")
warn_header_guard:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: header-guard
  Regex: '(.*) is used as a header guard here, followed by #define of a different macro'
  SFINAE: SFINAE_Suppress
  Text: '%0 is used as a header guard here, followed by #define of a different macro'
warn_iboutlet_object_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-iboutlet
  Regex: (?:instance variable|property) with (.*) attribute must be an object type \(invalid (.*)\)
  SFINAE: SFINAE_Suppress
  Text: '%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)'
warn_iboutletcollection_property_assign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-iboutlet
  Regex: IBOutletCollection properties should be copy/strong and not assign
  SFINAE: SFINAE_Suppress
  Text: IBOutletCollection properties should be copy/strong and not assign
warn_identity_field_assign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: self-assign-field
  Regex: assigning (?:field|instance variable) to itself
  SFINAE: SFINAE_Suppress
  Text: assigning %select{field|instance variable}0 to itself
warn_ignored_clang_option:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: the flag '(.*)' has been deprecated and will be ignored
  SFINAE: SFINAE_Suppress
  Text: the flag '%0' has been deprecated and will be ignored
warn_ignored_gcc_optimization:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: ignored-optimization-argument
  Regex: optimization flag '(.*)' is not supported
  SFINAE: SFINAE_Suppress
  Text: optimization flag '%0' is not supported
warn_ignored_hip_only_option:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: hip-only
  Regex: '''(.*)'' is ignored since it is only supported for HIP'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is ignored since it is only supported for HIP'
warn_ignored_ms_inheritance:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: inheritance model ignored on (?:primary template|partial specialization)
  SFINAE: SFINAE_Suppress
  Text: inheritance model ignored on %select{primary template|partial specialization}0
warn_ignored_objc_externally_retained:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''objc_externally_retained'' can only be applied to local variables (?:of retainable type|with strong ownership)'
  SFINAE: SFINAE_Suppress
  Text: '''objc_externally_retained'' can only be applied to local variables %select{of retainable type|with strong ownership}0'
warn_ignoring_fdiscard_for_bitcode:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: ignoring -fdiscard-value-names for LLVM Bitcode
  SFINAE: SFINAE_Suppress
  Text: ignoring -fdiscard-value-names for LLVM Bitcode
warn_ignoring_ftabstop_value:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: ignoring invalid -ftabstop value '(.*)', using default value (.*)
  SFINAE: SFINAE_Suppress
  Text: ignoring invalid -ftabstop value '%0', using default value %1
warn_ignoring_verify_debuginfo_preserve_export:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unused-command-line-argument
  Regex: ignoring -fverify-debuginfo-preserve-export=(.*) because -fverify-debuginfo-preserve wasn't enabled
  SFINAE: SFINAE_Suppress
  Text: ignoring -fverify-debuginfo-preserve-export=%0 because -fverify-debuginfo-preserve wasn't enabled
warn_impcast_bitfield_precision_constant:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: bitfield-constant-conversion
  Regex: implicit truncation from (.*) to bit-field changes value from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit truncation from %2 to bit-field changes value from %0 to %1
warn_impcast_bool_to_null_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: bool-conversion
  Regex: initialization of pointer of type (.*) to null from a constant boolean expression
  SFINAE: SFINAE_Suppress
  Text: initialization of pointer of type %0 to null from a constant boolean expression
warn_impcast_complex_scalar:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: conversion
  Regex: 'implicit conversion discards imaginary component: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion discards imaginary component: %0 to %1'
warn_impcast_constant_value_to_objc_bool:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-bool-constant-conversion
  Regex: implicit conversion from constant value (.*) to 'BOOL'; the only well defined values for 'BOOL' are YES and NO
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from constant value %0 to 'BOOL'; the only well defined values for 'BOOL' are YES and NO
warn_impcast_different_enum_types:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: enum-conversion
  Regex: implicit conversion from enumeration type (.*) to different enumeration type (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from enumeration type %0 to different enumeration type %1
warn_impcast_double_promotion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: double-promotion
  Regex: 'implicit conversion increases floating-point precision: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion increases floating-point precision: %0 to %1'
warn_impcast_fixed_point_range:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: implicit-fixed-point-conversion
  Regex: implicit conversion from (.*) cannot fit within the range of values for (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from %0 cannot fit within the range of values for %1
warn_impcast_float_integer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: float-conversion
  Regex: 'implicit conversion turns floating-point number into integer: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion turns floating-point number into integer: %0 to %1'
warn_impcast_float_precision:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-float-conversion
  Regex: 'implicit conversion loses floating-point precision: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion loses floating-point precision: %0 to %1'
warn_impcast_float_result_precision:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-float-conversion
  Regex: 'implicit conversion when assigning computation result loses floating-point precision: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion when assigning computation result loses floating-point precision: %0 to %1'
warn_impcast_float_to_integer:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: float-overflow-conversion
  Regex: implicit conversion from (.*) to (.*) changes value from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from %0 to %1 changes value from %2 to %3
warn_impcast_float_to_integer_out_of_range:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: float-overflow-conversion
  Regex: implicit conversion of out of range value from (.*) to (.*) is undefined
  SFINAE: SFINAE_Suppress
  Text: implicit conversion of out of range value from %0 to %1 is undefined
warn_impcast_float_to_integer_zero:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: float-zero-conversion
  Regex: implicit conversion from (.*) to (.*) changes non-zero value from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from %0 to %1 changes non-zero value from %2 to %3
warn_impcast_float_to_objc_signed_char_bool:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-signed-char-bool-implicit-float-conversion
  Regex: implicit conversion from floating-point type (.*) to 'BOOL'
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from floating-point type %0 to 'BOOL'
warn_impcast_floating_point_to_bool:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: implicit-conversion-floating-point-to-bool
  Regex: 'implicit conversion turns floating-point number into bool: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion turns floating-point number into bool: %0 to %1'
warn_impcast_high_order_zero_bits:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-int-conversion
  Regex: higher order bits are zeroes after implicit conversion
  SFINAE: SFINAE_Suppress
  Text: higher order bits are zeroes after implicit conversion
warn_impcast_int_to_objc_signed_char_bool:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: objc-signed-char-bool-implicit-int-conversion
  Regex: implicit conversion from integral type (.*) to 'BOOL'
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from integral type %0 to 'BOOL'
warn_impcast_integer_64_32:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: shorten-64-to-32
  Regex: 'implicit conversion loses integer precision: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion loses integer precision: %0 to %1'
warn_impcast_integer_float_precision:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-int-float-conversion
  Regex: implicit conversion from (.*) to (.*) may lose precision
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from %0 to %1 may lose precision
warn_impcast_integer_float_precision_constant:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: implicit-const-int-float-conversion
  Regex: implicit conversion from (.*) to (.*) changes value from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from %2 to %3 changes value from %0 to %1
warn_impcast_integer_precision:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-int-conversion
  Regex: 'implicit conversion loses integer precision: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion loses integer precision: %0 to %1'
warn_impcast_integer_precision_constant:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: constant-conversion
  Regex: implicit conversion from (.*) to (.*) changes value from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from %2 to %3 changes value from %0 to %1
warn_impcast_integer_sign:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: sign-conversion
  Regex: 'implicit conversion changes signedness: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion changes signedness: %0 to %1'
warn_impcast_integer_sign_conditional:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: sign-conversion
  Regex: 'operand of \? changes signedness: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'operand of ? changes signedness: %0 to %1'
warn_impcast_literal_float_to_integer:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: literal-conversion
  Regex: implicit conversion from (.*) to (.*) changes value from (.*) to (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from %0 to %1 changes value from %2 to %3
warn_impcast_literal_float_to_integer_out_of_range:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: literal-conversion
  Regex: implicit conversion of out of range value from (.*) to (.*) is undefined
  SFINAE: SFINAE_Suppress
  Text: implicit conversion of out of range value from %0 to %1 is undefined
warn_impcast_nonnegative_result:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: sign-conversion
  Regex: the resulting value is always non-negative after implicit conversion
  SFINAE: SFINAE_Suppress
  Text: the resulting value is always non-negative after implicit conversion
warn_impcast_null_pointer_to_integer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: null-conversion
  Regex: implicit conversion of (?:NULL|nullptr) constant to (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion of %select{NULL|nullptr}0 constant to %1
warn_impcast_objective_c_literal_to_bool:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-literal-conversion
  Regex: implicit boolean conversion of Objective-C object literal always evaluates to true
  SFINAE: SFINAE_Suppress
  Text: implicit boolean conversion of Objective-C object literal always evaluates to true
warn_impcast_pointer_to_bool:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-bool-conversion
  Regex: address of(?:| function| array) '(.*)' will always evaluate to 'true'
  SFINAE: SFINAE_Suppress
  Text: address of%select{| function| array}0 '%1' will always evaluate to 'true'
warn_impcast_string_literal_to_bool:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: string-conversion
  Regex: 'implicit conversion turns string literal into bool: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion turns string literal into bool: %0 to %1'
warn_impcast_vector_scalar:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: conversion
  Regex: 'implicit conversion turns vector to scalar: (.*) to (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'implicit conversion turns vector to scalar: %0 to %1'
warn_impl_required_for_class_property:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-implementation
  Regex: class property (.*) requires method (.*) to be defined - use @dynamic or provide a method implementation in this class implementation
  SFINAE: SFINAE_Suppress
  Text: class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
warn_impl_required_in_category_for_class_property:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-implementation
  Regex: class property (.*) requires method (.*) to be defined - use @dynamic or provide a method implementation in this category
  SFINAE: SFINAE_Suppress
  Text: class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
warn_implements_nscopying:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: default assign attribute on property (.*) which implements NSCopying protocol is not appropriate with -fobjc-gc\[-only\]
  SFINAE: SFINAE_Suppress
  Text: default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
warn_implicit_atomic_property:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-atomic-properties
  Regex: property is assumed atomic by default
  SFINAE: SFINAE_Suppress
  Text: property is assumed atomic by default
warn_implicit_decl_no_jmp_buf:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incomplete-setjmp-declaration
  Regex: declaration of built-in function '(.*)' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp\.h>\.
  SFINAE: SFINAE_Suppress
  Text: declaration of built-in function '%0' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>.
warn_implicit_decl_requires_sysheader:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: builtin-requires-header
  Regex: declaration of built-in function '(.*)' requires inclusion of the header <(.*)>
  SFINAE: SFINAE_Suppress
  Text: declaration of built-in function '%1' requires inclusion of the header <%0>
warn_implicit_function_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-function-declaration
  Regex: implicit declaration of function (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit declaration of function %0
warn_implicitly_retains_self:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-retain-self
  Regex: block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
  SFINAE: SFINAE_Suppress
  Text: block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
warn_import_on_definition:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: import (?:module|name) cannot be applied to a function with a definition
  SFINAE: SFINAE_Suppress
  Text: import %select{module|name}0 cannot be applied to a function with a definition
warn_inaccessible_base_class:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: inaccessible-base
  Regex: direct base (.*) is inaccessible due to ambiguity:(.*)
  SFINAE: SFINAE_Suppress
  Text: direct base %0 is inaccessible due to ambiguity:%1
warn_incompatible_analyzer_plugin_api:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: analyzer-incompatible-plugin
  Regex: checker plugin '(.*)' is not compatible with this version of the analyzer
  SFINAE: SFINAE_Suppress
  Text: checker plugin '%0' is not compatible with this version of the analyzer
warn_incompatible_branch_protection_option:
  ArgsCount: 1
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: branch-protection
  Regex: '''-mbranch-protection='' option is incompatible with the ''(.*)'' architecture'
  SFINAE: SFINAE_Suppress
  Text: '''-mbranch-protection='' option is incompatible with the ''%0'' architecture'
warn_incompatible_exception_specs:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-exception-spec
  Regex: target exception specification is not superset of source
  SFINAE: SFINAE_Suppress
  Text: target exception specification is not superset of source
warn_incompatible_qualified_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: (?:(?:assigning to \$ from incompatible type \$|assigning to type from incompatible type)|(?:passing \$ to parameter of incompatible type \$|passing type to parameter of incompatible type)|(?:returning \$ from a function with incompatible result type \$|returning type from a function with incompatible result type)|(?:converting \$ to incompatible type \$|converting type to incompatible type)|(?:initializing \$ with an expression of incompatible type \$|initializing type with an expression of incompatible type)|(?:sending \$ to parameter of incompatible type \$|sending type to parameter of incompatible type)|(?:casting \$ to incompatible type \$|casting type to incompatible type))
  SFINAE: SFINAE_Suppress
  Text: '%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2'
warn_incompatible_sysroot:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: incompatible-sysroot
  Regex: using sysroot for '(.*)' but targeting '(.*)'
  SFINAE: SFINAE_Suppress
  Text: using sysroot for '%0' but targeting '%1'
warn_incompatible_vectors:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: vector-conversion
  Regex: incompatible vector types (?:(?:assigning to \$ from \$|assigning to different types)|(?:passing \$ to parameter of type \$|passing to parameter of different type)|(?:returning \$ from a function with result type \$|returning from function with different return type)|(?:converting \$ to type \$|converting between types)|(?:initializing \$ with an expression of type \$|initializing with expression of different type)|(?:sending \$ to parameter of type \$|sending to parameter of different type)|(?:casting \$ to type \$|casting between types))
  SFINAE: SFINAE_Suppress
  Text: incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
warn_incomplete_encoded_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: encode-type
  Regex: encoding of (.*) type is incomplete because (.*) component has unknown encoding
  SFINAE: SFINAE_Suppress
  Text: encoding of %0 type is incomplete because %1 component has unknown encoding
warn_inconsistent_destructor_marked_not_override_overriding:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: inconsistent-missing-destructor-override
  Regex: (.*) overrides a destructor but is not marked 'override'
  SFINAE: SFINAE_Suppress
  Text: '%sub{warn_destructor_marked_not_override_overriding}0'
warn_inconsistent_function_marked_not_override_overriding:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: inconsistent-missing-override
  Regex: (.*) overrides a member function but is not marked 'override'
  SFINAE: SFINAE_Suppress
  Text: '%sub{warn_function_marked_not_override_overriding}0'
warn_increment_bool:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-increment-bool
  Regex: incrementing expression of type bool is deprecated and incompatible with C\+\+17
  SFINAE: SFINAE_Suppress
  Text: incrementing expression of type bool is deprecated and incompatible with C++17
warn_independentclass_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: IndependentClass-attribute
  Regex: '''objc_independent_class'' attribute may be put on a typedef only; attribute is ignored'
  SFINAE: SFINAE_Suppress
  Text: '''objc_independent_class'' attribute may be put on a typedef only; attribute is ignored'
warn_indirection_through_null:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: null-dereference
  Regex: indirection of non-volatile null pointer will be deleted, not trap
  SFINAE: SFINAE_Suppress
  Text: indirection of non-volatile null pointer will be deleted, not trap
warn_infinite_recursive_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: infinite-recursion
  Regex: all paths through this function will call itself
  SFINAE: SFINAE_Suppress
  Text: all paths through this function will call itself
warn_init_list_constant_narrowing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-narrowing
  Regex: constant expression evaluates to (.*) which cannot be narrowed to type (.*) in C\+\+11
  SFINAE: SFINAE_Suppress
  Text: constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
warn_init_list_type_narrowing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-narrowing
  Regex: type (.*) cannot be narrowed to (.*) in initializer list in C\+\+11
  SFINAE: SFINAE_Suppress
  Text: type %0 cannot be narrowed to %1 in initializer list in C++11
warn_init_list_variable_narrowing:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++11-narrowing
  Regex: non-constant-expression cannot be narrowed from type (.*) to (.*) in initializer list in C\+\+11
  SFINAE: SFINAE_Suppress
  Text: non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
warn_init_ptr_member_to_parameter_addr:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling-field
  Regex: initializing pointer member (.*) with the stack address of (?:variable|parameter) (.*)
  SFINAE: SFINAE_Suppress
  Text: initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
warn_initializer_out_of_order:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: reorder-ctor
  Regex: (?:field|base class) (.*) will be initialized after (?:field|base) (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3'
warn_initializer_overrides:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: initializer-overrides
  Regex: initializer (?:partially |)overrides prior initialization of this subobject
  SFINAE: SFINAE_Suppress
  Text: initializer %select{partially |}0overrides prior initialization of this subobject
warn_inline_namespace_reopened_noninline:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: inline-namespace-reopened-noninline
  Regex: inline namespace reopened as a non-inline namespace
  SFINAE: SFINAE_Suppress
  Text: inline namespace reopened as a non-inline namespace
warn_inst_method_not_found:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-method-access
  Regex: instance method (.*) not found \(return type defaults to 'id'\)
  SFINAE: SFINAE_Suppress
  Text: instance method %objcinstance0 not found (return type defaults to 'id')
warn_instance_method_not_found_with_typo:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-method-access
  Regex: instance method (.*) not found \(return type defaults to 'id'\); did you mean (.*)\?
  SFINAE: SFINAE_Suppress
  Text: instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
warn_instance_method_on_class_found:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-method-access
  Regex: instance method (.*) found instead of class method (.*)
  SFINAE: SFINAE_Suppress
  Text: instance method %0 found instead of class method %1
warn_int_to_pointer_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: int-to-pointer-cast
  Regex: cast to (.*) from smaller integer type (.*)
  SFINAE: SFINAE_Suppress
  Text: cast to %1 from smaller integer type %0
warn_int_to_void_pointer_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: int-to-void-pointer-cast
  Regex: cast to (.*) from smaller integer type (.*)
  SFINAE: SFINAE_Suppress
  Text: cast to %1 from smaller integer type %0
warn_integer_constant_overflow:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: integer-overflow
  Regex: overflow in expression; result is (.*) with type (.*)
  SFINAE: SFINAE_Suppress
  Text: overflow in expression; result is %0 with type %1
warn_integer_constants_in_conditional_always_true:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-constant-compare
  Regex: converting the result of '\?:' with integer constants to a boolean always evaluates to 'true'
  SFINAE: SFINAE_Suppress
  Text: converting the result of '?:' with integer constants to a boolean always evaluates to 'true'
warn_internal_linkage_local_storage:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''internal_linkage'' attribute on a non-static local variable is ignored'
  SFINAE: SFINAE_Suppress
  Text: '''internal_linkage'' attribute on a non-static local variable is ignored'
warn_interrupt_attribute_invalid:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (?:MIPS|MSP430|RISC-V) 'interrupt' attribute only applies to functions that have (?:no parameters|a 'void' return type)
  SFINAE: SFINAE_Suppress
  Text: '%select{MIPS|MSP430|RISC-V}0 ''interrupt'' attribute only applies to functions that have %select{no parameters|a ''void'' return type}1'
warn_invalid_asm_cast_lvalue:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: 'invalid use of a cast in an inline asm context requiring an lvalue: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future'
  SFINAE: SFINAE_Suppress
  Text: 'invalid use of a cast in an inline asm context requiring an lvalue: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future'
warn_invalid_initializer_from_system_header:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-initializer-from-system-header
  Regex: invalid constructor from class in system header, should not be explicit
  SFINAE: SFINAE_Suppress
  Text: invalid constructor from class in system header, should not be explicit
warn_invalid_ios_deployment_target:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Error
  Group: invalid-ios-deployment-target
  Regex: invalid iOS deployment version '(.*)', iOS 10 is the maximum deployment target for 32-bit targets
  SFINAE: SFINAE_Suppress
  Text: invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
warn_is_constant_evaluated_always_true_constexpr:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: constant-evaluated
  Regex: '''(.*)'' will always evaluate to ''true'' in a manifestly constant-evaluated expression'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' will always evaluate to ''true'' in a manifestly constant-evaluated expression'
warn_ivar_use_hidden:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: shadow-ivar
  Regex: local declaration of (.*) hides instance variable
  SFINAE: SFINAE_Suppress
  Text: local declaration of %0 hides instance variable
warn_ivars_in_interface:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: objc-interface-ivars
  Regex: declaration of instance variables in the interface is deprecated
  SFINAE: SFINAE_Suppress
  Text: declaration of instance variables in the interface is deprecated
warn_jump_out_of_seh_finally:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: jump-seh-finally
  Regex: jump out of __finally block has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: jump out of __finally block has undefined behavior
warn_kern_is_inline:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: cuda-compat
  Regex: ignored 'inline' attribute on kernel function (.*)
  SFINAE: SFINAE_Suppress
  Text: ignored 'inline' attribute on kernel function %0
warn_kern_is_method:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: cuda-compat
  Regex: kernel function (.*) is a member function; this may not be accepted by nvcc
  SFINAE: SFINAE_Suppress
  Text: kernel function %0 is a member function; this may not be accepted by nvcc
warn_left_shift_always:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-constant-compare
  Regex: converting the result of '<<' to a boolean always evaluates to (?:false|true)
  SFINAE: SFINAE_Suppress
  Text: converting the result of '<<' to a boolean always evaluates to %select{false|true}0
warn_left_shift_in_bool_context:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: int-in-bool-context
  Regex: converting the result of '<<' to a boolean; did you mean '\((.*)\) != 0'\?
  SFINAE: SFINAE_Suppress
  Text: converting the result of '<<' to a boolean; did you mean '(%0) != 0'?
warn_lock_exclusive_and_shared:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (.*) '(.*)' is acquired exclusively and shared in the same scope
  SFINAE: SFINAE_Suppress
  Text: '%0 ''%1'' is acquired exclusively and shared in the same scope'
warn_lock_some_predecessors:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (.*) '(.*)' is not held on every path through here
  SFINAE: SFINAE_Suppress
  Text: '%0 ''%1'' is not held on every path through here'
warn_logical_and_in_logical_or:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: logical-op-parentheses
  Regex: '''&&'' within ''\|\|'''
  SFINAE: SFINAE_Suppress
  Text: '''&&'' within ''||'''
warn_logical_instead_of_bitwise:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: constant-logical-operand
  Regex: use of logical '(.*)' with constant operand
  SFINAE: SFINAE_Suppress
  Text: use of logical '%0' with constant operand
warn_logical_not_on_lhs_of_check:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: logical-not-parentheses
  Regex: logical not is only applied to the left hand side of this (?:comparison|bitwise operator)
  SFINAE: SFINAE_Suppress
  Text: logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
warn_loop_ctrl_binds_to_inner:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gcc-compat
  Regex: '''(.*)'' is bound to current loop, GCC binds it to the enclosing loop'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is bound to current loop, GCC binds it to the enclosing loop'
warn_loop_state_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: state of variable '(.*)' must match at the entry and exit of loop
  SFINAE: SFINAE_Suppress
  Text: state of variable '%0' must match at the entry and exit of loop
warn_main_one_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: main
  Regex: only one parameter on 'main' declaration
  SFINAE: SFINAE_Suppress
  Text: only one parameter on 'main' declaration
warn_main_redefined:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: main
  Regex: variable named 'main' with external linkage has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: variable named 'main' with external linkage has undefined behavior
warn_main_returns_bool_literal:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: main
  Regex: bool literal returned from 'main'
  SFINAE: SFINAE_Suppress
  Text: bool literal returned from 'main'
warn_max_tokens:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: max-tokens
  Regex: the number of preprocessor source tokens \((.*)\) exceeds this token limit \((.*)\)
  SFINAE: SFINAE_Suppress
  Text: the number of preprocessor source tokens (%0) exceeds this token limit (%1)
warn_max_tokens_total:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: max-tokens
  Regex: the total number of preprocessor source tokens \((.*)\) exceeds the token limit \((.*)\)
  SFINAE: SFINAE_Suppress
  Text: the total number of preprocessor source tokens (%0) exceeds the token limit (%1)
warn_max_unsigned_zero:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: max-unsigned-zero
  Regex: taking the max of (?:a value and unsigned zero|unsigned zero and a value) is always equal to the other value
  SFINAE: SFINAE_Suppress
  Text: taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
warn_maybe_capture_bad_target_this_ptr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: gpu-maybe-wrong-side
  Regex: capture host side class data member by this pointer in device or host device lambda function may result in invalid memory access if this pointer is not accessible on device side
  SFINAE: SFINAE_Suppress
  Text: capture host side class data member by this pointer in device or host device lambda function may result in invalid memory access if this pointer is not accessible on device side
warn_maybe_falloff_nonvoid_coroutine:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type
  Regex: non-void coroutine does not return a value in all control paths
  SFINAE: SFINAE_Suppress
  Text: non-void coroutine does not return a value in all control paths
warn_maybe_falloff_nonvoid_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type
  Regex: non-void function does not return a value in all control paths
  SFINAE: SFINAE_Suppress
  Text: non-void function does not return a value in all control paths
warn_maybe_falloff_nonvoid_lambda:
  ArgsCount: 0
  CategoryName: Lambda Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type
  Regex: non-void lambda does not return a value in all control paths
  SFINAE: SFINAE_Suppress
  Text: non-void lambda does not return a value in all control paths
warn_maybe_uninit_var:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: conditional-uninitialized
  Regex: variable (.*) may be uninitialized when (?:used here|captured by block)
  SFINAE: SFINAE_Suppress
  Text: variable %0 may be uninitialized when %select{used here|captured by block}1
warn_maynot_respond:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: (.*) may not respond to (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 may not respond to %1'
warn_member_extra_qualification:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: microsoft-extra-qualification
  Regex: extra qualification on member (.*)
  SFINAE: SFINAE_Suppress
  Text: extra qualification on member %0
warn_memsize_comparison:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: memsize-comparison
  Regex: size argument in (.*) call is a comparison
  SFINAE: SFINAE_Suppress
  Text: size argument in %0 call is a comparison
warn_messaging_unqualified_id:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: objc-messaging-id
  Regex: messaging unqualified id
  SFINAE: SFINAE_Suppress
  Text: messaging unqualified id
warn_method_param_declaration:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: duplicate-method-arg
  Regex: redeclaration of method parameter (.*)
  SFINAE: SFINAE_Suppress
  Text: redeclaration of method parameter %0
warn_method_param_redefinition:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: redefinition of method parameter (.*)
  SFINAE: SFINAE_Suppress
  Text: redefinition of method parameter %0
warn_microsoft_dependent_exists:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: microsoft-exists
  Regex: dependent (?:__if_not_exists|__if_exists) declarations are ignored
  SFINAE: SFINAE_Suppress
  Text: dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
warn_microsoft_qualifiers_ignored:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: qualifiers after comma in declarator list are ignored
  SFINAE: SFINAE_Suppress
  Text: qualifiers after comma in declarator list are ignored
warn_mig_server_routine_does_not_return_kern_return_t:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''mig_server_routine'' attribute only applies to routines that return a kern_return_t'
  SFINAE: SFINAE_Suppress
  Text: '''mig_server_routine'' attribute only applies to routines that return a kern_return_t'
warn_misleading_indentation:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: misleading-indentation
  Regex: misleading indentation; statement is not part of the previous '(?:if|else|for|while)'
  SFINAE: SFINAE_Suppress
  Text: misleading indentation; statement is not part of the previous '%select{if|else|for|while}0'
warn_mismatched_availability:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: availability does not match previous declaration
  SFINAE: SFINAE_Suppress
  Text: availability does not match previous declaration
warn_mismatched_availability_override:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: (?:|overriding )method (?:introduced after|deprecated before|obsoleted before) (?:the protocol method it implements|overridden method) on (.*) \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: '%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)'
warn_mismatched_availability_override_unavail:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: availability
  Regex: (?:|overriding )method cannot be unavailable on (.*) when (?:the protocol method it implements|its overridden method) is available
  SFINAE: SFINAE_Suppress
  Text: '%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available'
warn_mismatched_delete_new:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: mismatched-new-delete
  Regex: '''delete(?:|\[\])'' applied to a pointer that was allocated with ''new(?:\[\]|)''; did you mean ''delete(?:\[\]|)''\?'
  SFINAE: SFINAE_Suppress
  Text: '''delete%select{|[]}0'' applied to a pointer that was allocated with ''new%select{[]|}0''; did you mean ''delete%select{[]|}0''?'
warn_mismatched_import:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: import (?:module|name) \((.*)\) does not match the import (?:module|name) \((.*)\) of the previous declaration
  SFINAE: SFINAE_Suppress
  Text: import %select{module|name}0 (%1) does not match the import %select{module|name}0 (%2) of the previous declaration
warn_mismatched_nullability_attr:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nullability
  Regex: nullability specifier (.*) conflicts with existing specifier (.*)
  SFINAE: SFINAE_Suppress
  Text: nullability specifier %0 conflicts with existing specifier %1
warn_mismatched_section:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: section
  Regex: (?:codeseg|section) does not match previous declaration
  SFINAE: SFINAE_Suppress
  Text: '%select{codeseg|section}0 does not match previous declaration'
warn_misplaced_ellipsis_vararg:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ambiguous-ellipsis
  Regex: '''\.\.\.'' in this location creates a C-style varargs function(?:, not a function parameter pack|)'
  SFINAE: SFINAE_Suppress
  Text: '''...'' in this location creates a C-style varargs function%select{, not a function parameter pack|}0'
warn_missing_braces:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: missing-braces
  Regex: suggest braces around initialization of subobject
  SFINAE: SFINAE_Suppress
  Text: suggest braces around initialization of subobject
warn_missing_case:
  ArgsCount: 10
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: switch
  Regex: '(?:enumeration value (.*) not handled in switch|enumeration values (.*) and (.*) not handled in switch|enumeration values (.*), (.*), and (.*) not handled in switch|(.*) enumeration values not handled in switch: (.*), (.*), (.*)\.\.\.)'
  SFINAE: SFINAE_Suppress
  Text: '%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0'
warn_missing_case_for_condition:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: no case matching constant switch condition '(.*)'
  SFINAE: SFINAE_Suppress
  Text: no case matching constant switch condition '%0'
warn_missing_dependent_template_keyword:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_EXTENSION
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: use 'template' keyword to treat '(.*)' as a dependent template name
  SFINAE: SFINAE_Suppress
  Text: use 'template' keyword to treat '%0' as a dependent template name
warn_missing_explicit_synthesis:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: objc-missing-property-synthesis
  Regex: auto property synthesis is synthesizing property not explicitly synthesized
  SFINAE: SFINAE_Suppress
  Text: auto property synthesis is synthesizing property not explicitly synthesized
warn_missing_field_initializers:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: missing-field-initializers
  Regex: missing field (.*) initializer
  SFINAE: SFINAE_Suppress
  Text: missing field %0 initializer
warn_missing_format_string:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: format string missing
  SFINAE: SFINAE_Suppress
  Text: format string missing
warn_missing_method_return_type:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: missing-method-return-type
  Regex: method has no return type specified; defaults to 'id'
  SFINAE: SFINAE_Suppress
  Text: method has no return type specified; defaults to 'id'
warn_missing_prototype:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: missing-prototypes
  Regex: no previous prototype for function (.*)
  SFINAE: SFINAE_Suppress
  Text: no previous prototype for function %0
warn_missing_sdksettings_for_availability_checking:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-availability-without-sdk-settings
  Regex: (.*) availability is ignored without a valid 'SDKSettings\.json' in the SDK
  SFINAE: SFINAE_Suppress
  Text: '%0 availability is ignored without a valid ''SDKSettings.json'' in the SDK'
warn_missing_selector_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: missing-selector-name
  Regex: (.*) used as the name of the previous parameter rather than as part of the selector
  SFINAE: SFINAE_Suppress
  Text: '%0 used as the name of the previous parameter rather than as part of the selector'
warn_missing_sentinel:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sentinel
  Regex: missing sentinel in (?:function call|method dispatch|block call)
  SFINAE: SFINAE_Suppress
  Text: missing sentinel in %select{function call|method dispatch|block call}0
warn_missing_submodule:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: incomplete-umbrella
  Regex: missing submodule '(.*)'
  SFINAE: SFINAE_Suppress
  Text: missing submodule '%0'
warn_missing_sysroot:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: missing-sysroot
  Regex: 'no such sysroot directory: ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'no such sysroot directory: ''%0'''
warn_missing_variable_declarations:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: missing-variable-declarations
  Regex: no previous extern declaration for non-static variable (.*)
  SFINAE: SFINAE_Suppress
  Text: no previous extern declaration for non-static variable %0
warn_missing_whitespace_after_macro_name:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: whitespace recommended after macro name
  SFINAE: SFINAE_Suppress
  Text: whitespace recommended after macro name
warn_mixed_decls_code:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: declaration-after-statement
  Regex: mixing declarations and code is incompatible with standards before C99
  SFINAE: SFINAE_Suppress
  Text: mixing declarations and code is incompatible with standards before C99
warn_mixed_sign_comparison:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: sign-compare
  Regex: 'comparison of integers of different signs: (.*) and (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'comparison of integers of different signs: %0 and %1'
warn_mmap_incomplete_framework_module_declaration:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: incomplete-framework-module-declaration
  Regex: skipping '(.*)' because module declaration of '(.*)' lacks the 'framework' qualifier
  SFINAE: SFINAE_Suppress
  Text: skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
warn_mmap_mismatched_private_module_name:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: private-module
  Regex: expected canonical name for private module '(.*)'
  SFINAE: SFINAE_Suppress
  Text: expected canonical name for private module '%0'
warn_mmap_mismatched_private_submodule:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: private-module
  Regex: private submodule '(.*)' in private module map, expected top-level module
  SFINAE: SFINAE_Suppress
  Text: private submodule '%0' in private module map, expected top-level module
warn_mmap_redundant_export_as:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: private-module
  Regex: module '(.*)' already re-exported as '(.*)'
  SFINAE: SFINAE_Suppress
  Text: module '%0' already re-exported as '%1'
warn_mmap_umbrella_dir_not_found:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: incomplete-umbrella
  Regex: umbrella directory '(.*)' not found
  SFINAE: SFINAE_Suppress
  Text: umbrella directory '%0' not found
warn_mmap_unknown_attribute:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: unknown attribute '(.*)'
  SFINAE: SFINAE_Suppress
  Text: unknown attribute '%0'
warn_modifying_shadowing_decl:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: shadow-field-in-constructor-modified
  Regex: modifying constructor parameter (.*) that shadows a field of (.*)
  SFINAE: SFINAE_Suppress
  Text: modifying constructor parameter %0 that shadows a field of %1
warn_module_config_macro_undef:
  ArgsCount: 4
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: config-macros
  Regex: (?:definition|#undef) of configuration macro '(.*)' has no effect on the import of '(.*)'; pass '(?:-D(.*)=\.\.\.|-U(.*))' on the command line to configure the module
  SFINAE: SFINAE_Suppress
  Text: '%select{definition|#undef}0 of configuration macro ''%1'' has no effect on the import of ''%2''; pass ''%select{-D%1=...|-U%1}0'' on the command line to configure the module'
warn_module_config_mismatch:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Error
  Group: module-file-config-mismatch
  Regex: module file (.*) cannot be loaded due to a configuration mismatch with the current compilation
  SFINAE: SFINAE_Suppress
  Text: module file %0 cannot be loaded due to a configuration mismatch with the current compilation
warn_module_conflict:
  ArgsCount: 3
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: module-conflict
  Regex: 'module ''(.*)'' conflicts with already-imported module ''(.*)'': (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'module ''%0'' conflicts with already-imported module ''%1'': %2'
warn_module_system_bit_conflict:
  ArgsCount: 1
  CategoryName: AST Deserialization Issue
  Class: CLASS_WARNING
  Component: Serialization
  DefaultSeverity: SEV_Warning
  Group: module-conflict
  Regex: module file '(.*)' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
  SFINAE: SFINAE_Suppress
  Text: module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
warn_module_uses_date_time:
  ArgsCount: 0
  CategoryName: AST Serialization Issue
  Class: CLASS_WARNING
  Component: Serialization
  DefaultSeverity: SEV_Warning
  Group: pch-date-time
  Regex: (?:precompiled header|module) uses __DATE__ or __TIME__
  SFINAE: SFINAE_Suppress
  Text: '%select{precompiled header|module}0 uses __DATE__ or __TIME__'
warn_mt_message:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: \[rewriter\] (.*)
  SFINAE: SFINAE_Suppress
  Text: '[rewriter] %0'
warn_multichar_character_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: multichar
  Regex: multi-character character constant
  SFINAE: SFINAE_Suppress
  Text: multi-character character constant
warn_multiple_method_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-multiple-method-names
  Regex: multiple methods named (.*) found
  SFINAE: SFINAE_Suppress
  Text: multiple methods named %0 found
warn_multiple_selectors:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: selector-type-mismatch
  Regex: several methods with selector (.*) of mismatched types are found for the @selector expression
  SFINAE: SFINAE_Suppress
  Text: several methods with selector %0 of mismatched types are found for the @selector expression
warn_multiversion_duplicate_entries:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: function-multiversion
  Regex: CPU list contains duplicate entries; attribute ignored
  SFINAE: SFINAE_Suppress
  Text: CPU list contains duplicate entries; attribute ignored
warn_namespace_member_extra_qualification:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: extra-qualification
  Regex: extra qualification on member (.*)
  SFINAE: SFINAE_Suppress
  Text: extra qualification on member %0
warn_neon_vector_initializer_non_portable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nonportable-vector-initialization
  Regex: vector initializers are not compatible with NEON intrinsics in big endian mode
  SFINAE: SFINAE_Suppress
  Text: vector initializers are not compatible with NEON intrinsics in big endian mode
warn_nested_block_comment:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: comment
  Regex: '''/\*'' within block comment'
  SFINAE: SFINAE_Suppress
  Text: '''/*'' within block comment'
warn_new_dangling_initializer_list:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling-initializer-list
  Regex: array backing (?:initializer list subobject of the allocated object|the allocated initializer list) will be destroyed at the end of the full-expression
  SFINAE: SFINAE_Suppress
  Text: array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
warn_new_dangling_reference:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling-field
  Regex: temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
  SFINAE: SFINAE_Suppress
  Text: temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
warn_no_autosynthesis_property:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-synthesis
  Regex: auto property synthesis will not synthesize property (.*) because it is 'readwrite' but it will be synthesized 'readonly' via another property
  SFINAE: SFINAE_Suppress
  Text: auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
warn_no_autosynthesis_shared_ivar_property:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-synthesis
  Regex: auto property synthesis will not synthesize property (.*) because it cannot share an ivar with another synthesized property
  SFINAE: SFINAE_Suppress
  Text: auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
warn_no_constructor_for_refconst:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: (?:struct|interface|union|class|enum) (.*) does not declare any constructor to initialize its non-modifiable members
  SFINAE: SFINAE_Suppress
  Text: '%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members'
warn_no_dynamic_cast_with_rtti_disabled:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: rtti
  Regex: dynamic_cast will not work since RTTI data is disabled by (?:-fno-rtti-data|/GR-)
  SFINAE: SFINAE_Suppress
  Text: dynamic_cast will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
warn_no_newline_eof:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: newline-eof
  Regex: no newline at end of file
  SFINAE: SFINAE_Suppress
  Text: no newline at end of file
warn_no_priv_submodule_use_toplevel:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: private-module
  Regex: no submodule named (.*) in module '(.*)'; using top level '(.*)'
  SFINAE: SFINAE_Suppress
  Text: no submodule named %0 in module '%1'; using top level '%2'
warn_no_typeid_with_rtti_disabled:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: rtti
  Regex: typeid will not work since RTTI data is disabled by (?:-fno-rtti-data|/GR-)
  SFINAE: SFINAE_Suppress
  Text: typeid will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
warn_no_underlying_type_specified_for_enum_bitfield:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: signed-enum-bitfield
  Regex: enums in the Microsoft ABI are signed integers by default; consider giving the enum (.*) an unsigned underlying type to make this code portable
  SFINAE: SFINAE_Suppress
  Text: enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
warn_no_unlock:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (.*) '(.*)' is still held at the end of function
  SFINAE: SFINAE_Suppress
  Text: '%0 ''%1'' is still held at the end of function'
warn_nocf_check_attribute_ignored:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''nocf_check'' attribute ignored; use -fcf-protection to enable the attribute'
  SFINAE: SFINAE_Suppress
  Text: '''nocf_check'' attribute ignored; use -fcf-protection to enable the attribute'
warn_noderef_on_non_pointer_or_array:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''noderef'' can only be used on an array or pointer type'
  SFINAE: SFINAE_Suppress
  Text: '''noderef'' can only be used on an array or pointer type'
warn_noderef_to_dereferenceable_pointer:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: noderef
  Regex: casting to dereferenceable pointer removes 'noderef' attribute
  SFINAE: SFINAE_Suppress
  Text: casting to dereferenceable pointer removes 'noderef' attribute
warn_nomerge_attribute_ignored_in_stmt:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute is ignored because there exists no call expression inside the statement
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute is ignored because there exists no call expression inside the statement'
warn_non_contravariant_overriding_param_types:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overriding-method-mismatch
  Regex: 'conflicting parameter types in declaration of (.*): (.*) vs (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting parameter types in declaration of %0: %1 vs %2'
warn_non_contravariant_param_types:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: method-signatures
  Regex: 'conflicting parameter types in implementation of (.*): (.*) vs (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting parameter types in implementation of %0: %1 vs %2'
warn_non_covariant_overriding_ret_types:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overriding-method-mismatch
  Regex: 'conflicting return type in declaration of (.*): (.*) vs (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting return type in declaration of %0: %1 vs %2'
warn_non_covariant_ret_types:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: method-signatures
  Regex: 'conflicting return type in implementation of (.*): (.*) vs (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'conflicting return type in implementation of %0: %1 vs %2'
warn_non_literal_null_pointer:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: non-literal-null-conversion
  Regex: expression which evaluates to zero treated as a null pointer constant of type (.*)
  SFINAE: SFINAE_Suppress
  Text: expression which evaluates to zero treated as a null pointer constant of type %0
warn_non_modular_include_in_framework_module:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: non-modular-include-in-framework-module
  Regex: 'include of non-modular header inside framework module ''(.*)'': ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'include of non-modular header inside framework module ''%0'': ''%1'''
warn_non_modular_include_in_module:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: non-modular-include-in-module
  Regex: 'include of non-modular header inside module ''(.*)'': ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'include of non-modular header inside module ''%0'': ''%1'''
warn_non_pod_vararg_with_format_string:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: non-pod-varargs
  Regex: cannot pass (?:non-POD|non-trivial) object of type (.*) to variadic (?:function|block|method|constructor); expected type from format string was (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
warn_non_virtual_dtor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: non-virtual-dtor
  Regex: (.*) has virtual functions but non-virtual destructor
  SFINAE: SFINAE_Suppress
  Text: '%0 has virtual functions but non-virtual destructor'
warn_nonnull_expr_compare:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-pointer-compare
  Regex: comparison of nonnull (?:function call|parameter) '(.*)' (?:not |)equal to a null pointer is '(?:true|false)' on first encounter
  SFINAE: SFINAE_Suppress
  Text: comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
warn_noreturn_function_has_return_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: invalid-noreturn
  Regex: function (.*) declared 'noreturn' should not return
  SFINAE: SFINAE_Suppress
  Text: function %0 declared 'noreturn' should not return
warn_not_a_doxygen_trailing_member_comment:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: not a Doxygen trailing comment
  SFINAE: SFINAE_Suppress
  Text: not a Doxygen trailing comment
warn_not_compound_assign:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: use of unary operator that may be intended as compound assignment \((.*)=\)
  SFINAE: SFINAE_Suppress
  Text: use of unary operator that may be intended as compound assignment (%0=)
warn_not_enough_argument:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sentinel
  Regex: not enough variable arguments in (.*) declaration to fit a sentinel
  SFINAE: SFINAE_Suppress
  Text: not enough variable arguments in %0 declaration to fit a sentinel
warn_not_in_enum:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: switch
  Regex: case value not in enumerated type (.*)
  SFINAE: SFINAE_Suppress
  Text: case value not in enumerated type %0
warn_not_in_enum_assignment:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: assign-enum
  Regex: integer constant not in range of enumerated type (.*)
  SFINAE: SFINAE_Suppress
  Text: integer constant not in range of enumerated type %0
warn_not_xl_compatible:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: aix-compat
  Regex: requesting an alignment of 16 bytes or greater for struct members is not binary compatible with IBM XL C/C\+\+ for AIX 16\.1\.0 and older
  SFINAE: SFINAE_Suppress
  Text: requesting an alignment of 16 bytes or greater for struct members is not binary compatible with IBM XL C/C++ for AIX 16.1.0 and older
warn_nothrow_attribute_ignored:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''nothrow'' attribute conflicts with exception specification; attribute ignored'
  SFINAE: SFINAE_Suppress
  Text: '''nothrow'' attribute conflicts with exception specification; attribute ignored'
warn_npot_ms_struct:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Error
  Group: incompatible-ms-struct
  Regex: ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
  SFINAE: SFINAE_Suppress
  Text: ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
warn_ns_attribute_wrong_parameter_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to (?:Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer) parameters
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer}1 parameters'
warn_ns_attribute_wrong_return_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute only applies to (?:functions|methods|properties) that return (?:an Objective-C object|a pointer|a non-retainable pointer)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2'
warn_nsconsumed_attribute_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nsconsumed-mismatch
  Regex: overriding method has mismatched ns_consumed attribute on its parameter
  SFINAE: SFINAE_Suppress
  Text: overriding method has mismatched ns_consumed attribute on its parameter
warn_nsdictionary_duplicate_key:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-dictionary-duplicate-keys
  Regex: duplicate key in dictionary literal
  SFINAE: SFINAE_Suppress
  Text: duplicate key in dictionary literal
warn_nsobject_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: NSObject-attribute
  Regex: '''NSObject'' attribute may be put on a typedef only; attribute is ignored'
  SFINAE: SFINAE_Suppress
  Text: '''NSObject'' attribute may be put on a typedef only; attribute is ignored'
warn_nsreturns_retained_attribute_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nsreturns-mismatch
  Regex: overriding method has mismatched ns_returns_(?:not_retained|retained) attributes
  SFINAE: SFINAE_Suppress
  Text: overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
warn_null_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nonnull
  Regex: null passed to a callee that requires a non-null argument
  SFINAE: SFINAE_Suppress
  Text: null passed to a callee that requires a non-null argument
warn_null_in_arithmetic_operation:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: null-arithmetic
  Regex: use of NULL in arithmetic operation
  SFINAE: SFINAE_Suppress
  Text: use of NULL in arithmetic operation
warn_null_in_comparison_operation:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: null-arithmetic
  Regex: comparison between NULL and non-pointer (?:\((.*) and NULL\)|\(NULL and (.*)\))
  SFINAE: SFINAE_Suppress
  Text: comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
warn_null_pointer_compare:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-pointer-compare
  Regex: comparison of (?:address of|function|array) '(.*)' (?:not |)equal to a null pointer is always (?:true|false)
  SFINAE: SFINAE_Suppress
  Text: comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
warn_null_resettable_setter:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nullability
  Regex: synthesized setter (.*) for null_resettable property (.*) does not handle nil
  SFINAE: SFINAE_Suppress
  Text: synthesized setter %0 for null_resettable property %1 does not handle nil
warn_null_ret:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nonnull
  Regex: null returned from (?:function|method) that requires a non-null return value
  SFINAE: SFINAE_Suppress
  Text: null returned from %select{function|method}0 that requires a non-null return value
warn_null_statement:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: extra-semi-stmt
  Regex: empty expression statement has no effect; remove unnecessary ';' to silence this warning
  SFINAE: SFINAE_Suppress
  Text: empty expression statement has no effect; remove unnecessary ';' to silence this warning
warn_nullability_declspec:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: nullability-declspec
  Regex: nullability specifier (.*) cannot be applied to non-pointer type (.*); did you mean to apply the specifier to the (?:pointer|block pointer|member pointer|function pointer|member function pointer)\?
  SFINAE: SFINAE_Suppress
  Text: nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
warn_nullability_duplicate:
  ArgsCount: 1
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: nullability
  Regex: duplicate nullability specifier (.*)
  SFINAE: SFINAE_Suppress
  Text: duplicate nullability specifier %0
warn_nullability_inferred_on_nested_type:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nullability-inferred-on-nested-type
  Regex: inferring '_Nonnull' for pointer type within (?:array|reference) is deprecated
  SFINAE: SFINAE_Suppress
  Text: inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
warn_nullability_lost:
  ArgsCount: 2
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: nullable-to-nonnull-conversion
  Regex: implicit conversion from nullable pointer (.*) to non-nullable pointer type (.*)
  SFINAE: SFINAE_Suppress
  Text: implicit conversion from nullable pointer %0 to non-nullable pointer type %1
warn_nullability_missing:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nullability-completeness
  Regex: (?:pointer|block pointer|member pointer) is missing a nullability type specifier \(_Nonnull, _Nullable, or _Null_unspecified\)
  SFINAE: SFINAE_Suppress
  Text: '%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)'
warn_nullability_missing_array:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: nullability-completeness-on-arrays
  Regex: array parameter is missing a nullability type specifier \(_Nonnull, _Nullable, or _Null_unspecified\)
  SFINAE: SFINAE_Suppress
  Text: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
warn_objc_boxing_invalid_utf8_string:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-boxing
  Regex: string is ill-formed as UTF-8 and will become a null (.*) when boxed
  SFINAE: SFINAE_Suppress
  Text: string is ill-formed as UTF-8 and will become a null %0 when boxed
warn_objc_cdirective_format_string:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: cstring-format-directive
  Regex: using (.*) directive in (?:NSString|CFString) which is being passed as a formatting argument to the formatting (?:method|CFfunction)
  SFINAE: SFINAE_Suppress
  Text: using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
warn_objc_circular_container:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-circular-container
  Regex: adding (.*) to (.*) might cause circular dependency in container
  SFINAE: SFINAE_Suppress
  Text: adding %0 to %1 might cause circular dependency in container
warn_objc_collection_literal_element:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-literal-conversion
  Regex: object of type (.*) is not compatible with (?:array element type|dictionary key type|dictionary value type) (.*)
  SFINAE: SFINAE_Suppress
  Text: object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
warn_objc_designated_init_missing_super_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-designated-initializers
  Regex: designated initializer missing a 'super' call to a designated initializer of the super class
  SFINAE: SFINAE_Suppress
  Text: designated initializer missing a 'super' call to a designated initializer of the super class
warn_objc_designated_init_non_designated_init_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-designated-initializers
  Regex: designated initializer invoked a non-designated initializer
  SFINAE: SFINAE_Suppress
  Text: designated initializer invoked a non-designated initializer
warn_objc_designated_init_non_super_designated_init_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-designated-initializers
  Regex: designated initializer should only invoke a designated initializer on 'super'
  SFINAE: SFINAE_Suppress
  Text: designated initializer should only invoke a designated initializer on 'super'
warn_objc_direct_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute isn't implemented by this Objective-C runtime
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute isn''t implemented by this Objective-C runtime'
warn_objc_direct_property_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: direct attribute on property (.*) ignored \(not implemented by this Objective-C runtime\)
  SFINAE: SFINAE_Suppress
  Text: direct attribute on property %0 ignored (not implemented by this Objective-C runtime)
warn_objc_implementation_missing_designated_init_override:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-designated-initializers
  Regex: method override for the designated initializer of the superclass (.*) not found
  SFINAE: SFINAE_Suppress
  Text: method override for the designated initializer of the superclass %objcinstance0 not found
warn_objc_invalid_bridge:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: bridge-cast
  Regex: (.*) bridges to (.*), not (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 bridges to %1, not %2'
warn_objc_invalid_bridge_to_cf:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: bridge-cast
  Regex: (.*) cannot bridge to (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 cannot bridge to %1'
warn_objc_isa_assign:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-objc-isa-usage
  Regex: assignment to Objective-C's isa is deprecated in favor of object_setClass\(\)
  SFINAE: SFINAE_Suppress
  Text: assignment to Objective-C's isa is deprecated in favor of object_setClass()
warn_objc_isa_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-objc-isa-usage
  Regex: direct access to Objective-C's isa is deprecated in favor of object_getClass\(\)
  SFINAE: SFINAE_Suppress
  Text: direct access to Objective-C's isa is deprecated in favor of object_getClass()
warn_objc_literal_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-literal-compare
  Regex: direct comparison of (?:an array literal|a dictionary literal|a numeric literal|a boxed expression|) has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
warn_objc_missing_super_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-missing-super-calls
  Regex: method possibly missing a \[super (.*)\] call
  SFINAE: SFINAE_Suppress
  Text: method possibly missing a [super %0] call
warn_objc_pointer_cxx_catch_fragile:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-nonunified-exceptions
  Regex: cannot catch an exception thrown with @throw in C\+\+ in the non-unified exception model
  SFINAE: SFINAE_Suppress
  Text: cannot catch an exception thrown with @throw in C++ in the non-unified exception model
warn_objc_pointer_masking:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-objc-pointer-introspection
  Regex: bitmasking for introspection of Objective-C object pointers is strongly discouraged
  SFINAE: SFINAE_Suppress
  Text: bitmasking for introspection of Objective-C object pointers is strongly discouraged
warn_objc_pointer_masking_performSelector:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-objc-pointer-introspection-performSelector
  Regex: bitmasking for introspection of Objective-C object pointers is strongly discouraged
  SFINAE: SFINAE_Suppress
  Text: bitmasking for introspection of Objective-C object pointers is strongly discouraged
warn_objc_precise_lifetime_meaningless:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: objc_precise_lifetime is not meaningful for (?:__unsafe_unretained|__autoreleasing) objects
  SFINAE: SFINAE_SubstitutionFailure
  Text: objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
warn_objc_property_assign_on_object:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: objc-property-assign-on-object-type
  Regex: '''assign'' property of object type may become a dangling reference; consider using ''unsafe_unretained'''
  SFINAE: SFINAE_Suppress
  Text: '''assign'' property of object type may become a dangling reference; consider using ''unsafe_unretained'''
warn_objc_property_copy_missing_on_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: '''copy'' attribute must be specified for the block property when -fobjc-gc-only is specified'
  SFINAE: SFINAE_Suppress
  Text: '''copy'' attribute must be specified for the block property when -fobjc-gc-only is specified'
warn_objc_property_default_assign_on_object:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-no-attribute
  Regex: default property attribute 'assign' not appropriate for object
  SFINAE: SFINAE_Suppress
  Text: default property attribute 'assign' not appropriate for object
warn_objc_property_no_assignment_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-no-attribute
  Regex: no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
  SFINAE: SFINAE_Suppress
  Text: no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
warn_objc_property_retain_of_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-noncopy-retain-block-property
  Regex: retain'ed block property does not copy the block - use copy attribute instead
  SFINAE: SFINAE_Suppress
  Text: retain'ed block property does not copy the block - use copy attribute instead
warn_objc_protocol_qualifier_missing_id:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: protocol has no object type specified; defaults to qualified 'id'
  SFINAE: SFINAE_Suppress
  Text: protocol has no object type specified; defaults to qualified 'id'
warn_objc_readonly_property_has_setter:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-readonly-with-setter-property
  Regex: setter cannot be specified for a readonly property
  SFINAE: SFINAE_Suppress
  Text: setter cannot be specified for a readonly property
warn_objc_redundant_literal_use:
  ArgsCount: 1
  CategoryName: Cocoa API Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-redundant-literal-use
  Regex: using (.*) with a literal is redundant
  SFINAE: SFINAE_Suppress
  Text: using %0 with a literal is redundant
warn_objc_redundant_qualified_class_type:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-protocol-qualifiers
  Regex: parameterized class (.*) already conforms to the protocols listed; did you forget a '\*'\?
  SFINAE: SFINAE_Suppress
  Text: parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
warn_objc_requires_super_protocol:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: requires-super-attribute
  Regex: (.*) attribute cannot be applied to (?:methods in protocols|dealloc)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute cannot be applied to %select{methods in protocols|dealloc}1'
warn_objc_root_class_missing:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-root-class
  Regex: class (.*) defined without specifying a base class
  SFINAE: SFINAE_Suppress
  Text: class %0 defined without specifying a base class
warn_objc_secondary_init_missing_init_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-designated-initializers
  Regex: convenience initializer missing a 'self' call to another initializer
  SFINAE: SFINAE_Suppress
  Text: convenience initializer missing a 'self' call to another initializer
warn_objc_secondary_init_super_init_call:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-designated-initializers
  Regex: convenience initializer should not invoke an initializer on 'super'
  SFINAE: SFINAE_Suppress
  Text: convenience initializer should not invoke an initializer on 'super'
warn_objc_string_literal_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-string-compare
  Regex: direct comparison of a string literal has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: direct comparison of a string literal has undefined behavior
warn_objc_unsafe_perform_selector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-unsafe-perform-selector
  Regex: (.*) is incompatible with selectors that return a (?:struct|union|vector) type
  SFINAE: SFINAE_Suppress
  Text: '%0 is incompatible with selectors that return a %select{struct|union|vector}1 type'
warn_odr_different_num_template_parameters:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: template parameter lists have a different number of parameters \((.*) vs (.*)\)
  SFINAE: SFINAE_Suppress
  Text: template parameter lists have a different number of parameters (%0 vs %1)
warn_odr_different_template_parameter_kind:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: template parameter has different kinds in different translation units
  SFINAE: SFINAE_Suppress
  Text: template parameter has different kinds in different translation units
warn_odr_field_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: field (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: field %0 declared with incompatible types in different translation units (%1 vs. %2)
warn_odr_function_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: external function (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: external function %0 declared with incompatible types in different translation units (%1 vs. %2)
warn_odr_ivar_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: instance variable (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
warn_odr_non_type_parameter_type_inconsistent:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: non-type template parameter declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
warn_odr_objc_method_num_params_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: (?:class|instance) method (.*) has a different number of parameters in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: '%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)'
warn_odr_objc_method_param_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: (?:class|instance) method (.*) has a parameter with a different types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: '%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)'
warn_odr_objc_method_result_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: (?:class|instance) method (.*) has incompatible result types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: '%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)'
warn_odr_objc_method_variadic_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: (?:class|instance) method (.*) is variadic in one translation unit and not variadic in another
  SFINAE: SFINAE_Suppress
  Text: '%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another'
warn_odr_objc_property_impl_kind_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: property (.*) is implemented with (?:@synthesize|@dynamic) in one translation but (?:@dynamic|@synthesize) in another translation unit
  SFINAE: SFINAE_Suppress
  Text: property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
warn_odr_objc_property_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: property (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: property %0 declared with incompatible types in different translation units (%1 vs. %2)
warn_odr_objc_superclass_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: class (.*) has incompatible superclasses
  SFINAE: SFINAE_Suppress
  Text: class %0 has incompatible superclasses
warn_odr_objc_synthesize_ivar_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: property (.*) is synthesized to different ivars in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
warn_odr_parameter_pack_non_pack:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: parameter kind mismatch; parameter is (?:not a|a) parameter pack
  SFINAE: SFINAE_Suppress
  Text: parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
warn_odr_tag_type_inconsistent:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: type (.*) has incompatible definitions in different translation units
  SFINAE: SFINAE_Suppress
  Text: type %0 has incompatible definitions in different translation units
warn_odr_variable_multiple_def:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: external variable (.*) defined in multiple translation units
  SFINAE: SFINAE_Suppress
  Text: external variable %0 defined in multiple translation units
warn_odr_variable_type_inconsistent:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Warning
  Group: odr
  Regex: external variable (.*) declared with incompatible types in different translation units \((.*) vs\. (.*)\)
  SFINAE: SFINAE_Suppress
  Text: external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
warn_old_implicitly_unsigned_long:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: c99-compat
  Regex: integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will (?:have type 'long long'|be ill-formed) in C99 onwards
  SFINAE: SFINAE_Suppress
  Text: integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
warn_old_implicitly_unsigned_long_cxx:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: c++11-compat
  Regex: integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C\+\+98; this literal will (?:have type 'long long'|be ill-formed) in C\+\+11 onwards
  SFINAE: SFINAE_Suppress
  Text: integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
warn_old_style_cast:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: old-style-cast
  Regex: use of old-style cast
  SFINAE: SFINAE_Suppress
  Text: use of old-style cast
warn_omp51_compat_attributes:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pre-openmp-51-compat
  Regex: specifying OpenMP directives with \[\[\]\] is incompatible with OpenMP standards before OpenMP 5\.1
  SFINAE: SFINAE_Suppress
  Text: specifying OpenMP directives with [[]] is incompatible with OpenMP standards before OpenMP 5.1
warn_omp_alignment_not_power_of_two:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: aligned clause will be ignored because the requested alignment is not a power of 2
  SFINAE: SFINAE_Suppress
  Text: aligned clause will be ignored because the requested alignment is not a power of 2
warn_omp_allocate_thread_on_task_target_directive:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: allocator with the 'thread' trait access has unspecified behavior on '(.*)' directive
  SFINAE: SFINAE_Suppress
  Text: allocator with the 'thread' trait access has unspecified behavior on '%0' directive
warn_omp_ctx_incompatible_property_for_selector:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: the context property '(.*)' is not valid for the context selector '(.*)' and the context set '(.*)'; property ignored
  SFINAE: SFINAE_Suppress
  Text: the context property '%0' is not valid for the context selector '%1' and the context set '%2'; property ignored
warn_omp_ctx_incompatible_score_for_property:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: the context selector '(.*)' in the context set '(.*)' cannot have a score \('(.*)'\); score ignored
  SFINAE: SFINAE_Suppress
  Text: the context selector '%0' in the context set '%1' cannot have a score ('%2'); score ignored
warn_omp_ctx_incompatible_selector_for_set:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: the context selector '(.*)' is not valid for the context set '(.*)'; selector ignored
  SFINAE: SFINAE_Suppress
  Text: the context selector '%0' is not valid for the context set '%1'; selector ignored
warn_omp_ctx_selector_without_properties:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: the context selector '(.*)' in context set '(.*)' requires a context property defined in parentheses; selector ignored
  SFINAE: SFINAE_Suppress
  Text: the context selector '%0' in context set '%1' requires a context property defined in parentheses; selector ignored
warn_omp_declare_target_after_first_use:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-target
  Regex: declaration marked as declare target after first use, it may lead to incorrect results
  SFINAE: SFINAE_Suppress
  Text: declaration marked as declare target after first use, it may lead to incorrect results
warn_omp_declare_variant_after_emitted:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: source-uses-openmp
  Regex: '''#pragma omp declare variant'' cannot be applied to the function that was defined already; the original function might be used'
  SFINAE: SFINAE_Suppress
  Text: '''#pragma omp declare variant'' cannot be applied to the function that was defined already; the original function might be used'
warn_omp_declare_variant_after_used:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: source-uses-openmp
  Regex: '''#pragma omp declare variant'' cannot be applied for function after first usage; the original function might be used'
  SFINAE: SFINAE_Suppress
  Text: '''#pragma omp declare variant'' cannot be applied for function after first usage; the original function might be used'
warn_omp_declare_variant_ctx_mutiple_use:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: the context (?:set|selector|property) '(.*)' was used already in the same 'omp declare variant' directive; (?:set|selector|property) ignored
  SFINAE: SFINAE_Suppress
  Text: the context %select{set|selector|property}0 '%1' was used already in the same 'omp declare variant' directive; %select{set|selector|property}0 ignored
warn_omp_declare_variant_ctx_not_a_property:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: '''(.*)'' is not a valid context property for the context selector ''(.*)'' and the context set ''(.*)''; property ignored'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is not a valid context property for the context selector ''%1'' and the context set ''%2''; property ignored'
warn_omp_declare_variant_ctx_not_a_selector:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: '''(.*)'' is not a valid context selector for the context set ''(.*)''; selector ignored'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is not a valid context selector for the context set ''%1''; selector ignored'
warn_omp_declare_variant_ctx_not_a_set:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: '''(.*)'' is not a valid context set in a `declare variant`; set ignored'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is not a valid context set in a `declare variant`; set ignored'
warn_omp_declare_variant_expected:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: expected '(.*)' after the (.*); '(.*)' assumed
  SFINAE: SFINAE_Suppress
  Text: expected '%0' after the %1; '%0' assumed
warn_omp_declare_variant_marked_as_declare_variant:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: source-uses-openmp
  Regex: variant function in '#pragma omp declare variant' is itself marked as '#pragma omp declare variant'
  SFINAE: SFINAE_Suppress
  Text: variant function in '#pragma omp declare variant' is itself marked as '#pragma omp declare variant'
warn_omp_declare_variant_score_not_constant:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: source-uses-openmp
  Regex: score expressions in the OpenMP context selector need to be constant; (.*) is not and will be ignored
  SFINAE: SFINAE_Suppress
  Text: score expressions in the OpenMP context selector need to be constant; %0 is not and will be ignored
warn_omp_declare_variant_string_literal_or_identifier:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: expected identifier or string literal describing a context (?:set|selector|property); (?:set|selector|property) skipped
  SFINAE: SFINAE_Suppress
  Text: expected identifier or string literal describing a context %select{set|selector|property}0; %select{set|selector|property}0 skipped
warn_omp_extra_tokens_at_eol:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: extra-tokens
  Regex: extra tokens at the end of '#pragma omp (.*)' are ignored
  SFINAE: SFINAE_Suppress
  Text: extra tokens at the end of '#pragma omp %0' are ignored
warn_omp_linear_step_zero:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: zero linear step \((.*) (?:|and other variables in clause )should probably be const\)
  SFINAE: SFINAE_Suppress
  Text: zero linear step (%0 %select{|and other variables in clause }1should probably be const)
warn_omp_loop_64_bit_var:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-loop-form
  Regex: OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
  SFINAE: SFINAE_Suppress
  Text: OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
warn_omp_more_one_device_type_clause:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: more than one 'device_type' clause is specified
  SFINAE: SFINAE_Suppress
  Text: more than one 'device_type' clause is specified
warn_omp_more_one_interop_type:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: interop type '(.*)' cannot be specified more than once
  SFINAE: SFINAE_Suppress
  Text: interop type '%0' cannot be specified more than once
warn_omp_nesting_simd:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: source-uses-openmp
  Regex: OpenMP only allows an ordered construct with the simd clause nested in a simd construct
  SFINAE: SFINAE_Suppress
  Text: OpenMP only allows an ordered construct with the simd clause nested in a simd construct
warn_omp_non_trivial_type_mapped:
  ArgsCount: 1
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-mapping
  Regex: Type (.*) is not trivially copyable and not guaranteed to be mapped correctly
  SFINAE: SFINAE_Suppress
  Text: Type %0 is not trivially copyable and not guaranteed to be mapped correctly
warn_omp_not_in_target_context:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-target
  Regex: declaration is not declared in any declare target region
  SFINAE: SFINAE_Suppress
  Text: declaration is not declared in any declare target region
warn_omp_section_is_char:
  ArgsCount: 0
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: char-subscripts
  Regex: array section (?:lower bound|length) is of type 'char'
  SFINAE: SFINAE_Suppress
  Text: array section %select{lower bound|length}0 is of type 'char'
warn_omp_unknown_assumption_clause_missing_id:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: valid (.*) clauses start with (.*); (?:token|tokens) will be ignored
  SFINAE: SFINAE_Suppress
  Text: valid %0 clauses start with %1; %select{token|tokens}2 will be ignored
warn_omp_unknown_assumption_clause_without_args:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: (.*) clause should not be followed by arguments; tokens will be ignored
  SFINAE: SFINAE_Suppress
  Text: '%0 clause should not be followed by arguments; tokens will be ignored'
warn_omp_used_different_allocator:
  ArgsCount: 2
  CategoryName: OpenMP Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: openmp-clauses
  Regex: allocate directive specifies (?:default|'(.*)') allocator while previously used (?:default|'(.*)')
  SFINAE: SFINAE_Suppress
  Text: allocate directive specifies %select{default|'%1'}0 allocator while previously used %select{default|'%3'}2
warn_on_superclass_use:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: class implementation may not have super class
  SFINAE: SFINAE_Suppress
  Text: class implementation may not have super class
warn_opencl_attr_deprecated_ignored:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (.*) attribute is deprecated and ignored in (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute is deprecated and ignored in %1'
warn_opencl_generic_address_space_arg:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: conversion
  Regex: passing non-generic address space pointer to (.*) may cause dynamic conversion affecting performance
  SFINAE: SFINAE_Suppress
  Text: passing non-generic address space pointer to %0 may cause dynamic conversion affecting performance
warn_opencl_unsupported_core_feature:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: pedantic-core-features
  Regex: (.*) is a core feature in (?:OpenCL C|C\+\+ for OpenCL) version (.*) but not supported on this target
  SFINAE: SFINAE_Suppress
  Text: '%0 is a core feature in %select{OpenCL C|C++ for OpenCL}1 version %2 but not supported on this target'
warn_operator_new_returns_null:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: new-returns-null
  Regex: (.*) should not return a null pointer unless it is declared 'throw\(\)'(?:| or 'noexcept')
  SFINAE: SFINAE_Suppress
  Text: '%0 should not return a null pointer unless it is declared ''throw()''%select{| or ''noexcept''}1'
warn_option_invalid_ocl_version:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: deprecated
  Regex: (.*) does not support the option '(.*)'
  SFINAE: SFINAE_Suppress
  Text: '%0 does not support the option ''%1'''
warn_os_log_format_narg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_ERROR
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: None
  Regex: os_log\(\) '%n' format specifier is not allowed
  SFINAE: SFINAE_SubstitutionFailure
  Text: os_log() '%%n' format specifier is not allowed
warn_out_of_range_compare:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-constant-out-of-range-compare
  Regex: result of comparison of (?:constant (.*)|true|false) with (?:expression of type (.*)|boolean expression) is always (.*)
  SFINAE: SFINAE_Suppress
  Text: result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
warn_overaligned_type:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: over-aligned
  Regex: type (.*) requires (.*) bytes of alignment and the default allocator only guarantees (.*) bytes
  SFINAE: SFINAE_Suppress
  Text: type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
warn_overloaded_shift_in_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: overloaded-shift-op-parentheses
  Regex: overloaded operator (?:>>|<<) has higher precedence than comparison operator
  SFINAE: SFINAE_Suppress
  Text: overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
warn_overloaded_virtual:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: overloaded-virtual
  Regex: (.*) hides overloaded virtual (?:function|functions)
  SFINAE: SFINAE_Suppress
  Text: '%q0 hides overloaded virtual %select{function|functions}1'
warn_overriding_method_missing_noescape:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-noescape
  Regex: parameter of overriding method should be annotated with __attribute__\(\(noescape\)\)
  SFINAE: SFINAE_Suppress
  Text: parameter of overriding method should be annotated with __attribute__((noescape))
warn_padded_struct_anon_field:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Ignored
  Group: padded
  Regex: padding (?:struct|interface|class) (.*) with (.*) (?:byte|bit)s? to align anonymous bit-field
  SFINAE: SFINAE_Suppress
  Text: padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
warn_padded_struct_field:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Ignored
  Group: padded
  Regex: padding (?:struct|interface|class) (.*) with (.*) (?:byte|bit)s? to align (.*)
  SFINAE: SFINAE_Suppress
  Text: padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
warn_padded_struct_size:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Ignored
  Group: padded
  Regex: padding size of (.*) with (.*) (?:byte|bit)s? to alignment boundary
  SFINAE: SFINAE_Suppress
  Text: padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
warn_param_mismatched_alignment:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: align-mismatch
  Regex: passing (.*)-byte aligned argument to (.*)-byte aligned parameter (.*)(?:| of (.*)) may result in an unaligned pointer access
  SFINAE: SFINAE_Suppress
  Text: passing %0-byte aligned argument to %1-byte aligned parameter %2%select{| of %4}3 may result in an unaligned pointer access
warn_param_return_typestate_mismatch:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: 'parameter ''(.*)'' not in expected state when the function returns: expected ''(.*)'', observed ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'parameter ''%0'' not in expected state when the function returns: expected ''%1'', observed ''%2'''
warn_param_typestate_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: argument not in expected state; expected '(.*)', observed '(.*)'
  SFINAE: SFINAE_Suppress
  Text: argument not in expected state; expected '%0', observed '%1'
warn_parameter_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: large-by-value-copy
  Regex: (.*) is a large \((.*) bytes\) pass-by-value argument; pass it by reference instead \?
  SFINAE: SFINAE_Suppress
  Text: '%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?'
warn_parens_disambiguated_as_function_declaration:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: vexing-parse
  Regex: parentheses were disambiguated as a function declaration
  SFINAE: SFINAE_Suppress
  Text: parentheses were disambiguated as a function declaration
warn_parens_disambiguated_as_variable_declaration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: vexing-parse
  Regex: parentheses were disambiguated as redundant parentheses around declaration of variable named (.*)
  SFINAE: SFINAE_Suppress
  Text: parentheses were disambiguated as redundant parentheses around declaration of variable named %0
warn_pass_class_arg_to_vararg:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: class-varargs
  Regex: passing object of class type (.*) through variadic (?:function|block|method|constructor)(?:|; did you mean to call '(.*)'\?)
  SFINAE: SFINAE_Suppress
  Text: passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
warn_pessimizing_move_on_initialization:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pessimizing-move
  Regex: moving a temporary object prevents copy elision
  SFINAE: SFINAE_Suppress
  Text: moving a temporary object prevents copy elision
warn_pessimizing_move_on_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pessimizing-move
  Regex: moving a local object in a return statement prevents copy elision
  SFINAE: SFINAE_Suppress
  Text: moving a local object in a return statement prevents copy elision
warn_pointer_abs:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: absolute-value
  Regex: taking the absolute value of (?:pointer|function|array) type (.*) is suspicious
  SFINAE: SFINAE_Suppress
  Text: taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
warn_pointer_arith_null_ptr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: null-pointer-arithmetic
  Regex: performing pointer arithmetic on a null pointer has undefined behavior(?:| if the offset is nonzero)
  SFINAE: SFINAE_Suppress
  Text: performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
warn_pointer_compare:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-compare
  Regex: comparing a pointer to a null character constant; did you mean to compare to (?:NULL|\(void \*\)0)\?
  SFINAE: SFINAE_Suppress
  Text: comparing a pointer to a null character constant; did you mean to compare to %select{NULL|(void *)0}0?
warn_pointer_indirection_from_incompatible_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: undefined-reinterpret-cast
  Regex: dereference of type (.*) that was reinterpret_cast from type (.*) has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
warn_pointer_sub_null_ptr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: null-pointer-subtraction
  Regex: performing pointer subtraction with a null pointer (?:has|may have) undefined behavior
  SFINAE: SFINAE_Suppress
  Text: performing pointer subtraction with a null pointer %select{has|may have}0 undefined behavior
warn_pointer_to_enum_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-to-enum-cast
  Regex: cast to smaller integer type (.*) from (.*)
  SFINAE: SFINAE_Suppress
  Text: cast to smaller integer type %1 from %0
warn_pointer_to_int_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-to-int-cast
  Regex: cast to smaller integer type (.*) from (.*)
  SFINAE: SFINAE_Suppress
  Text: cast to smaller integer type %1 from %0
warn_poison_system_directories:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Ignored
  Group: poison-system-directories
  Regex: include location '(.*)' is unsafe for cross-compilation
  SFINAE: SFINAE_Suppress
  Text: include location '%0' is unsafe for cross-compilation
warn_potentially_direct_selector_expression:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: potentially-direct-selector
  Regex: '@selector expression formed with potentially direct selector (.*)'
  SFINAE: SFINAE_Suppress
  Text: '@selector expression formed with potentially direct selector %0'
warn_pp_ambiguous_macro:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: ambiguous-macro
  Regex: ambiguous expansion of macro (.*)
  SFINAE: SFINAE_Suppress
  Text: ambiguous expansion of macro %0
warn_pp_convert_to_positive:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: '(?:left|right) side of operator converted from negative value to unsigned: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '%select{left|right}0 side of operator converted from negative value to unsigned: %1'
warn_pp_date_time:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: date-time
  Regex: expansion of date or time macro is not reproducible
  SFINAE: SFINAE_Suppress
  Text: expansion of date or time macro is not reproducible
warn_pp_expr_overflow:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: integer overflow in preprocessor expression
  SFINAE: SFINAE_Suppress
  Text: integer overflow in preprocessor expression
warn_pp_hdrstop_filename_ignored:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: clang-cl-pch
  Regex: '#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename'
  SFINAE: SFINAE_Suppress
  Text: '#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename'
warn_pp_line_decimal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: (?:#line|GNU line marker) directive interprets number as decimal, not octal
  SFINAE: SFINAE_Suppress
  Text: '%select{#line|GNU line marker}0 directive interprets number as decimal, not octal'
warn_pp_macro_def_mismatch_with_pch:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: clang-cl-pch
  Regex: definition of macro (.*) does not match definition in precompiled header
  SFINAE: SFINAE_Suppress
  Text: definition of macro %0 does not match definition in precompiled header
warn_pp_macro_hides_keyword:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: keyword-macro
  Regex: keyword is hidden by macro definition
  SFINAE: SFINAE_Suppress
  Text: keyword is hidden by macro definition
warn_pp_macro_is_reserved_id:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: reserved-macro-identifier
  Regex: macro name is a reserved identifier
  SFINAE: SFINAE_Suppress
  Text: macro name is a reserved identifier
warn_pp_objc_macro_redef_ignored:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: objc-macro-redefinition
  Regex: ignoring redefinition of Objective-C qualifier macro
  SFINAE: SFINAE_Suppress
  Text: ignoring redefinition of Objective-C qualifier macro
warn_pp_undef_identifier:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: undef
  Regex: (.*) is not defined, evaluates to 0
  SFINAE: SFINAE_Suppress
  Text: '%0 is not defined, evaluates to 0'
warn_pp_undef_prefix:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: undef-prefix
  Regex: (.*) is not defined, evaluates to 0
  SFINAE: SFINAE_Suppress
  Text: '%0 is not defined, evaluates to 0'
warn_pragma_align_expected_equal:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected '=' following '#pragma (?:align|options align)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected '=' following '#pragma %select{align|options align}0' - ignored
warn_pragma_align_invalid_option:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: invalid alignment option in '#pragma (?:align|options align)' - ignored
  SFINAE: SFINAE_Suppress
  Text: invalid alignment option in '#pragma %select{align|options align}0' - ignored
warn_pragma_align_not_xl_compatible:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: aix-compat
  Regex: '#pragma align\(packed\) may not be compatible with objects generated with AIX XL C/C\+\+'
  SFINAE: SFINAE_Suppress
  Text: '#pragma align(packed) may not be compatible with objects generated with AIX XL C/C++'
warn_pragma_attribute_unused:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pragma-clang-attribute
  Regex: unused attribute (.*) in '#pragma clang attribute push' region
  SFINAE: SFINAE_Suppress
  Text: unused attribute %0 in '#pragma clang attribute push' region
warn_pragma_comment_ignored:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: '''#pragma comment (.*)'' ignored'
  SFINAE: SFINAE_Suppress
  Text: '''#pragma comment %0'' ignored'
warn_pragma_debug_missing_argument:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: missing argument to debug command '(.*)'
  SFINAE: SFINAE_Suppress
  Text: missing argument to debug command '%0'
warn_pragma_debug_unexpected_command:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: unexpected debug command '(.*)'
  SFINAE: SFINAE_Suppress
  Text: unexpected debug command '%0'
warn_pragma_debug_unknown_module:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: unknown module '(.*)'
  SFINAE: SFINAE_Suppress
  Text: unknown module '%0'
warn_pragma_deprecated_macro_use:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: deprecated-pragma
  Regex: 'macro (.*) has been marked as deprecated(?:|: (.*))'
  SFINAE: SFINAE_Suppress
  Text: 'macro %0 has been marked as deprecated%select{|: %2}1'
warn_pragma_diagnostic_cannot_pop:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: pragma diagnostic pop could not pop, no matching push
  SFINAE: SFINAE_Suppress
  Text: pragma diagnostic pop could not pop, no matching push
warn_pragma_diagnostic_invalid:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
  SFINAE: SFINAE_Suppress
  Text: pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
warn_pragma_diagnostic_invalid_option:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: pragma diagnostic expected option name \(e\.g\. "-Wundef"\)
  SFINAE: SFINAE_Suppress
  Text: pragma diagnostic expected option name (e.g. "-Wundef")
warn_pragma_diagnostic_invalid_token:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: unexpected token in pragma diagnostic
  SFINAE: SFINAE_Suppress
  Text: unexpected token in pragma diagnostic
warn_pragma_diagnostic_unknown_warning:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-warning-option
  Regex: unknown warning group '(.*)', ignored
  SFINAE: SFINAE_Suppress
  Text: unknown warning group '%0', ignored
warn_pragma_exec_charset_expected:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: '#pragma execution_character_set expected ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: '#pragma execution_character_set expected ''%0'''
warn_pragma_exec_charset_push_invalid:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: '#pragma execution_character_set invalid value ''(.*)'', only ''UTF-8'' is supported'
  SFINAE: SFINAE_Suppress
  Text: '#pragma execution_character_set invalid value ''%0'', only ''UTF-8'' is supported'
warn_pragma_exec_charset_spec_invalid:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: '#pragma execution_character_set expected ''push'' or ''pop'''
  SFINAE: SFINAE_Suppress
  Text: '#pragma execution_character_set expected ''push'' or ''pop'''
warn_pragma_expected_action_or_r_paren:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected action or '\)' in '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected action or ')' in '#pragma %0' - ignored
warn_pragma_expected_colon:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: missing ':' after (.*) - ignoring
  SFINAE: SFINAE_Suppress
  Text: missing ':' after %0 - ignoring
warn_pragma_expected_colon_r_paren:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: missing ':' or '\)' after (.*) - ignoring
  SFINAE: SFINAE_Suppress
  Text: missing ':' or ')' after %0 - ignoring
warn_pragma_expected_comma:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected ',' in '#pragma (.*)'
  SFINAE: SFINAE_Suppress
  Text: expected ',' in '#pragma %0'
warn_pragma_expected_identifier:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected identifier in '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected identifier in '#pragma %0' - ignored
warn_pragma_expected_init_seg:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
warn_pragma_expected_integer:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected integer between (.*) and (.*) inclusive in '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
warn_pragma_expected_lparen:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: missing '\(' after '#pragma (.*)' - ignoring
  SFINAE: SFINAE_Suppress
  Text: missing '(' after '#pragma %0' - ignoring
warn_pragma_expected_non_wide_string:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected non-wide string literal in '#pragma (.*)'
  SFINAE: SFINAE_Suppress
  Text: expected non-wide string literal in '#pragma %0'
warn_pragma_expected_predicate:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected (?:'enable', 'disable', 'begin' or 'end'|'disable') - ignoring
  SFINAE: SFINAE_Suppress
  Text: expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
warn_pragma_expected_punc:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected '\)' or ',' in '#pragma (.*)'
  SFINAE: SFINAE_Suppress
  Text: expected ')' or ',' in '#pragma %0'
warn_pragma_expected_rparen:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: missing '\)' after '#pragma (.*)' - ignoring
  SFINAE: SFINAE_Suppress
  Text: missing ')' after '#pragma %0' - ignoring
warn_pragma_expected_section_label_or_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected a stack label or a string literal for the section name in '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected a stack label or a string literal for the section name in '#pragma %0' - ignored
warn_pragma_expected_section_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected a string literal for the section name in '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected a string literal for the section name in '#pragma %0' - ignored
warn_pragma_expected_section_push_pop_or_name:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected push, pop or a string literal for the section name in '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected push, pop or a string literal for the section name in '#pragma %0' - ignored
warn_pragma_expected_string:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected string literal in '#pragma (.*)' - ignoring
  SFINAE: SFINAE_Suppress
  Text: expected string literal in '#pragma %0' - ignoring
warn_pragma_extension_is_core:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: pedantic-core-features
  Regex: OpenCL extension (.*) is core feature or supported optional core feature - ignoring
  SFINAE: SFINAE_Suppress
  Text: OpenCL extension %0 is core feature or supported optional core feature - ignoring
warn_pragma_extra_tokens_at_eol:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: extra tokens at end of '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: extra tokens at end of '#pragma %0' - ignored
warn_pragma_final_macro:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: final-macro
  Regex: macro (.*) has been marked as final and should not be (?:undefined|redefined)
  SFINAE: SFINAE_Suppress
  Text: macro %0 has been marked as final and should not be %select{undefined|redefined}1
warn_pragma_force_cuda_host_device_bad_arg:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: 'incorrect use of #pragma clang force_cuda_host_device begin\|end'
  SFINAE: SFINAE_Suppress
  Text: 'incorrect use of #pragma clang force_cuda_host_device begin|end'
warn_pragma_fp_ignored:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: '''#pragma (.*)'' is not supported on this target - ignored'
  SFINAE: SFINAE_Suppress
  Text: '''#pragma %0'' is not supported on this target - ignored'
warn_pragma_ignored:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: unknown-pragmas
  Regex: unknown pragma ignored
  SFINAE: SFINAE_Suppress
  Text: unknown pragma ignored
warn_pragma_include_alias_expected:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: pragma include_alias expected '(.*)'
  SFINAE: SFINAE_Suppress
  Text: pragma include_alias expected '%0'
warn_pragma_include_alias_expected_filename:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: pragma include_alias expected include filename
  SFINAE: SFINAE_Suppress
  Text: pragma include_alias expected include filename
warn_pragma_include_alias_mismatch_angle:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: angle-bracketed include <(.*)> cannot be aliased to double-quoted include "(.*)"
  SFINAE: SFINAE_Suppress
  Text: angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
warn_pragma_include_alias_mismatch_quote:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: double-quoted include "(.*)" cannot be aliased to angle-bracketed include <(.*)>
  SFINAE: SFINAE_Suppress
  Text: double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
warn_pragma_init_seg_unsupported_target:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: '''#pragma init_seg'' is only supported when targeting a Microsoft environment'
  SFINAE: SFINAE_Suppress
  Text: '''#pragma init_seg'' is only supported when targeting a Microsoft environment'
warn_pragma_intrinsic_builtin:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragma-intrinsic
  Regex: (.*) is not a recognized builtin(?:|; consider including <intrin\.h> to access non-builtin intrinsics)
  SFINAE: SFINAE_Suppress
  Text: '%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1'
warn_pragma_invalid_action:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: unknown action for '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: unknown action for '#pragma %0' - ignored
warn_pragma_invalid_argument:
  ArgsCount: 3
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: unexpected argument '(.*)' to '#pragma (.*)'(?:|; expected (.*))
  SFINAE: SFINAE_Suppress
  Text: unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
warn_pragma_invalid_specific_action:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: unknown action '(.*)' for '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: unknown action '%1' for '#pragma %0' - ignored
warn_pragma_missing_argument:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: missing argument to '#pragma (.*)'(?:|; expected (.*))
  SFINAE: SFINAE_Suppress
  Text: missing argument to '#pragma %0'%select{|; expected %2}1
warn_pragma_ms_fenv_access:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: incorrect use of '#pragma fenv_access \(on\|off\)' - ignored
  SFINAE: SFINAE_Suppress
  Text: incorrect use of '#pragma fenv_access (on|off)' - ignored
warn_pragma_ms_struct:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: incorrect use of '#pragma ms_struct on\|off' - ignored
  SFINAE: SFINAE_Suppress
  Text: incorrect use of '#pragma ms_struct on|off' - ignored
warn_pragma_omp_ignored:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: source-uses-openmp
  Regex: unexpected '#pragma omp \.\.\.' in program
  SFINAE: SFINAE_Suppress
  Text: unexpected '#pragma omp ...' in program
warn_pragma_optimize:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragma-optimize
  Regex: '''#pragma optimize'' is not supported'
  SFINAE: SFINAE_Suppress
  Text: '''#pragma optimize'' is not supported'
warn_pragma_options_align_reset_failed:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: '#pragma options align=reset failed: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '#pragma options align=reset failed: %0'
warn_pragma_options_expected_align:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected 'align' following '#pragma options' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected 'align' following '#pragma options' - ignored
warn_pragma_pack_invalid_alignment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: 'expected #pragma pack parameter to be ''1'', ''2'', ''4'', ''8'', or ''16'''
  SFINAE: SFINAE_Suppress
  Text: 'expected #pragma pack parameter to be ''1'', ''2'', ''4'', ''8'', or ''16'''
warn_pragma_pack_malformed:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected integer or identifier in '#pragma pack' - ignored
  SFINAE: SFINAE_Suppress
  Text: expected integer or identifier in '#pragma pack' - ignored
warn_pragma_pack_modified_after_include:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pragma-pack
  Regex: 'the current #pragma pack alignment value is modified in the included file'
  SFINAE: SFINAE_Suppress
  Text: 'the current #pragma pack alignment value is modified in the included file'
warn_pragma_pack_no_pop_eof:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pragma-pack
  Regex: unterminated '#pragma pack \(push, \.\.\.\)' at end of file
  SFINAE: SFINAE_Suppress
  Text: unterminated '#pragma pack (push, ...)' at end of file
warn_pragma_pack_non_default_at_include:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: pragma-pack-suspicious-include
  Regex: 'non-default #pragma pack value changes the alignment of struct or union members in the included file'
  SFINAE: SFINAE_Suppress
  Text: 'non-default #pragma pack value changes the alignment of struct or union members in the included file'
warn_pragma_pack_pop_identifier_and_alignment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: specifying both a name and alignment to 'pop' is undefined
  SFINAE: SFINAE_Suppress
  Text: specifying both a name and alignment to 'pop' is undefined
warn_pragma_pack_show:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: 'value of #pragma pack\(show\) == (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'value of #pragma pack(show) == %0'
warn_pragma_pop_failed:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: '#pragma (.*)\(pop, \.\.\.\) failed: (.*)'
  SFINAE: SFINAE_Suppress
  Text: '#pragma %0(pop, ...) failed: %1'
warn_pragma_pop_macro_no_push:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: pragma pop_macro could not pop '(.*)', no matching push_macro
  SFINAE: SFINAE_Suppress
  Text: pragma pop_macro could not pop '%0', no matching push_macro
warn_pragma_restrict_expansion_macro_use:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: restrict-expansion
  Regex: 'macro (.*) has been marked as unsafe for use in headers(?:|: (.*))'
  SFINAE: SFINAE_Suppress
  Text: 'macro %0 has been marked as unsafe for use in headers%select{|: %2}1'
warn_pragma_unknown_extension:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: unknown OpenCL extension (.*) - ignoring
  SFINAE: SFINAE_Suppress
  Text: unknown OpenCL extension %0 - ignoring
warn_pragma_unroll_cuda_value_in_parens:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: cuda-compat
  Regex: argument to '#pragma unroll' should not be in parentheses in CUDA C/C\+\+
  SFINAE: SFINAE_Suppress
  Text: argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
warn_pragma_unsupported_action:
  ArgsCount: 2
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: known but unsupported action '(.*)' for '#pragma (.*)' - ignored
  SFINAE: SFINAE_Suppress
  Text: known but unsupported action '%1' for '#pragma %0' - ignored
warn_pragma_unsupported_extension:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: unsupported OpenCL extension (.*) - ignoring
  SFINAE: SFINAE_Suppress
  Text: unsupported OpenCL extension %0 - ignoring
warn_pragma_unused_expected_var:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: expected '#pragma unused' argument to be a variable name
  SFINAE: SFINAE_Suppress
  Text: expected '#pragma unused' argument to be a variable name
warn_pragma_unused_expected_var_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: only variables can be arguments to '#pragma unused'
  SFINAE: SFINAE_Suppress
  Text: only variables can be arguments to '#pragma unused'
warn_pragma_unused_undeclared_var:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: undeclared variable (.*) used as an argument for '#pragma unused'
  SFINAE: SFINAE_Suppress
  Text: undeclared variable %0 used as an argument for '#pragma unused'
warn_pragma_warning_expected:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: '#pragma warning expected ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: '#pragma warning expected ''%0'''
warn_pragma_warning_expected_number:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: '#pragma warning expected a warning number'
  SFINAE: SFINAE_Suppress
  Text: '#pragma warning expected a warning number'
warn_pragma_warning_push_level:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: '#pragma warning\(push, level\) requires a level between 0 and 4'
  SFINAE: SFINAE_Suppress
  Text: '#pragma warning(push, level) requires a level between 0 and 4'
warn_pragma_warning_spec_invalid:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: '#pragma warning expected ''push'', ''pop'', ''default'', ''disable'', ''error'', ''once'', ''suppress'', 1, 2, 3, or 4'
  SFINAE: SFINAE_Suppress
  Text: '#pragma warning expected ''push'', ''pop'', ''default'', ''disable'', ''error'', ''once'', ''suppress'', 1, 2, 3, or 4'
warn_precedence_bitwise_conditional:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: bitwise-conditional-parentheses
  Regex: operator '\?:' has lower precedence than '(.*)'; '(.*)' will be evaluated first
  SFINAE: SFINAE_Suppress
  Text: operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
warn_precedence_bitwise_rel:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: parentheses
  Regex: (.*) has lower precedence than (.*); (.*) will be evaluated first
  SFINAE: SFINAE_Suppress
  Text: '%0 has lower precedence than %1; %1 will be evaluated first'
warn_precedence_conditional:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: parentheses
  Regex: operator '\?:' has lower precedence than '(.*)'; '(.*)' will be evaluated first
  SFINAE: SFINAE_Suppress
  Text: operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
warn_printf_ObjCflags_without_ObjCConversion:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: object format flags cannot be used with '(.*)' conversion specifier
  SFINAE: SFINAE_Suppress
  Text: object format flags cannot be used with '%0' conversion specifier
warn_printf_asterisk_missing_arg:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: '''(?:\*|\.\*)'' specified field (?:width|precision) is missing a matching ''int'' argument'
  SFINAE: SFINAE_Suppress
  Text: '''%select{*|.*}0'' specified field %select{width|precision}0 is missing a matching ''int'' argument'
warn_printf_asterisk_wrong_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: field (?:width|precision) should have type (.*), but argument has type (.*)
  SFINAE: SFINAE_Suppress
  Text: field %select{width|precision}0 should have type %1, but argument has type %2
warn_printf_data_arg_not_used:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format-extra-args
  Regex: data argument not used by format string
  SFINAE: SFINAE_Suppress
  Text: data argument not used by format string
warn_printf_empty_objc_flag:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: missing object format flag
  SFINAE: SFINAE_Suppress
  Text: missing object format flag
warn_printf_format_string_contains_null_char:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: format string contains '\\0' within the string body
  SFINAE: SFINAE_Suppress
  Text: format string contains '\0' within the string body
warn_printf_format_string_not_null_terminated:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: format string is not null-terminated
  SFINAE: SFINAE_Suppress
  Text: format string is not null-terminated
warn_printf_ignored_flag:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: flag '(.*)' is ignored when flag '(.*)' is present
  SFINAE: SFINAE_Suppress
  Text: flag '%0' is ignored when flag '%1' is present
warn_printf_incomplete_specifier:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: incomplete format specifier
  SFINAE: SFINAE_Suppress
  Text: incomplete format specifier
warn_printf_insufficient_data_args:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format-insufficient-args
  Regex: more '%' conversions than data arguments
  SFINAE: SFINAE_Suppress
  Text: more '%%' conversions than data arguments
warn_printf_invalid_objc_flag:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: '''(.*)'' is not a valid object format flag'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' is not a valid object format flag'
warn_printf_narg_not_supported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: '''%n'' specifier not supported on this platform'
  SFINAE: SFINAE_Suppress
  Text: '''%%n'' specifier not supported on this platform'
warn_printf_nonsensical_flag:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: flag '(.*)' results in undefined behavior with '(.*)' conversion specifier
  SFINAE: SFINAE_Suppress
  Text: flag '%0' results in undefined behavior with '%1' conversion specifier
warn_printf_nonsensical_optional_amount:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: (?:field width|precision) used with '(.*)' conversion specifier, resulting in undefined behavior
  SFINAE: SFINAE_Suppress
  Text: '%select{field width|precision}0 used with ''%1'' conversion specifier, resulting in undefined behavior'
warn_printf_positional_arg_exceeds_data_args:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: data argument position '(.*)' exceeds the number of data arguments \((.*)\)
  SFINAE: SFINAE_Suppress
  Text: data argument position '%0' exceeds the number of data arguments (%1)
warn_private_extern:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: private-extern
  Regex: use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
  SFINAE: SFINAE_Suppress
  Text: use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
warn_profile_data_missing:
  ArgsCount: 2
  CategoryName: Instrumentation Issue
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Ignored
  Group: profile-instr-missing
  Regex: 'profile data may be incomplete: of (.*) functions?, (.*) (?:has|have) no data'
  SFINAE: SFINAE_Suppress
  Text: 'profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data'
warn_profile_data_out_of_date:
  ArgsCount: 2
  CategoryName: Instrumentation Issue
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: profile-instr-out-of-date
  Regex: 'profile data may be out of date: of (.*) functions?, (.*) (?:has|have) mismatched data that will be ignored'
  SFINAE: SFINAE_Suppress
  Text: 'profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored'
warn_profile_data_unprofiled:
  ArgsCount: 1
  CategoryName: Instrumentation Issue
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: profile-instr-unprofiled
  Regex: no profile data available for file "(.*)"
  SFINAE: SFINAE_Suppress
  Text: no profile data available for file "%0"
warn_property_access_suggest:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: property-access-dot-syntax
  Regex: property (.*) not found on object of type (.*); did you mean to access property (.*)\?
  SFINAE: SFINAE_Suppress
  Text: property %0 not found on object of type %1; did you mean to access property %2?
warn_property_attr_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: property-attribute-mismatch
  Regex: property attribute in class extension does not match the primary class
  SFINAE: SFINAE_Suppress
  Text: property attribute in class extension does not match the primary class
warn_property_attribute:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: property-attribute-mismatch
  Regex: '''(.*)'' attribute on property (.*) does not match the property inherited from (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%1'' attribute on property %0 does not match the property inherited from %2'
warn_property_getter_owning_mismatch:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: property declared as returning non-retained objects; getter returning retained objects
  SFINAE: SFINAE_Suppress
  Text: property declared as returning non-retained objects; getter returning retained objects
warn_property_implicitly_mismatched:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-implicit-mismatch
  Regex: primary property declaration is implicitly strong while redeclaration in class extension is weak
  SFINAE: SFINAE_Suppress
  Text: primary property declaration is implicitly strong while redeclaration in class extension is weak
warn_property_method_deprecated:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-declarations
  Regex: property access is using (.*) method which is deprecated
  SFINAE: SFINAE_Suppress
  Text: property access is using %0 method which is deprecated
warn_property_redecl_getter_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: property-attribute-mismatch
  Regex: getter name mismatch between property redeclaration \((.*)\) and its original declaration \((.*)\)
  SFINAE: SFINAE_Suppress
  Text: getter name mismatch between property redeclaration (%1) and its original declaration (%0)
warn_property_types_are_incompatible:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-property-type
  Regex: property type (.*) is incompatible with type (.*) inherited from (.*)
  SFINAE: SFINAE_Suppress
  Text: property type %0 is incompatible with type %1 inherited from %2
warn_protocol_property_mismatch:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: protocol-property-synthesis-ambiguity
  Regex: property (?:of type (.*)|with attribute '(.*)'|without attribute '(.*)'|with getter (.*)|with setter (.*)) was selected for synthesis
  SFINAE: SFINAE_Suppress
  Text: property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
warn_pt_guarded_pass_by_reference:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-reference
  Regex: passing the value that (.*) points to by reference requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
warn_ptr_arith_exceeds_bounds:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: array-bounds-pointer-arithmetic
  Regex: the pointer incremented by (.*) refers past the end of the array \(that contains (.*) elements?\)
  SFINAE: SFINAE_Suppress
  Text: the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
warn_ptr_arith_exceeds_max_addressable_bounds:
  ArgsCount: 5
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: array-bounds
  Regex: the pointer incremented by (.*) refers past the last possible element for an array in (.*)-bit address space containing (.*)-bit \((.*)-byte\) elements \(max possible (.*) elements?\)
  SFINAE: SFINAE_Suppress
  Text: the pointer incremented by %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
warn_ptr_arith_precedes_bounds:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: array-bounds-pointer-arithmetic
  Regex: the pointer decremented by (.*) refers before the beginning of the array
  SFINAE: SFINAE_Suppress
  Text: the pointer decremented by %0 refers before the beginning of the array
warn_ptr_independentclass_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: IndependentClass-attribute
  Regex: '''objc_independent_class'' attribute may be put on Objective-C object pointer type only; attribute is ignored'
  SFINAE: SFINAE_Suppress
  Text: '''objc_independent_class'' attribute may be put on Objective-C object pointer type only; attribute is ignored'
warn_qual_return_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: ignored-qualifiers
  Regex: '''(.*)'' type qualifiers? on return type (?:has|have) no effect'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' type qualifier%s1 on return type %plural{1:has|:have}1 no effect'
warn_quoted_include_in_framework_header:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Ignored
  Group: quoted-include-in-framework-header
  Regex: double-quoted include "(.*)" in framework header, expected angle-bracketed instead
  SFINAE: SFINAE_Suppress
  Text: double-quoted include "%0" in framework header, expected angle-bracketed instead
warn_readonly_property:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: property-attribute-mismatch
  Regex: attribute 'readonly' of property (.*) restricts attribute 'readwrite' of property inherited from (.*)
  SFINAE: SFINAE_Suppress
  Text: attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
warn_receiver_forward_class:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: receiver-forward-class
  Regex: receiver (.*) is a forward class and corresponding @interface may not exist
  SFINAE: SFINAE_Suppress
  Text: receiver %0 is a forward class and corresponding @interface may not exist
warn_receiver_forward_instance:
  ArgsCount: 1
  CategoryName: ARC Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: receiver-forward-class
  Regex: receiver type (.*) for instance message is a forward declaration
  SFINAE: SFINAE_Suppress
  Text: receiver type %0 for instance message is a forward declaration
warn_redecl_library_builtin:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incompatible-library-redeclaration
  Regex: incompatible redeclaration of library function (.*)
  SFINAE: SFINAE_Suppress
  Text: incompatible redeclaration of library function %0
warn_redeclaration_without_attribute_prev_attribute_ignored:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: inconsistent-dllimport
  Regex: '(.*) redeclared without (.*) attribute: previous (.*) ignored'
  SFINAE: SFINAE_Suppress
  Text: '%q0 redeclared without %1 attribute: previous %1 ignored'
warn_redeclaration_without_import_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: inconsistent-dllimport
  Regex: '(.*) redeclared without ''dllimport'' attribute: ''dllexport'' attribute added'
  SFINAE: SFINAE_Suppress
  Text: '%q0 redeclared without ''dllimport'' attribute: ''dllexport'' attribute added'
warn_redefine_extname_not_applied:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pragmas
  Regex: '#pragma redefine_extname is applicable to external C declarations only; not applied to (?:function|variable) (.*)'
  SFINAE: SFINAE_Suppress
  Text: '#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1'
warn_redefinition_in_param_list:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: visibility
  Regex: redefinition of (.*) will not be visible outside of this function
  SFINAE: SFINAE_Suppress
  Text: redefinition of %0 will not be visible outside of this function
warn_redundant_loop_iteration:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: for-loop-analysis
  Regex: variable (.*) is (?:decremented|incremented) both in the loop header and in the loop body
  SFINAE: SFINAE_Suppress
  Text: variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
warn_redundant_move_on_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: redundant-move
  Regex: redundant move in return statement
  SFINAE: SFINAE_Suppress
  Text: redundant move in return statement
warn_redundant_parens_around_declarator:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: redundant-parens
  Regex: redundant parentheses surrounding declarator
  SFINAE: SFINAE_Suppress
  Text: redundant parentheses surrounding declarator
warn_reference_field_is_uninit:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: uninitialized
  Regex: reference (.*) is not yet bound to a value when used here
  SFINAE: SFINAE_Suppress
  Text: reference %0 is not yet bound to a value when used here
warn_register_objc_catch_parm:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: '''register'' storage specifier on @catch parameter will be ignored'
  SFINAE: SFINAE_Suppress
  Text: '''register'' storage specifier on @catch parameter will be ignored'
warn_reinterpret_different_from_static:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: reinterpret-base-class
  Regex: '''reinterpret_cast'' (?:from|to) class (.*) (?:to|from) its (?:virtual base|base at non-zero offset) (.*) behaves differently from ''static_cast'''
  SFINAE: SFINAE_Suppress
  Text: '''reinterpret_cast'' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from ''static_cast'''
warn_related_result_type_compatibility_class:
  ArgsCount: 0
  CategoryName: Related Result Type Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: method is expected to return an instance of its class type (?:\$, but is declared to return \$|, but is declared to return different type)
  SFINAE: SFINAE_Suppress
  Text: method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
warn_related_result_type_compatibility_protocol:
  ArgsCount: 1
  CategoryName: Related Result Type Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: protocol method is expected to return an instance of the implementing class, but is declared to return (.*)
  SFINAE: SFINAE_Suppress
  Text: protocol method is expected to return an instance of the implementing class, but is declared to return %0
warn_remainder_division_by_zero:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: division-by-zero
  Regex: (?:remainder|division) by zero is undefined
  SFINAE: SFINAE_Suppress
  Text: '%select{remainder|division}0 by zero is undefined'
warn_require_const_init_added_too_late:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''require_constant_initialization'' attribute added after initialization of variable'
  SFINAE: SFINAE_Suppress
  Text: '''require_constant_initialization'' attribute added after initialization of variable'
warn_reserved_extern_symbol:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: reserved-identifier
  Regex: identifier (.*) is reserved because (?:<ERROR>|it starts with '_' at global scope|it starts with '_' and has C language linkage|it starts with '__'|it starts with '_' followed by a capital letter|it contains '__')
  SFINAE: SFINAE_Suppress
  Text: identifier %0 is reserved because %select{<ERROR>|it starts with '_' at global scope|it starts with '_' and has C language linkage|it starts with '__'|it starts with '_' followed by a capital letter|it contains '__'}1
warn_ret_addr_label:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-stack-address
  Regex: returning address of label, which is local
  SFINAE: SFINAE_Suppress
  Text: returning address of label, which is local
warn_ret_local_temp_addr_ref:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-stack-address
  Regex: returning (?:address of|reference to) local temporary object
  SFINAE: SFINAE_Suppress
  Text: returning %select{address of|reference to}0 local temporary object
warn_ret_stack_addr_ref:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-stack-address
  Regex: (?:address of|reference to) stack memory associated with (?:local variable|parameter) (.*) returned
  SFINAE: SFINAE_Suppress
  Text: '%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned'
warn_return_missing_expr:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: return-type
  Regex: non-void (?:function|method) (.*) should return a value
  SFINAE: SFINAE_Suppress
  Text: non-void %select{function|method}1 %0 should return a value
warn_return_typestate_for_unconsumable_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: return state set for an unconsumable type '(.*)'
  SFINAE: SFINAE_Suppress
  Text: return state set for an unconsumable type '%0'
warn_return_typestate_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: return value not in expected state; expected '(.*)', observed '(.*)'
  SFINAE: SFINAE_Suppress
  Text: return value not in expected state; expected '%0', observed '%1'
warn_return_value_size:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: large-by-value-copy
  Regex: return value of (.*) is a large \((.*) bytes\) pass-by-value object; pass it by reference instead \?
  SFINAE: SFINAE_Suppress
  Text: return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
warn_return_value_udt:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type-c-linkage
  Regex: (.*) has C-linkage specified, but returns user-defined type (.*) which is incompatible with C
  SFINAE: SFINAE_Suppress
  Text: '%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C'
warn_return_value_udt_incomplete:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: return-type-c-linkage
  Regex: (.*) has C-linkage specified, but returns incomplete type (.*) which could be incompatible with C
  SFINAE: SFINAE_Suppress
  Text: '%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C'
warn_riscv_repeated_interrupt_attribute:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: repeated RISC-V 'interrupt' attribute
  SFINAE: SFINAE_Suppress
  Text: repeated RISC-V 'interrupt' attribute
warn_root_inst_method_not_found:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-method-access
  Regex: instance method (.*) is being used on 'Class' which is not in the root class
  SFINAE: SFINAE_Suppress
  Text: instance method %0 is being used on 'Class' which is not in the root class
warn_sampler_initializer_invalid_bits:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: spir-compat
  Regex: sampler initializer has invalid (.*) bits
  SFINAE: SFINAE_Suppress
  Text: sampler initializer has invalid %0 bits
warn_scanf_nonzero_width:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: zero field width in scanf format string is unused
  SFINAE: SFINAE_Suppress
  Text: zero field width in scanf format string is unused
warn_scanf_scanlist_incomplete:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: format
  Regex: no closing '\]' for '%\[' in scanf format string
  SFINAE: SFINAE_Suppress
  Text: no closing ']' for '%%[' in scanf format string
warn_second_arg_of_va_start_not_last_named_param:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: varargs
  Regex: second argument to 'va_start' is not the last named parameter
  SFINAE: SFINAE_Suppress
  Text: second argument to 'va_start' is not the last named parameter
warn_second_parameter_to_va_arg_never_compatible:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: varargs
  Regex: second argument to 'va_arg' is of promotable type (.*); this va_arg has undefined behavior because arguments will be promoted to (.*)
  SFINAE: SFINAE_Suppress
  Text: second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
warn_second_parameter_to_va_arg_not_pod:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: non-pod-varargs
  Regex: second argument to 'va_arg' is of non-POD type (.*)
  SFINAE: SFINAE_Suppress
  Text: second argument to 'va_arg' is of non-POD type %0
warn_second_parameter_to_va_arg_ownership_qualified:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: non-pod-varargs
  Regex: second argument to 'va_arg' is of ARC ownership-qualified type (.*)
  SFINAE: SFINAE_Suppress
  Text: second argument to 'va_arg' is of ARC ownership-qualified type %0
warn_self_assignment_builtin:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: self-assign
  Regex: explicitly assigning value of variable of type (.*) to itself
  SFINAE: SFINAE_Suppress
  Text: explicitly assigning value of variable of type %0 to itself
warn_self_assignment_overloaded:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: self-assign-overloaded
  Regex: explicitly assigning value of variable of type (.*) to itself
  SFINAE: SFINAE_Suppress
  Text: explicitly assigning value of variable of type %0 to itself
warn_self_move:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: self-move
  Regex: explicitly moving variable of type (.*) to itself
  SFINAE: SFINAE_Suppress
  Text: explicitly moving variable of type %0 to itself
warn_semicolon_before_method_body:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Ignored
  Group: semicolon-before-method-body
  Regex: semicolon before method body is ignored
  SFINAE: SFINAE_Suppress
  Text: semicolon before method body is ignored
warn_setter_getter_impl_required:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-implementation
  Regex: property (.*) requires method (.*) to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
  SFINAE: SFINAE_Suppress
  Text: property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
warn_setter_getter_impl_required_in_category:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-property-implementation
  Regex: property (.*) requires method (.*) to be defined - use @dynamic or provide a method implementation in this category
  SFINAE: SFINAE_Suppress
  Text: property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
warn_shadow_field:
  ArgsCount: 3
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: shadow-field
  Regex: (?:parameter|non-static data member) (.*) (?:|of (.*) )shadows member inherited from type (.*)
  SFINAE: SFINAE_Suppress
  Text: '%select{parameter|non-static data member}3 %0 %select{|of %1 }3shadows member inherited from type %2'
warn_shift_gt_typewidth:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: shift-count-overflow
  Regex: shift count >= width of type
  SFINAE: SFINAE_Suppress
  Text: shift count >= width of type
warn_shift_lhs_negative:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: shift-negative-value
  Regex: shifting a negative signed value is undefined
  SFINAE: SFINAE_Suppress
  Text: shifting a negative signed value is undefined
warn_shift_negative:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: shift-count-negative
  Regex: shift count is negative
  SFINAE: SFINAE_Suppress
  Text: shift count is negative
warn_shift_result_gt_typewidth:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: shift-overflow
  Regex: signed shift result \((.*)\) requires (.*) bits to represent, but (.*) only has (.*) bits
  SFINAE: SFINAE_Suppress
  Text: signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
warn_shift_result_sets_sign_bit:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: shift-sign-overflow
  Regex: signed shift result \((.*)\) sets the sign bit of the shift expression's type \((.*)\) and becomes negative
  SFINAE: SFINAE_Suppress
  Text: signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
warn_side_effects_typeid:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: potentially-evaluated-expression
  Regex: expression with side effects will be evaluated despite being used as an operand to 'typeid'
  SFINAE: SFINAE_Suppress
  Text: expression with side effects will be evaluated despite being used as an operand to 'typeid'
warn_side_effects_unevaluated_context:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unevaluated-expression
  Regex: expression with side effects has no effect in an unevaluated context
  SFINAE: SFINAE_Suppress
  Text: expression with side effects has no effect in an unevaluated context
warn_signed_bitfield_enum_conversion:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bitfield-enum-conversion
  Regex: signed bit-field (.*) needs an extra bit to represent the largest positive enumerators of (.*)
  SFINAE: SFINAE_Suppress
  Text: signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
warn_sizeof_array_decay:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sizeof-array-decay
  Regex: sizeof on pointer operation will return size of (.*) instead of (.*)
  SFINAE: SFINAE_Suppress
  Text: sizeof on pointer operation will return size of %0 instead of %1
warn_sizeof_array_param:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sizeof-array-argument
  Regex: sizeof on array function parameter will return size of (.*) instead of (.*)
  SFINAE: SFINAE_Suppress
  Text: sizeof on array function parameter will return size of %0 instead of %1
warn_sizeof_pointer_expr_memaccess:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sizeof-pointer-memaccess
  Regex: '''(.*)'' call operates on objects of type (.*) while the size is based on a different type (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' call operates on objects of type %1 while the size is based on a different type %2'
warn_sizeof_pointer_expr_memaccess_note:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_NOTE
  Component: Sema
  DefaultSeverity: SEV_Fatal
  Group: None
  Regex: did you mean to (?:dereference the argument to 'sizeof' \(and multiply it by the number of elements\)|remove the addressof in the argument to 'sizeof' \(and multiply it by the number of elements\)|provide an explicit length)\?
  SFINAE: SFINAE_Suppress
  Text: did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
warn_sizeof_pointer_type_memaccess:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sizeof-pointer-memaccess
  Regex: argument to 'sizeof' in (.*) call is the same pointer type (.*) as the (?:destination|source); expected (.*) or an explicit length
  SFINAE: SFINAE_Suppress
  Text: argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
warn_slash_u_filename:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: slash-u-filename
  Regex: '''/U(.*)'' treated as the ''/U'' option'
  SFINAE: SFINAE_Suppress
  Text: '''/U%0'' treated as the ''/U'' option'
warn_slh_does_not_support_asm_goto:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: slh-asm-goto
  Regex: Speculative load hardening does not protect functions with asm goto
  SFINAE: SFINAE_Suppress
  Text: Speculative load hardening does not protect functions with asm goto
warn_some_initializers_out_of_order:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: reorder-ctor
  Regex: initializer order does not match the declaration order
  SFINAE: SFINAE_Suppress
  Text: initializer order does not match the declaration order
warn_sometimes_uninit_var:
  ArgsCount: 6
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: sometimes-uninitialized
  Regex: variable (.*) is (?:used|captured) uninitialized whenever (?:'(.*)' condition is (?:true|false)|'(.*)' loop (?:is entered|exits because its condition is false)|'(.*)' loop (?:condition is true|exits because its condition is false)|switch (.*) is taken|its declaration is reached|(.*) is called)
  SFINAE: SFINAE_Suppress
  Text: variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
warn_stack_clash_protection_inline_asm:
  ArgsCount: 0
  CategoryName: Inline Assembly Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: stack-protector
  Regex: Unable to protect inline asm that clobbers stack pointer against stack clash
  SFINAE: SFINAE_Suppress
  Text: Unable to protect inline asm that clobbers stack pointer against stack clash
warn_stack_exhausted:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: stack-exhausted
  Regex: stack nearly exhausted; compilation time may suffer, and crashes due to stack overflow are likely
  SFINAE: SFINAE_Report
  Text: stack nearly exhausted; compilation time may suffer, and crashes due to stack overflow are likely
warn_standalone_specifier:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: missing-declarations
  Regex: '''(.*)'' ignored on this declaration'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' ignored on this declaration'
warn_static_array_too_small:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: array-bounds
  Regex: array argument is too small; (?:contains (.*) elements|is of size (.*)), callee requires at least (.*)
  SFINAE: SFINAE_Suppress
  Text: array argument is too small; %select{contains %0 elements|is of size %0}2, callee requires at least %1
warn_static_inline_explicit_inst_ignored:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: static-inline-explicit-instantiation
  Regex: ignoring '(?:static|inline)' keyword on explicit template instantiation
  SFINAE: SFINAE_Suppress
  Text: ignoring '%select{static|inline}0' keyword on explicit template instantiation
warn_static_local_in_extern_inline:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: static-local-in-inline
  Regex: non-constant static local variable in inline function may be different in different files
  SFINAE: SFINAE_Suppress
  Text: non-constant static local variable in inline function may be different in different files
warn_static_main:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: main
  Regex: '''main'' should not be declared static'
  SFINAE: SFINAE_Suppress
  Text: '''main'' should not be declared static'
warn_static_self_reference_in_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: static-self-init
  Regex: static variable (.*) is suspiciously used within its own initialization
  SFINAE: SFINAE_Suppress
  Text: static variable %0 is suspiciously used within its own initialization
warn_stdc_fenv_round_not_supported:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: unknown-pragmas
  Regex: pragma STDC FENV_ROUND is not supported
  SFINAE: SFINAE_Suppress
  Text: pragma STDC FENV_ROUND is not supported
warn_stdc_unknown_rounding_mode:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-pragmas
  Regex: invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored
  SFINAE: SFINAE_Suppress
  Text: invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored
warn_strict_multiple_method_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: strict-selector-match
  Regex: multiple methods named (.*) found
  SFINAE: SFINAE_Suppress
  Text: multiple methods named %0 found
warn_strict_potentially_direct_selector_expression:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: strict-potentially-direct-selector
  Regex: '@selector expression formed with potentially direct selector (.*)'
  SFINAE: SFINAE_Suppress
  Text: '@selector expression formed with potentially direct selector %0'
warn_strict_prototypes:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: strict-prototypes
  Regex: this (?:function declaration is not|block declaration is not|old-style function definition is not preceded by) a prototype
  SFINAE: SFINAE_Suppress
  Text: this %select{function declaration is not|block declaration is not|old-style function definition is not preceded by}0 a prototype
warn_string_plus_char:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: string-plus-char
  Regex: adding (.*) to a string pointer does not append to the string
  SFINAE: SFINAE_Suppress
  Text: adding %0 to a string pointer does not append to the string
warn_string_plus_int:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: string-plus-int
  Regex: adding (.*) to a string does not append to the string
  SFINAE: SFINAE_Suppress
  Text: adding %0 to a string does not append to the string
warn_stringcompare:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: string-compare
  Regex: result of comparison against (?:a string literal|@encode) is unspecified \(use an explicit string comparison function instead\)
  SFINAE: SFINAE_Suppress
  Text: result of comparison against %select{a string literal|@encode}0 is unspecified (use an explicit string comparison function instead)
warn_strlcpycat_wrong_size:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: strlcpy-strlcat-size
  Regex: size argument in (.*) call appears to be size of the source; expected the size of the destination
  SFINAE: SFINAE_Suppress
  Text: size argument in %0 call appears to be size of the source; expected the size of the destination
warn_strncat_large_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: strncat-size
  Regex: the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
  SFINAE: SFINAE_Suppress
  Text: the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
warn_strncat_src_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: strncat-size
  Regex: size argument in 'strncat' call appears to be size of the source
  SFINAE: SFINAE_Suppress
  Text: size argument in 'strncat' call appears to be size of the source
warn_strncat_wrong_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: strncat-size
  Regex: the value of the size argument to 'strncat' is wrong
  SFINAE: SFINAE_Suppress
  Text: the value of the size argument to 'strncat' is wrong
warn_struct_class_previous_tag_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: mismatched-tags
  Regex: (.*) defined as (?:a struct|an interface|a class)(?:| template) here but previously declared as (?:a struct|an interface|a class)(?:| template); this is valid, but may result in linker errors under the Microsoft C\+\+ ABI
  SFINAE: SFINAE_Suppress
  Text: '%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI'
warn_struct_class_tag_mismatch:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: mismatched-tags
  Regex: (?:struct|interface|class)(?:| template) (.*) was previously declared as a (?:struct|interface|class)(?:| template); this is valid, but may result in linker errors under the Microsoft C\+\+ ABI
  SFINAE: SFINAE_Suppress
  Text: '%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI'
warn_sub_ptr_zero_size_types:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: pointer-arith
  Regex: subtraction of pointers to type (.*) of zero size has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: subtraction of pointers to type %0 of zero size has undefined behavior
warn_subscript_is_char:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: char-subscripts
  Regex: array subscript is of type 'char'
  SFINAE: SFINAE_Suppress
  Text: array subscript is of type 'char'
warn_suggest_destructor_marked_not_override_overriding:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: suggest-destructor-override
  Regex: (.*) overrides a destructor but is not marked 'override'
  SFINAE: SFINAE_Suppress
  Text: '%sub{warn_destructor_marked_not_override_overriding}0'
warn_suggest_function_marked_not_override_overriding:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: suggest-override
  Regex: (.*) overrides a member function but is not marked 'override'
  SFINAE: SFINAE_Suppress
  Text: '%sub{warn_function_marked_not_override_overriding}0'
warn_suggest_noreturn_block:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: missing-noreturn
  Regex: block could be declared with attribute 'noreturn'
  SFINAE: SFINAE_Suppress
  Text: block could be declared with attribute 'noreturn'
warn_suggest_noreturn_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: missing-noreturn
  Regex: (?:function|method) (.*) could be declared with attribute 'noreturn'
  SFINAE: SFINAE_Suppress
  Text: '%select{function|method}0 %1 could be declared with attribute ''noreturn'''
warn_superclass_variable_sized_type_not_at_end:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-flexible-array
  Regex: field (.*) can overwrite instance variable (.*) with variable sized type (.*) in superclass (.*)
  SFINAE: SFINAE_Suppress
  Text: field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
warn_suspicious_bzero_size:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: suspicious-bzero
  Regex: '''size'' argument to bzero is ''0'''
  SFINAE: SFINAE_Suppress
  Text: '''size'' argument to bzero is ''0'''
warn_suspicious_sizeof_memset:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: memset-transposed-args
  Regex: (?:'size' argument to memset is '0'|setting buffer to a 'sizeof' expression); did you mean to transpose the last two arguments\?
  SFINAE: SFINAE_Suppress
  Text: '%select{''size'' argument to memset is ''0''|setting buffer to a ''sizeof'' expression}0; did you mean to transpose the last two arguments?'
warn_sycl_kernel_invalid_template_param_type:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: template parameter of a function template with the 'sycl_kernel' attribute cannot be a non-type template parameter
  SFINAE: SFINAE_Suppress
  Text: template parameter of a function template with the 'sycl_kernel' attribute cannot be a non-type template parameter
warn_sycl_kernel_num_of_function_params:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: function template with 'sycl_kernel' attribute must have a single parameter
  SFINAE: SFINAE_Suppress
  Text: function template with 'sycl_kernel' attribute must have a single parameter
warn_sycl_kernel_num_of_template_params:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''sycl_kernel'' attribute only applies to a function template with at least two template parameters'
  SFINAE: SFINAE_Suppress
  Text: '''sycl_kernel'' attribute only applies to a function template with at least two template parameters'
warn_sycl_kernel_return_type:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: function template with 'sycl_kernel' attribute must have a 'void' return type
  SFINAE: SFINAE_Suppress
  Text: function template with 'sycl_kernel' attribute must have a 'void' return type
warn_sync_fetch_and_nand_semantics_change:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: sync-fetch-and-nand-semantics-changed
  Regex: the semantics of this intrinsic changed with GCC version 4\.4 - the newer semantics are provided here
  SFINAE: SFINAE_Suppress
  Text: the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
warn_taking_address_of_packed_member:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: address-of-packed-member
  Regex: taking address of packed member (.*) of class or structure (.*) may result in an unaligned pointer value
  SFINAE: SFINAE_Suppress
  Text: taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
warn_target_clone_duplicate_options:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: function-multiversion
  Regex: version list contains duplicate entries
  SFINAE: SFINAE_Suppress
  Text: version list contains duplicate entries
warn_target_clone_mixed_values:
  ArgsCount: 0
  CategoryName: ''
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: target-clones-mixed-specifiers
  Regex: mixing 'target_clones' specifier mechanisms is permitted for GCC compatibility; use a comma separated sequence of string literals, or a string literal containing a comma-separated list of versions
  SFINAE: SFINAE_Suppress
  Text: mixing 'target_clones' specifier mechanisms is permitted for GCC compatibility; use a comma separated sequence of string literals, or a string literal containing a comma-separated list of versions
warn_target_unsupported_abs2008:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-abs
  Regex: ignoring '-mabs=2008' option because the '(.*)' architecture does not support it
  SFINAE: SFINAE_Suppress
  Text: ignoring '-mabs=2008' option because the '%0' architecture does not support it
warn_target_unsupported_abslegacy:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-abs
  Regex: ignoring '-mabs=legacy' option because the '(.*)' architecture does not support it
  SFINAE: SFINAE_Suppress
  Text: ignoring '-mabs=legacy' option because the '%0' architecture does not support it
warn_target_unsupported_branch_protection_attribute:
  ArgsCount: 1
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: branch-protection
  Regex: ignoring the 'branch-protection' attribute because the '(.*)' architecture does not support it
  SFINAE: SFINAE_Suppress
  Text: ignoring the 'branch-protection' attribute because the '%0' architecture does not support it
warn_target_unsupported_compact_branches:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-cb
  Regex: ignoring '-mcompact-branches=' option because the '(.*)' architecture does not support it
  SFINAE: SFINAE_Suppress
  Text: ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
warn_target_unsupported_extension:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: invalid-command-line-argument
  Regex: ignoring extension '(.*)' because the '(.*)' architecture does not support it
  SFINAE: SFINAE_Suppress
  Text: ignoring extension '%0' because the '%1' architecture does not support it
warn_target_unsupported_nan2008:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-nan
  Regex: ignoring '-mnan=2008' option because the '(.*)' architecture does not support it
  SFINAE: SFINAE_Suppress
  Text: ignoring '-mnan=2008' option because the '%0' architecture does not support it
warn_target_unsupported_nanlegacy:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: unsupported-nan
  Regex: ignoring '-mnan=legacy' option because the '(.*)' architecture does not support it
  SFINAE: SFINAE_Suppress
  Text: ignoring '-mnan=legacy' option because the '%0' architecture does not support it
warn_tautological_bool_compare:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-constant-compare
  Regex: result of comparison of (?:constant (.*)|true|false) with (?:expression of type (.*)|boolean expression) is always (.*)
  SFINAE: SFINAE_Suppress
  Text: result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
warn_tautological_compare_objc_bool:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-objc-bool-compare
  Regex: result of comparison of constant (.*) with expression of type 'BOOL' is always (.*), as the only well defined values for 'BOOL' are YES and NO
  SFINAE: SFINAE_Suppress
  Text: result of comparison of constant %0 with expression of type 'BOOL' is always %1, as the only well defined values for 'BOOL' are YES and NO
warn_tautological_compare_value_range:
  ArgsCount: 6
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-value-range-compare
  Regex: result of comparison of (?:(.*)|(.*)-bit (?:signed|unsigned) value) (.*) (?:(.*)-bit (?:signed|unsigned) value|(.*)) is always (.*)
  SFINAE: SFINAE_Suppress
  Text: result of comparison of %select{%4|%sub{subst_int_range}1,2}0 %3 %select{%sub{subst_int_range}1,2|%4}0 is always %5
warn_tautological_constant_compare:
  ArgsCount: 6
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-type-limit-compare
  Regex: result of comparison (?:(.*)|(.*)) (.*) (?:(.*)|(.*)) is always (.*)
  SFINAE: SFINAE_Suppress
  Text: result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
warn_tautological_overlap_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-overlap-compare
  Regex: overlapping comparisons always evaluate to (?:false|true)
  SFINAE: SFINAE_Suppress
  Text: overlapping comparisons always evaluate to %select{false|true}0
warn_tcb_enforcement_violation:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tcb-enforcement
  Regex: calling (.*) is a violation of trusted computing base '(.*)'
  SFINAE: SFINAE_Suppress
  Text: calling %0 is a violation of trusted computing base '%1'
warn_template_arg_negative:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: conversion
  Regex: non-type template argument with value '(.*)' converted to '(.*)' for unsigned template parameter of type (.*)
  SFINAE: SFINAE_Suppress
  Text: non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
warn_template_arg_too_large:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: conversion
  Regex: non-type template argument value '(.*)' truncated to '(.*)' for template parameter of type (.*)
  SFINAE: SFINAE_Suppress
  Text: non-type template argument value '%0' truncated to '%1' for template parameter of type %2
warn_template_export_unsupported:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: exported templates are unsupported
  SFINAE: SFINAE_Suppress
  Text: exported templates are unsupported
warn_template_qualified_friend_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unsupported-friend
  Regex: dependent nested name specifier '(.*)' for friend template declaration is not supported; ignoring this friend declaration
  SFINAE: SFINAE_Suppress
  Text: dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
warn_template_qualified_friend_unsupported:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unsupported-friend
  Regex: dependent nested name specifier '(.*)' for friend class declaration is not supported; turning off access control for (.*)
  SFINAE: SFINAE_Suppress
  Text: dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
warn_template_spec_extra_headers:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: extraneous template parameter list in template specialization
  SFINAE: SFINAE_Suppress
  Text: extraneous template parameter list in template specialization
warn_tentative_incomplete_array:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: tentative array definition assumed to have one element
  SFINAE: SFINAE_Suppress
  Text: tentative array definition assumed to have one element
warn_this_bool_conversion:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: undefined-bool-conversion
  Regex: '''this'' pointer cannot be null in well-defined C\+\+ code; pointer may be assumed to always convert to true'
  SFINAE: SFINAE_Suppress
  Text: '''this'' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true'
warn_this_null_compare:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: tautological-undefined-compare
  Regex: '''this'' pointer cannot be null in well-defined C\+\+ code; comparison may be assumed to always evaluate to (?:true|false)'
  SFINAE: SFINAE_Suppress
  Text: '''this'' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0'
warn_thread_attribute_argument_not_lockable:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-attributes
  Regex: (.*) attribute requires arguments whose type is annotated with 'capability' attribute; type here is (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute requires arguments whose type is annotated with ''capability'' attribute; type here is %1'
warn_thread_attribute_decl_not_lockable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-attributes
  Regex: (.*) attribute can only be applied in a context annotated with 'capability' attribute
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute can only be applied in a context annotated with ''capability'' attribute'
warn_thread_attribute_decl_not_pointer:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-attributes
  Regex: (.*) only applies to pointer types; type here is (.*)
  SFINAE: SFINAE_Suppress
  Text: '%0 only applies to pointer types; type here is %1'
warn_thread_attribute_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-attributes
  Regex: ignoring (.*) attribute because its argument is invalid
  SFINAE: SFINAE_Suppress
  Text: ignoring %0 attribute because its argument is invalid
warn_thread_attribute_not_on_capability_member:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-attributes
  Regex: (.*) attribute without capability arguments refers to 'this', but (.*) isn't annotated with 'capability' or 'scoped_lockable' attribute
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute without capability arguments refers to ''this'', but %1 isn''t annotated with ''capability'' or ''scoped_lockable'' attribute'
warn_thread_attribute_not_on_non_static_member:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-attributes
  Regex: (.*) attribute without capability arguments can only be applied to non-static methods of a class
  SFINAE: SFINAE_Suppress
  Text: '%0 attribute without capability arguments can only be applied to non-static methods of a class'
warn_thread_safety_beta:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-beta
  Regex: thread safety beta warning
  SFINAE: SFINAE_Suppress
  Text: thread safety beta warning
warn_thread_safety_verbose:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-verbose
  Regex: thread safety verbose warning
  SFINAE: SFINAE_Suppress
  Text: thread safety verbose warning
warn_throw_in_noexcept_func:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: exceptions
  Regex: (.*) has a non-throwing exception specification but can still throw
  SFINAE: SFINAE_Suppress
  Text: '%0 has a non-throwing exception specification but can still throw'
warn_throw_underaligned_obj:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: underaligned-exception-object
  Regex: underaligned exception object thrown
  SFINAE: SFINAE_Suppress
  Text: underaligned exception object thrown
warn_transparent_union_attribute_field_size_align:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (?:alignment|size) of field (.*) \((.*) bits\) does not match the (?:alignment|size) of the first field in transparent union; transparent_union attribute ignored
  SFINAE: SFINAE_Suppress
  Text: '%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored'
warn_transparent_union_attribute_floating:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: first field of a transparent union cannot have (?:floating point|vector) type (.*); transparent_union attribute ignored
  SFINAE: SFINAE_Suppress
  Text: first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
warn_transparent_union_attribute_not_definition:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: transparent_union attribute can only be applied to a union definition; attribute ignored
  SFINAE: SFINAE_Suppress
  Text: transparent_union attribute can only be applied to a union definition; attribute ignored
warn_transparent_union_attribute_zero_fields:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: transparent union definition must contain at least one field; transparent_union attribute ignored
  SFINAE: SFINAE_Suppress
  Text: transparent union definition must contain at least one field; transparent_union attribute ignored
warn_type_attribute_wrong_type:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''(.*)'' only applies to (?:function|pointer|Objective-C object or block pointer) types; type here is (.*)'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2'
warn_type_safety_null_pointer_required:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: type-safety
  Regex: specified (.*) type tag requires a null pointer
  SFINAE: SFINAE_Suppress
  Text: specified %0 type tag requires a null pointer
warn_type_safety_type_mismatch:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: type-safety
  Regex: argument type (.*) doesn't match specified (.*) type tag (?:that requires (.*)|)
  SFINAE: SFINAE_Suppress
  Text: argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
warn_type_tag_for_datatype_wrong_kind:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: type-safety
  Regex: this type tag was not designed to be used with this function
  SFINAE: SFINAE_Suppress
  Text: this type tag was not designed to be used with this function
warn_typecheck_function_qualifiers_ignored:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-qualifiers
  Regex: '''(.*)'' qualifier on function type (.*) has no effect'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' qualifier on function type %1 has no effect'
warn_typecheck_function_qualifiers_unspecified:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: '''(.*)'' qualifier on function type (.*) has unspecified behavior'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' qualifier on function type %1 has unspecified behavior'
warn_typecheck_ordered_comparison_of_function_pointers:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ordered-compare-function-pointers
  Regex: ordered comparison of function pointers \((.*) and (.*)\)
  SFINAE: SFINAE_Suppress
  Text: ordered comparison of function pointers (%0 and %1)
warn_typecheck_reference_qualifiers:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-reference-qualifiers
  Regex: '''(.*)'' qualifier on reference type (.*) has no effect'
  SFINAE: SFINAE_Suppress
  Text: '''%0'' qualifier on reference type %1 has no effect'
warn_typecheck_vector_element_sizes_not_equal:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Error
  Group: vec-elem-size
  Regex: vector operands do not have the same elements sizes \((.*) and (.*)\)
  SFINAE: SFINAE_Suppress
  Text: vector operands do not have the same elements sizes (%0 and %1)
warn_ucn_escape_incomplete:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode
  Regex: incomplete universal character name; treating as '\\' followed by identifier
  SFINAE: SFINAE_Suppress
  Text: incomplete universal character name; treating as '\' followed by identifier
warn_ucn_escape_no_digits:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode
  Regex: \\(.*) used with no following hex digits; treating as '\\' followed by identifier
  SFINAE: SFINAE_Suppress
  Text: \%0 used with no following hex digits; treating as '\' followed by identifier
warn_ucn_escape_surrogate:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode
  Regex: universal character name refers to a surrogate character
  SFINAE: SFINAE_Suppress
  Text: universal character name refers to a surrogate character
warn_ucn_not_valid_in_c89:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode
  Regex: universal character names are only valid in C99 or C\+\+; treating as '\\' followed by identifier
  SFINAE: SFINAE_Suppress
  Text: universal character names are only valid in C99 or C++; treating as '\' followed by identifier
warn_ucn_not_valid_in_c89_literal:
  ArgsCount: 0
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_EXTENSION
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode
  Regex: universal character names are only valid in C99 or C\+\+
  SFINAE: SFINAE_Suppress
  Text: universal character names are only valid in C99 or C++
warn_unaligned_access:
  ArgsCount: 4
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Ignored
  Group: unaligned-access
  Regex: field (.*) within (.*) is less aligned than (.*) and is usually due to (.*) being packed, which can lead to unaligned accesses
  SFINAE: SFINAE_Suppress
  Text: field %1 within %0 is less aligned than %2 and is usually due to %0 being packed, which can lead to unaligned accesses
warn_unannotated_fallthrough:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-fallthrough
  Regex: unannotated fall-through between switch labels
  SFINAE: SFINAE_Suppress
  Text: unannotated fall-through between switch labels
warn_unannotated_fallthrough_per_function:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: implicit-fallthrough-per-function
  Regex: unannotated fall-through between switch labels in partly-annotated function
  SFINAE: SFINAE_Suppress
  Text: unannotated fall-through between switch labels in partly-annotated function
warn_unavailable_def:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: deprecated-implementations
  Regex: implementing unavailable method
  SFINAE: SFINAE_Suppress
  Text: implementing unavailable method
warn_unavailable_fwdclass_message:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unavailable-declarations
  Regex: (.*) may be unavailable because the receiver type is unknown
  SFINAE: SFINAE_Suppress
  Text: '%0 may be unavailable because the receiver type is unknown'
warn_uncovered_module_header:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: incomplete-umbrella
  Regex: umbrella header for module '(.*)' does not include header '(.*)'
  SFINAE: SFINAE_Suppress
  Text: umbrella header for module '%0' does not include header '%1'
warn_undeclared_selector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: undeclared-selector
  Regex: undeclared selector (.*)
  SFINAE: SFINAE_Suppress
  Text: undeclared selector %0
warn_undeclared_selector_with_typo:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: undeclared-selector
  Regex: undeclared selector (.*); did you mean (.*)\?
  SFINAE: SFINAE_Suppress
  Text: undeclared selector %0; did you mean %1?
warn_undef_interface:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: cannot find interface declaration for (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot find interface declaration for %0
warn_undef_interface_suggest:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: cannot find interface declaration for (.*); did you mean (.*)\?
  SFINAE: SFINAE_Suppress
  Text: cannot find interface declaration for %0; did you mean %1?
warn_undef_method_impl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: incomplete-implementation
  Regex: method definition for (.*) not found
  SFINAE: SFINAE_Suppress
  Text: method definition for %0 not found
warn_undef_protocolref:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: cannot find protocol definition for (.*)
  SFINAE: SFINAE_Suppress
  Text: cannot find protocol definition for %0
warn_undefined_inline:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: undefined-inline
  Regex: inline function (.*) is not defined
  SFINAE: SFINAE_Suppress
  Text: inline function %q0 is not defined
warn_undefined_internal:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: undefined-internal
  Regex: (?:function|variable) (.*) has internal linkage but is not defined
  SFINAE: SFINAE_Suppress
  Text: '%select{function|variable}0 %q1 has internal linkage but is not defined'
warn_undefined_reinterpret_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: undefined-reinterpret-cast
  Regex: reinterpret_cast from (.*) to (.*) has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: reinterpret_cast from %0 to %1 has undefined behavior
warn_unguarded_availability:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unguarded-availability
  Regex: (.*) is only available on (.*) (.*) or newer
  SFINAE: SFINAE_Suppress
  Text: '%0 is only available on %1 %2 or newer'
warn_unguarded_availability_new:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unguarded-availability-new
  Regex: (.*) is only available on (.*) (.*) or newer
  SFINAE: SFINAE_Suppress
  Text: '%0 is only available on %1 %2 or newer'
warn_unhandled_ms_attribute_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: __declspec attribute (.*) is not supported
  SFINAE: SFINAE_Suppress
  Text: __declspec attribute %0 is not supported
warn_unimplemented_protocol_method:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: protocol
  Regex: method (.*) in protocol (.*) not implemented
  SFINAE: SFINAE_Suppress
  Text: method %0 in protocol %1 not implemented
warn_unimplemented_selector:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: selector
  Regex: no method with selector (.*) is implemented in this translation unit
  SFINAE: SFINAE_Suppress
  Text: no method with selector %0 is implemented in this translation unit
warn_uninit_byref_blockvar_captured_by_block:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: uninitialized
  Regex: block pointer variable (.*) is (?:uninitialized|null) when captured by block
  SFINAE: SFINAE_Suppress
  Text: block pointer variable %0 is %select{uninitialized|null}1 when captured by block
warn_uninit_const_reference:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: uninitialized-const-reference
  Regex: variable (.*) is uninitialized when passed as a const reference argument here
  SFINAE: SFINAE_Suppress
  Text: variable %0 is uninitialized when passed as a const reference argument here
warn_uninit_self_reference_in_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: uninitialized
  Regex: variable (.*) is uninitialized when used within its own initialization
  SFINAE: SFINAE_Suppress
  Text: variable %0 is uninitialized when used within its own initialization
warn_uninit_self_reference_in_reference_init:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: uninitialized
  Regex: reference (.*) is not yet bound to a value when used within its own initialization
  SFINAE: SFINAE_Suppress
  Text: reference %0 is not yet bound to a value when used within its own initialization
warn_uninit_var:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: uninitialized
  Regex: variable (.*) is uninitialized when (?:used here|captured by block)
  SFINAE: SFINAE_Suppress
  Text: variable %0 is uninitialized when %select{used here|captured by block}1
warn_unknown_attribute_ignored:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Common
  DefaultSeverity: SEV_Warning
  Group: unknown-attributes
  Regex: unknown attribute (.*) ignored
  SFINAE: SFINAE_Suppress
  Text: unknown attribute %0 ignored
warn_unknown_comment_command_name:
  ArgsCount: 0
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation-unknown-command
  Regex: unknown command tag name
  SFINAE: SFINAE_Suppress
  Text: unknown command tag name
warn_unknown_declare_variant_isa_trait:
  ArgsCount: 1
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: source-uses-openmp
  Regex: isa trait '(.*)' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
  SFINAE: SFINAE_Suppress
  Text: isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
warn_unknown_diag_option:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: unknown-warning-option
  Regex: unknown (?:warning|remark) option '(.*)'(?:|; did you mean '(.*)'\?)
  SFINAE: SFINAE_Suppress
  Text: unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
warn_unknown_sanitizer_ignored:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unknown-sanitizers
  Regex: unknown sanitizer '(.*)' ignored
  SFINAE: SFINAE_Suppress
  Text: unknown sanitizer '%0' ignored
warn_unknown_warning_specifier:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Frontend
  DefaultSeverity: SEV_Warning
  Group: unknown-warning-option
  Regex: 'unknown (.*) warning specifier: ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'unknown %0 warning specifier: ''%1'''
warn_unlock_but_no_lock:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: releasing (.*) '(.*)' that was not held
  SFINAE: SFINAE_Suppress
  Text: releasing %0 '%1' that was not held
warn_unlock_kind_mismatch:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: releasing (.*) '(.*)' using (?:shared|exclusive) access, expected (?:shared|exclusive) access
  SFINAE: SFINAE_Suppress
  Text: releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
warn_unnecessary_packed:
  ArgsCount: 1
  CategoryName: ''
  Class: CLASS_WARNING
  Component: AST
  DefaultSeverity: SEV_Ignored
  Group: packed
  Regex: packed attribute is unnecessary for (.*)
  SFINAE: SFINAE_Suppress
  Text: packed attribute is unnecessary for %0
warn_unneeded_internal_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unneeded-internal-declaration
  Regex: (?:function|variable) (.*) is not needed and will not be emitted
  SFINAE: SFINAE_Suppress
  Text: '%select{function|variable}0 %1 is not needed and will not be emitted'
warn_unneeded_member_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unneeded-member-function
  Regex: member function (.*) is not needed and will not be emitted
  SFINAE: SFINAE_Suppress
  Text: member function %0 is not needed and will not be emitted
warn_unneeded_static_internal_decl:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unneeded-internal-declaration
  Regex: '''static'' function (.*) declared in header file should be declared ''static inline'''
  SFINAE: SFINAE_Suppress
  Text: '''static'' function %0 declared in header file should be declared ''static inline'''
warn_unreachable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unreachable-code
  Regex: code will never be executed
  SFINAE: SFINAE_Suppress
  Text: code will never be executed
warn_unreachable_break:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unreachable-code-break
  Regex: '''break'' will never be executed'
  SFINAE: SFINAE_Suppress
  Text: '''break'' will never be executed'
warn_unreachable_default:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: covered-switch-default
  Regex: default label in switch which covers all enumeration values
  SFINAE: SFINAE_Suppress
  Text: default label in switch which covers all enumeration values
warn_unreachable_fallthrough_attr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unreachable-code-fallthrough
  Regex: fallthrough annotation in unreachable code
  SFINAE: SFINAE_Suppress
  Text: fallthrough annotation in unreachable code
warn_unreachable_loop_increment:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unreachable-code-loop-increment
  Regex: loop will run at most once \(loop increment never executed\)
  SFINAE: SFINAE_Suppress
  Text: loop will run at most once (loop increment never executed)
warn_unreachable_return:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unreachable-code-return
  Regex: '''return'' will never be executed'
  SFINAE: SFINAE_Suppress
  Text: '''return'' will never be executed'
warn_unsequenced_mod_mod:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unsequenced
  Regex: multiple unsequenced modifications to (.*)
  SFINAE: SFINAE_Suppress
  Text: multiple unsequenced modifications to %0
warn_unsequenced_mod_use:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unsequenced
  Regex: unsequenced modification and access to (.*)
  SFINAE: SFINAE_Suppress
  Text: unsequenced modification and access to %0
warn_unsigned_abs:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: absolute-value
  Regex: taking the absolute value of unsigned type (.*) has no effect
  SFINAE: SFINAE_Suppress
  Text: taking the absolute value of unsigned type %0 has no effect
warn_unsigned_always_true_comparison:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-unsigned-zero-compare
  Regex: result of comparison of (?:(.*)|unsigned expression) (.*) (?:unsigned expression|(.*)) is always (.*)
  SFINAE: SFINAE_Suppress
  Text: result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
warn_unsigned_bitfield_assigned_signed_enum:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: bitfield-enum-conversion
  Regex: assigning value of signed enum type (.*) to unsigned bit-field (.*); negative enumerators of enum (.*) will be converted to positive values
  SFINAE: SFINAE_Suppress
  Text: assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
warn_unsigned_char_always_true_comparison:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-unsigned-char-zero-compare
  Regex: result of comparison of (?:(.*)|char expression) (.*) (?:char expression|(.*)) is always (.*), since char is interpreted as unsigned
  SFINAE: SFINAE_Suppress
  Text: result of comparison of %select{%3|char expression}0 %2 %select{char expression|%3}0 is always %4, since char is interpreted as unsigned
warn_unsigned_enum_always_true_comparison:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: tautological-unsigned-enum-zero-compare
  Regex: result of comparison of (?:(.*)|unsigned enum expression) (.*) (?:unsigned enum expression|(.*)) is always (.*)
  SFINAE: SFINAE_Suppress
  Text: result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
warn_unsupported_branch_protection:
  ArgsCount: 2
  CategoryName: ''
  Class: CLASS_WARNING
  Component: Driver
  DefaultSeverity: SEV_Warning
  Group: branch-protection
  Regex: invalid branch protection option '(.*)' in '(.*)'
  SFINAE: SFINAE_Suppress
  Text: invalid branch protection option '%0' in '%1'
warn_unsupported_branch_protection_spec:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: branch-protection
  Regex: unsupported branch protection specification '(.*)'
  SFINAE: SFINAE_Suppress
  Text: unsupported branch protection specification '%0'
warn_unsupported_lifetime_extension:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: dangling
  Regex: sorry, lifetime extension of (?:temporary|backing array of initializer list) created by aggregate initialization using default member initializer is not supported; lifetime of (?:temporary|backing array) will end at the end of the full-expression
  SFINAE: SFINAE_Suppress
  Text: sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
warn_unsupported_target_attribute:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: (?:unsupported|duplicate|unknown)(?:| architecture| tune CPU) '(.*)' in the '(?:target|target_clones)' attribute string; '(?:target|target_clones)' attribute ignored
  SFINAE: SFINAE_Suppress
  Text: '%select{unsupported|duplicate|unknown}0%select{| architecture| tune CPU}1 ''%2'' in the ''%select{target|target_clones}3'' attribute string; ''%select{target|target_clones}3'' attribute ignored'
warn_unused_but_set_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-but-set-parameter
  Regex: parameter (.*) set but not used
  SFINAE: SFINAE_Suppress
  Text: parameter %0 set but not used
warn_unused_but_set_variable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-but-set-variable
  Regex: variable (.*) set but not used
  SFINAE: SFINAE_Suppress
  Text: variable %0 set but not used
warn_unused_call:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-value
  Regex: ignoring return value of function declared with (.*) attribute
  SFINAE: SFINAE_Suppress
  Text: ignoring return value of function declared with %0 attribute
warn_unused_comma_left_operand:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-value
  Regex: left operand of comma operator has no effect
  SFINAE: SFINAE_Suppress
  Text: left operand of comma operator has no effect
warn_unused_comparison:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-comparison
  Regex: (?:equality|inequality|relational|three-way) comparison result unused
  SFINAE: SFINAE_Suppress
  Text: '%select{equality|inequality|relational|three-way}0 comparison result unused'
warn_unused_const_variable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-const-variable
  Regex: unused variable (.*)
  SFINAE: SFINAE_Suppress
  Text: unused variable %0
warn_unused_constructor:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-value
  Regex: ignoring temporary created by a constructor declared with (.*) attribute
  SFINAE: SFINAE_Suppress
  Text: ignoring temporary created by a constructor declared with %0 attribute
warn_unused_constructor_msg:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-value
  Regex: 'ignoring temporary created by a constructor declared with (.*) attribute: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'ignoring temporary created by a constructor declared with %0 attribute: %1'
warn_unused_container_subscript_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-value
  Regex: container access result unused - container access should not be used for side effects
  SFINAE: SFINAE_Suppress
  Text: container access result unused - container access should not be used for side effects
warn_unused_exception_param:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-exception-parameter
  Regex: unused exception parameter (.*)
  SFINAE: SFINAE_Suppress
  Text: unused exception parameter %0
warn_unused_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-value
  Regex: expression result unused
  SFINAE: SFINAE_Suppress
  Text: expression result unused
warn_unused_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-function
  Regex: unused function (.*)
  SFINAE: SFINAE_Suppress
  Text: unused function %0
warn_unused_label:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-label
  Regex: unused label (.*)
  SFINAE: SFINAE_Suppress
  Text: unused label %0
warn_unused_lambda_capture:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-lambda-capture
  Regex: lambda capture (.*) is not (?:used|required to be captured for this use)
  SFINAE: SFINAE_Suppress
  Text: lambda capture %0 is not %select{used|required to be captured for this use}1
warn_unused_local_typedef:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-local-typedef
  Regex: unused (?:typedef|type alias) (.*)
  SFINAE: SFINAE_Suppress
  Text: unused %select{typedef|type alias}0 %1
warn_unused_member_function:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-member-function
  Regex: unused member function (.*)
  SFINAE: SFINAE_Suppress
  Text: unused member function %0
warn_unused_parameter:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-parameter
  Regex: unused parameter (.*)
  SFINAE: SFINAE_Suppress
  Text: unused parameter %0
warn_unused_private_field:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-private-field
  Regex: private field (.*) is not used
  SFINAE: SFINAE_Suppress
  Text: private field %0 is not used
warn_unused_property_backing_ivar:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-property-ivar
  Regex: ivar (.*) which backs the property is not referenced in this property's accessor
  SFINAE: SFINAE_Suppress
  Text: ivar %0 which backs the property is not referenced in this property's accessor
warn_unused_property_expr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-getter-return-value
  Regex: property access result unused - getters should not be used for side effects
  SFINAE: SFINAE_Suppress
  Text: property access result unused - getters should not be used for side effects
warn_unused_result:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-result
  Regex: ignoring return value of function declared with (.*) attribute
  SFINAE: SFINAE_Suppress
  Text: ignoring return value of function declared with %0 attribute
warn_unused_result_msg:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-result
  Regex: 'ignoring return value of function declared with (.*) attribute: (.*)'
  SFINAE: SFINAE_Suppress
  Text: 'ignoring return value of function declared with %0 attribute: %1'
warn_unused_template:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-template
  Regex: unused (?:function|variable) template (.*)
  SFINAE: SFINAE_Suppress
  Text: unused %select{function|variable}0 template %1
warn_unused_variable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: unused-variable
  Regex: unused variable (.*)
  SFINAE: SFINAE_Suppress
  Text: unused variable %0
warn_unused_voidptr:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-value
  Regex: expression result unused; should this cast be to 'void'\?
  SFINAE: SFINAE_Suppress
  Text: expression result unused; should this cast be to 'void'?
warn_unused_volatile:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: unused-volatile-lvalue
  Regex: expression result unused; assign into a variable to force a volatile load
  SFINAE: SFINAE_Suppress
  Text: expression result unused; assign into a variable to force a volatile load
warn_use_in_invalid_state:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: invalid invocation of method '(.*)' on object '(.*)' while it is in the '(.*)' state
  SFINAE: SFINAE_Suppress
  Text: invalid invocation of method '%0' on object '%1' while it is in the '%2' state
warn_use_of_private_header_outside_module:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Error
  Group: private-header
  Regex: 'use of private header from outside its module: ''(.*)'''
  SFINAE: SFINAE_Suppress
  Text: 'use of private header from outside its module: ''%0'''
warn_use_of_temp_in_invalid_state:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: consumed
  Regex: invalid invocation of method '(.*)' on a temporary object while it is in the '(.*)' state
  SFINAE: SFINAE_Suppress
  Text: invalid invocation of method '%0' on a temporary object while it is in the '%1' state
warn_used_but_marked_unused:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: used-but-marked-unused
  Regex: (.*) was marked unused but was used
  SFINAE: SFINAE_Suppress
  Text: '%0 was marked unused but was used'
warn_user_literal_reserved:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: user-defined-literals
  Regex: user-defined literal suffixes not starting with '_' are reserved(?:; no literal will invoke this operator|)
  SFINAE: SFINAE_Suppress
  Text: user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
warn_using_directive_in_header:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: header-hygiene
  Regex: using namespace directive in global context in header
  SFINAE: SFINAE_Suppress
  Text: using namespace directive in global context in header
warn_utf8_symbol_homoglyph:
  ArgsCount: 2
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode-homoglyph
  Regex: treating Unicode character <U\+(.*)> as identifier character rather than as '(.*)' symbol
  SFINAE: SFINAE_Suppress
  Text: treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
warn_utf8_symbol_zero_width:
  ArgsCount: 1
  CategoryName: Lexical or Preprocessor Issue
  Class: CLASS_WARNING
  Component: Lex
  DefaultSeverity: SEV_Warning
  Group: unicode-zero-width
  Regex: identifier contains Unicode character <U\+(.*)> that is invisible in some environments
  SFINAE: SFINAE_Suppress
  Text: identifier contains Unicode character <U+%0> that is invisible in some environments
warn_va_start_type_is_undefined:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: varargs
  Regex: passing (?:an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword) to 'va_start' has undefined behavior
  SFINAE: SFINAE_Suppress
  Text: passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
warn_var_deref_requires_any_lock:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (?:reading|writing) the value pointed to by (.*) requires holding (?:any mutex|any mutex exclusively)
  SFINAE: SFINAE_Suppress
  Text: '%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1'
warn_var_deref_requires_lock:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (?:reading|writing) the value pointed to by (.*) requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: '%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{''%2''|''%2'' exclusively}3'
warn_var_deref_requires_lock_precise:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-precise
  Regex: (?:reading|writing) the value pointed to by (.*) requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: '%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{''%2''|''%2'' exclusively}3'
warn_var_template_missing:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: undefined-var-template
  Regex: instantiation of variable (.*) required here, but no definition is available
  SFINAE: SFINAE_Suppress
  Text: instantiation of variable %q0 required here, but no definition is available
warn_variable_requires_any_lock:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (?:reading|writing) variable (.*) requires holding (?:any mutex|any mutex exclusively)
  SFINAE: SFINAE_Suppress
  Text: '%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1'
warn_variable_requires_lock:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-analysis
  Regex: (?:reading|writing) variable (.*) requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: '%select{reading|writing}3 variable %1 requires holding %0 %select{''%2''|''%2'' exclusively}3'
warn_variable_requires_lock_precise:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: thread-safety-precise
  Regex: (?:reading|writing) variable (.*) requires holding (.*) (?:'(.*)'|'(.*)' exclusively)
  SFINAE: SFINAE_Suppress
  Text: '%select{reading|writing}3 variable %1 requires holding %0 %select{''%2''|''%2'' exclusively}3'
warn_variable_sized_ivar_visibility:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: objc-flexible-array
  Regex: field (.*) with variable sized type (.*) is not visible to subclasses and can conflict with their instance variables
  SFINAE: SFINAE_Suppress
  Text: field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
warn_variables_not_in_loop_body:
  ArgsCount: 10
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: for-loop-analysis
  Regex: variable(?:s| (.*)|s (.*) and (.*)|s (.*), (.*), and (.*)|s (.*), (.*), (.*), and (.*)) used in loop condition not modified in loop body
  SFINAE: SFINAE_Suppress
  Text: variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
warn_vbase_moved_multiple_times:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: multiple-move-vbase
  Regex: defaulted move assignment operator of (.*) will move assign virtual base class (.*) multiple times
  SFINAE: SFINAE_Suppress
  Text: defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
warn_vector_long_decl_spec_combination:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated
  Regex: Use of 'long' with '__vector' is deprecated
  SFINAE: SFINAE_Suppress
  Text: Use of 'long' with '__vector' is deprecated
warn_vector_mode_deprecated:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: deprecated-attributes
  Regex: specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
  SFINAE: SFINAE_Suppress
  Text: specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
warn_verbatim_block_end_without_start:
  ArgsCount: 1
  CategoryName: Documentation Issue
  Class: CLASS_WARNING
  Component: Comment
  DefaultSeverity: SEV_Ignored
  Group: documentation
  Regex: '''(?:\\|@)(.*)'' command does not terminate a verbatim text block'
  SFINAE: SFINAE_Suppress
  Text: '''%select{\|@}0%1'' command does not terminate a verbatim text block'
warn_vla_used:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: vla
  Regex: variable length array used
  SFINAE: SFINAE_Suppress
  Text: variable length array used
warn_void_pointer_to_enum_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: void-pointer-to-enum-cast
  Regex: cast to smaller integer type (.*) from (.*)
  SFINAE: SFINAE_Suppress
  Text: cast to smaller integer type %1 from %0
warn_void_pointer_to_int_cast:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: void-pointer-to-int-cast
  Regex: cast to smaller integer type (.*) from (.*)
  SFINAE: SFINAE_Suppress
  Text: cast to smaller integer type %1 from %0
warn_wasm_dynamic_exception_spec_ignored:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_EXTENSION
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: wasm-exception-spec
  Regex: dynamic exception specifications with types are currently ignored in wasm
  SFINAE: SFINAE_Suppress
  Text: dynamic exception specifications with types are currently ignored in wasm
warn_weak_identifier_undeclared:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: weak identifier (.*) never declared
  SFINAE: SFINAE_Suppress
  Text: weak identifier %0 never declared
warn_weak_import:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: None
  Regex: an already-declared variable is made a weak_import declaration (.*)
  SFINAE: SFINAE_Suppress
  Text: an already-declared variable is made a weak_import declaration %0
warn_weak_template_vtable:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: weak-template-vtables
  Regex: this warning is no longer in use and will be removed in the next release
  SFINAE: SFINAE_Suppress
  Text: this warning is no longer in use and will be removed in the next release
warn_weak_vtable:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: weak-vtables
  Regex: (.*) has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
  SFINAE: SFINAE_Suppress
  Text: '%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit'
warn_wrong_absolute_value_type:
  ArgsCount: 1
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: absolute-value
  Regex: using (?:integer|floating point|complex) absolute value function (.*) when argument is of (?:integer|floating point|complex) type
  SFINAE: SFINAE_Suppress
  Text: using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
warn_wrong_clang_attr_namespace:
  ArgsCount: 0
  CategoryName: Parse Issue
  Class: CLASS_WARNING
  Component: Parse
  DefaultSeverity: SEV_Warning
  Group: ignored-attributes
  Regex: '''__clang__'' is a predefined macro name, not an attribute scope specifier; did you mean ''_Clang'' instead\?'
  SFINAE: SFINAE_Suppress
  Text: '''__clang__'' is a predefined macro name, not an attribute scope specifier; did you mean ''_Clang'' instead?'
warn_xor_used_as_pow:
  ArgsCount: 2
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: xor-used-as-pow
  Regex: result of '(.*)' is (.*); did you mean exponentiation\?
  SFINAE: SFINAE_Suppress
  Text: result of '%0' is %1; did you mean exponentiation?
warn_xor_used_as_pow_base:
  ArgsCount: 3
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: xor-used-as-pow
  Regex: result of '(.*)' is (.*); did you mean '(.*)'\?
  SFINAE: SFINAE_Suppress
  Text: result of '%0' is %1; did you mean '%2'?
warn_xor_used_as_pow_base_extra:
  ArgsCount: 4
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: xor-used-as-pow
  Regex: result of '(.*)' is (.*); did you mean '(.*)' \((.*)\)\?
  SFINAE: SFINAE_Suppress
  Text: result of '%0' is %1; did you mean '%2' (%3)?
warn_zero_as_null_pointer_constant:
  ArgsCount: 0
  CategoryName: Nullability Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: zero-as-null-pointer-constant
  Regex: zero as null pointer constant
  SFINAE: SFINAE_Suppress
  Text: zero as null pointer constant
warn_zero_size_struct_union_compat:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Ignored
  Group: c++-compat
  Regex: (?:|empty )(?:struct|union) has size 0 in C, (?:size 1|non-zero size) in C\+\+
  SFINAE: SFINAE_Suppress
  Text: '%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++'
warn_zero_size_struct_union_in_extern_c:
  ArgsCount: 0
  CategoryName: Semantic Issue
  Class: CLASS_WARNING
  Component: Sema
  DefaultSeverity: SEV_Warning
  Group: extern-c-compat
  Regex: (?:|empty )(?:struct|union) has size 0 in C, (?:size 1|non-zero size) in C\+\+
  SFINAE: SFINAE_Suppress
  Text: '%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++'
